<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-io/io-2-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Querying File Parameters</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node360">15.2.7. Querying File Parameters</span></h2>
<a href="node359.htm#Node359"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node353.htm#Node353"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node361.htm#Node361"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node353.htm#Node353"> File Manipulation</a>
<b>Next: </b><a href="node361.htm#Node361"> File Info</a>
<b>Previous: </b><a href="node359.htm#Node359"> Querying the Size of a File</a>
<p>
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_FILE_GET_GROUP(<span style="white-space:nowrap">fh</span>, <span style="white-space:nowrap">group</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> fh</TD><TD>file handle (handle)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> group</TD><TD>group that opened the file (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_File_get_group(MPI_File fh, MPI_Group *group) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_File_get_group(fh, group, ierror) <br> TYPE(MPI_File), INTENT(IN) :: <span style="white-space:nowrap">fh</span><br>TYPE(MPI_Group), INTENT(OUT) :: <span style="white-space:nowrap">group</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_FILE_GET_GROUP(FH, GROUP, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">GROUP</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
<font face="sans-serif"> MPI_FILE_GET_GROUP</font> returns  
a duplicate of  
the group  
of the communicator used to open the file  
associated with  
<font face="sans-serif"> fh</font>.  
The group is returned in <font face="sans-serif"> group</font>.   
The user is responsible for freeing <font face="sans-serif"> group</font>.  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_FILE_GET_AMODE(<span style="white-space:nowrap">fh</span>, <span style="white-space:nowrap">amode</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> fh</TD><TD>file handle (handle)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> amode</TD><TD>file access mode used to open the file (integer)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_File_get_amode(MPI_File fh, int *amode) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_File_get_amode(fh, amode, ierror) <br> TYPE(MPI_File), INTENT(IN) :: <span style="white-space:nowrap">fh</span><br>INTEGER, INTENT(OUT) :: <span style="white-space:nowrap">amode</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_FILE_GET_AMODE(FH, AMODE, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">AMODE</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
<font face="sans-serif"> MPI_FILE_GET_AMODE</font> returns, in <font face="sans-serif"> amode</font>,  
the access mode of the file associated with <font face="sans-serif"> fh</font>.  
<P> 
<br><b> Example</b>  
  
  
In Fortran 77, decoding an <font face="sans-serif"> amode</font> bit vector will  
require a routine such as the following:  
<P> 
<br> 
<pre style="background-color:#EFEFEF"><tt><b>SUBROUTINE</b> BIT_QUERY(TEST_BIT, MAX_BIT, AMODE, BIT_FOUND) 
! 
!   TEST <b>IF</b> THE INPUT TEST_BIT IS SET <b>IN</b> THE INPUT AMODE 
!   <b>IF</b> SET, <b>RETURN</b> 1 <b>IN</b> BIT_FOUND, 0 OTHERWISE 
! 
    <b>INTEGER</b> TEST_BIT, AMODE, BIT_FOUND, CP_AMODE, HIFOUND 
    <b>INTEGER</b> L, LBIT, MATCHER, MAX_BIT 
    BIT_FOUND = 0 
    CP_AMODE = AMODE 
100 <b>CONTINUE</b> 
    LBIT = 0 
    HIFOUND = 0 
    <b>DO</b> L = MAX_BIT, 0, -1 
       MATCHER = 2**L 
       <b>IF</b> (CP_AMODE .GE. MATCHER .AND. HIFOUND .EQ. 0) <b>THEN</b> 
          HIFOUND = 1 
          LBIT = MATCHER 
          CP_AMODE = CP_AMODE - MATCHER 
       <b>END</b> <b>IF</b> 
    <b>END</b> <b>DO</b> 
    <b>IF</b> (HIFOUND .EQ. 1 .AND. LBIT .EQ. TEST_BIT) BIT_FOUND = 1 
    <b>IF</b> (BIT_FOUND .EQ. 0 .AND. HIFOUND .EQ. 1 .AND. &amp; 
       CP_AMODE .GT. 0) GO TO 100 
<b>END</b> 
</tt></pre> 
  
<P> 
This routine could be called successively to decode <font face="sans-serif"> amode</font>,  
one bit at a time.  For example, the following code fragment would  
check for <font face="sans-serif"> MPI_MODE_RDONLY</font>.  
<P> 
<br> 
<pre style="background-color:#EFEFEF"><tt><b>CALL</b> BIT_QUERY(<b>MPI_MODE_RDONLY</b>, 30, AMODE, BIT_FOUND) 
<b>IF</b> (BIT_FOUND .EQ. 1) <b>THEN</b> 
   <b>PRINT</b> *, ' FOUND <b>READ</b>-<b>ONLY</b> BIT <b>IN</b> AMODE=', AMODE 
<b>ELSE</b> 
   <b>PRINT</b> *, ' <b>READ</b>-<b>ONLY</b> BIT NOT FOUND <b>IN</b> AMODE=', AMODE 
<b>END</b> <b>IF</b> 
</tt></pre> 
  
  
<P> 

<P>
<hr>
<a href="node359.htm#Node359"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node353.htm#Node353"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node361.htm#Node361"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node353.htm#Node353"> File Manipulation</a>
<b>Next: </b><a href="node361.htm#Node361"> File Info</a>
<b>Previous: </b><a href="node359.htm#Node359"> Querying the Size of a File</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
