<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-part/part-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Communication Completion under Partitioning</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node91">5.2.2. Communication Completion under Partitioning</span></h2>
<a href="node90.htm#Node90"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node89.htm#Node89"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node92.htm#Node92"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node89.htm#Node89"> Semantics of Partitioned Point-to-Point Communication</a>
<b>Next: </b><a href="node92.htm#Node92"> Semantics of Communications in Partitioned Mode</a>
<b>Previous: </b><a href="node90.htm#Node90"> Communication Initialization and Starting with Partitioning</a>
<p>
  
  
<P> 
The functions <font face="sans-serif"> MPI_WAIT</font> and <font face="sans-serif"> MPI_TEST</font> (and  
variants) are used to complete a partitioned  
communication operation.  The completion of a partitioned send  
operation indicates that the sender is now free to call <font face="sans-serif"> MPI_START</font>/<font face="sans-serif"> MPI_STARTALL</font> to restart  
the operation and  
subsequently <font face="sans-serif"> MPI_PREADY</font>, <font face="sans-serif"> MPI_PREADY_RANGE</font> or  
<font face="sans-serif"> MPI_PREADY_LIST</font>. Alternatively, the user can safely free   
the partitioned communication request after the completion of  
the partitioned operation.  
For the sending process, completion of the  
partitioned send operation does not indicate that the  
partitions of the message have all been received.   
<P> 
The completion of a partitioned receive operation through <font face="sans-serif"> MPI_WAIT</font> or  
<font face="sans-serif"> MPI_TEST</font> indicates that the receive buffer contains all of the  
partitions. A function for probing the partial reception of the receive buffer is provided by   
<font face="sans-serif"> MPI_PARRIVED</font>.  
The <font face="sans-serif"> MPI_PARRIVED</font> function can be used to determine if  
the message data for the indicated partition has been received into the receive buffer. Upon success, the  
receiver becomes free to access the indicated partition (as well as any others  
that previously completed for that operation).    
<P> 
  
<TABLE><TR><TD COLSPAN=2>MPI_PARRIVED(<span style="white-space:nowrap">request</span>, <span style="white-space:nowrap">partition</span>, <span style="white-space:nowrap">flag</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> request</TD><TD>partitioned communication request (handle)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> partition</TD><TD>partition to be tested (nonnegative integer)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> flag</TD><TD><font face="sans-serif"> true</font> if operation completed on the specified partition, <font face="sans-serif"> false</font> if not (logical)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Parrived(MPI_Request request, int partition, int *flag) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Parrived(request, partition, flag, ierror) <br> TYPE(MPI_Request), INTENT(IN) :: <span style="white-space:nowrap">request</span><br>INTEGER, INTENT(IN) :: <span style="white-space:nowrap">partition</span><br>LOGICAL, INTENT(OUT) :: <span style="white-space:nowrap">flag</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_PARRIVED(REQUEST, PARTITION, FLAG, IERROR) <br> INTEGER <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">PARTITION</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
<P> 
The function <font face="sans-serif"> MPI_PARRIVED</font> can be used to  
test partial completion of partitioned receive operations.  
A call to <font face="sans-serif"> MPI_PARRIVED</font> on an active partitioned communication request  
returns <font face="sans-serif"> flag</font><font face="sans-serif">  = true</font> if the  
operation identified by <font face="sans-serif"> request</font> for the specified <font face="sans-serif"> partition</font> is complete.    
The request is not marked as complete/inactive by this procedure.  
A subsequent call to an <font face="sans-serif"> MPI</font> completing procedure (e.g., <font face="sans-serif"> MPI_TEST</font>/<font face="sans-serif"> MPI_WAIT</font>) is required to  
complete the operation, as described in Chapter <a href="node55.htm#Node55">Point-to-Point Communication</a>.  
<font face="sans-serif"> MPI_PARRIVED</font> may be called multiple times for a partition.  
<font face="sans-serif"> MPI_PARRIVED</font> may be called with a null or inactive <font face="sans-serif"> request</font>  
argument. In either case, the operation returns with <font face="sans-serif"> flag</font><tt> = true</tt>.  
Calling <font face="sans-serif"> MPI_PARRIVED</font> on a request that does not correspond to a partitioned  
receive operation is erroneous.  
<P> 
Repeated calls to <font face="sans-serif"> MPI_PARRIVED</font> with the same <font face="sans-serif"> request</font> and <font face="sans-serif"> partition</font> arguments will   
eventually return <font face="sans-serif"> flag</font><tt> = true</tt> if the corresponding partitioned send operation has  
been started and all send partitions have been marked as ready. For additional information on <font face="sans-serif"> MPI</font>   
<em> progress</em>  
 see  
Sections <a href="node50.htm#Node50">Progress</a> and <a href="node77.htm#Node77">Semantics of Nonblocking Communication Operations</a>.  
<P> 
 
<br> 
<em> Advice  
        to implementors.</em>  
<P> 
A high quality implementation will eventually return <font face="sans-serif"> flag</font><font face="sans-serif">  =  
true</font> from <font face="sans-serif"> MPI_PARRIVED</font> after all of the corresponding  
<font face="sans-serif"> MPI_PREADY</font> calls have been made for a receive-side partition,   
even if other send partitions are not yet marked as ready.   
 (<em> End of advice to implementors.</em>) <br> 

<P>
<hr>
<a href="node90.htm#Node90"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node89.htm#Node89"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node92.htm#Node92"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node89.htm#Node89"> Semantics of Partitioned Point-to-Point Communication</a>
<b>Next: </b><a href="node92.htm#Node92"> Semantics of Communications in Partitioned Mode</a>
<b>Previous: </b><a href="node90.htm#Node90"> Communication Initialization and Starting with Partitioning</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
