<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-inquiry/inquiry-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Version Inquiries</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node246">10.1.1. Version Inquiries</span></h2>
<a href="node245.htm#Node245"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node245.htm#Node245"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node247.htm#Node247"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node245.htm#Node245"> Implementation Information</a>
<b>Next: </b><a href="node247.htm#Node247"> Environmental Inquiries</a>
<b>Previous: </b><a href="node245.htm#Node245"> Implementation Information</a>
<p>
  
  
In order to cope with changes to the <font face="sans-serif"> MPI</font> standard, there are both compile-time  
and run-time ways to determine which version of the standard is in use in the  
environment one is using.  
<P> 
The ``version'' will be represented by two separate integers, for the version  
and subversion: In C,  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>#define</b> <b>MPI_VERSION</b>    5 
<b>#define</b> <b>MPI_SUBVERSION</b> 0 
</tt></pre> 
  
in Fortran,  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>INTEGER</b> :: <b>MPI_VERSION</b>, <b>MPI_SUBVERSION</b> 
PARAMETER (<b>MPI_VERSION</b>    = 5) 
PARAMETER (<b>MPI_SUBVERSION</b> = 0) 
</tt></pre> 
  
  
<P> 
For runtime determination,  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_GET_VERSION(<span style="white-space:nowrap">version</span>, <span style="white-space:nowrap">subversion</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> version</TD><TD>version number (integer)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> subversion</TD><TD>subversion number (integer)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Get_version(int *version, int *subversion) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Get_version(version, subversion, ierror) <br> INTEGER, INTENT(OUT) :: <span style="white-space:nowrap">version</span>, <span style="white-space:nowrap">subversion</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_GET_VERSION(VERSION, SUBVERSION, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">VERSION</span>, <span style="white-space:nowrap">SUBVERSION</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
<font face="sans-serif"> MPI_GET_VERSION</font> can be called  
at any time in an <font face="sans-serif"> MPI</font> program.  
This function must always be thread-safe, as defined in  
Section <a href="node283.htm#Node283"><font face="sans-serif"> MPI</font> and Threads</a>.  
Valid (<font face="sans-serif"> MPI_VERSION</font>, <font face="sans-serif"> MPI_SUBVERSION</font>) pairs in  
this and previous versions of the <font face="sans-serif"> MPI</font> standard  
are (5,0), (4,1), (4,0), (3,1), (3,0), (2,2), (2,1), (2,0), and (1,2).  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_GET_LIBRARY_VERSION(<span style="white-space:nowrap">version</span>, <span style="white-space:nowrap">resultlen</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> version</TD><TD>version number (string)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> resultlen</TD><TD>Length (in printable characters) of the result returned in <font face="sans-serif"> version</font> (integer)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Get_library_version(char *version, int *resultlen) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Get_library_version(version, resultlen, ierror) <br> CHARACTER(LEN=MPI_MAX_LIBRARY_VERSION_STRING), INTENT(OUT) :: <span style="white-space:nowrap">version</span><br>INTEGER, INTENT(OUT) :: <span style="white-space:nowrap">resultlen</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_GET_LIBRARY_VERSION(VERSION, RESULTLEN, IERROR) <br> CHARACTER*(*) <span style="white-space:nowrap">VERSION</span><br>INTEGER <span style="white-space:nowrap">RESULTLEN</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
This routine returns a string representing the version of the <font face="sans-serif"> MPI</font> library. The version argument is a   
character string for maximum flexibility.  
<P> 
 
<br> 
<em> Advice  
        to implementors.</em>  
<P> 
An implementation of <font face="sans-serif"> MPI</font> should return a different   
string for every change to its source code or build that could be visible   
to the user.  
 (<em> End of advice to implementors.</em>) <br> 
The argument <font face="sans-serif"> version</font> must represent storage that is<font face="sans-serif"> MPI_MAX_LIBRARY_VERSION_STRING</font> characters   
long. <font face="sans-serif"> MPI_GET_LIBRARY_VERSION</font> may write up   
to this many characters into <font face="sans-serif"> version</font>.  
<P> 
The number of characters actually written is returned in the   
output argument, <font face="sans-serif"> resultlen</font>. In C, a null character is   
additionally stored at <font face="sans-serif"> version[resultlen]</font>. The value of   
<font face="sans-serif"> resultlen</font> cannot be larger than   
<font face="sans-serif"> MPI_MAX_LIBRARY_VERSION_STRING</font> - 1. In   
Fortran, <font face="sans-serif"> version</font> is padded on the right with blank characters.   
The value of <font face="sans-serif"> resultlen</font> cannot be larger than   
<font face="sans-serif"> MPI_MAX_LIBRARY_VERSION_STRING</font>.   
<P> 
<font face="sans-serif"> MPI_GET_LIBRARY_VERSION</font> can be called  
at any time in an <font face="sans-serif"> MPI</font> program.  
This function must always be thread-safe, as defined in  
Section <a href="node283.htm#Node283"><font face="sans-serif"> MPI</font> and Threads</a>.  
<P> 

<P>
<hr>
<a href="node245.htm#Node245"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node245.htm#Node245"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node247.htm#Node247"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node245.htm#Node245"> Implementation Information</a>
<b>Next: </b><a href="node247.htm#Node247"> Environmental Inquiries</a>
<b>Previous: </b><a href="node245.htm#Node245"> Implementation Information</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
