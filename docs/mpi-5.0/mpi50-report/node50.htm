<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-terms/terms-2 -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Progress</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h1><span id="Node50">3.9. Progress</span></h1>
<a href="node49.htm#Node49"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node26.htm#Node26"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node51.htm#Node51"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node26.htm#Node26"> <font face="sans-serif"> MPI</font> Terms and Conventions</a>
<b>Next: </b><a href="node51.htm#Node51"> Implementation Issues</a>
<b>Previous: </b><a href="node49.htm#Node49"> Error Handling</a>
<p>
  
<P> 
<P> 
<font face="sans-serif"> MPI</font> communication operations or parallel I/O patterns typically comprise several  
related operations executed in one or multiple <font face="sans-serif"> MPI</font> processes.  
Examples are the point-to-point communications with one <font face="sans-serif"> MPI</font> process executing a  
send operation and another (or the same) <font face="sans-serif"> MPI</font> process executing a receive operation,  
or all <font face="sans-serif"> MPI</font> processes of a group executing a collective operation.  
<P> 
Within each <font face="sans-serif"> MPI</font> process parts of the communication or parallel I/O pattern are  
executed within the <font face="sans-serif"> MPI</font> procedure calls that belong to the operation in  
that <font face="sans-serif"> MPI</font> process, whereas other parts are  
<b> decoupled <font face="sans-serif"> MPI</font> activities</b>,  
i.e., they may be executed within an additional progress thread,  
offloaded to the network interface controller (NIC),  
or executed within other <font face="sans-serif"> MPI</font> procedure calls that are not semantically  
related to the given communication or parallel I/O pattern.  
<P> 
<P> 
An <font face="sans-serif"> MPI</font> procedure invocation is  
<b> blocked</b>  
if it delays its return until some specific activity  
or state-change has occurred in another <font face="sans-serif"> MPI</font> process.  
An <font face="sans-serif"> MPI</font> procedure call that is <em> blocked</em> can be  
<ul> 
 
<li>a <em> nonlocal</em>  
  <font face="sans-serif"> MPI</font> procedure call that delays its return until a specific  
  semantically-related <font face="sans-serif"> MPI</font> call on another <font face="sans-serif"> MPI</font> process, or  
 
<li>a <em> local</em>  
  <font face="sans-serif"> MPI</font> procedure call that delays its return until some unspecific  
  <font face="sans-serif"> MPI</font> call in another <font face="sans-serif"> MPI</font> process causes a specific state-change in  
  that other <font face="sans-serif"> MPI</font> process, or  
 
<li>an <font face="sans-serif"> MPI</font> finalization procedure  
  (<font face="sans-serif"> MPI_FINALIZE</font> or <font face="sans-serif"> MPI_SESSION_FINALIZE</font>)  
  that delays its return or exit because this <font face="sans-serif"> MPI</font> finalization must guarantee  
  that all decoupled <font face="sans-serif"> MPI</font> activities that are related to that <font face="sans-serif"> MPI</font> finalization call  
  in the calling <font face="sans-serif"> MPI</font> process will be executed before this <font face="sans-serif"> MPI</font> finalization is finished.  
  Note that an <font face="sans-serif"> MPI</font> finalization procedure may execute attribute deletion callback functions  
  prior to the finalization (see Section <a href="node272.htm#Node272">Allowing User Functions at <font face="sans-serif"> MPI</font> Finalization</a>);  
  these callback functions may generate additional decoupled <font face="sans-serif"> MPI</font> activities.  
</ul> 
<br> 
 Some examples of a <em> nonlocal</em> blocked <font face="sans-serif"> MPI</font> procedure call:  
<ul> 
 
<li><font face="sans-serif"> MPI_SSEND</font> delays its return until the matching receive operation  
  is <em> started</em> at the destination <font face="sans-serif"> MPI</font> process (for example, by a call  
  to <font face="sans-serif"> MPI_RECV</font> or to <font face="sans-serif"> MPI_IRECV</font>).  
 
<li><font face="sans-serif"> MPI_RECV</font> delays its return until the matching send operation  
  is <em> started</em> at the source <font face="sans-serif"> MPI</font> process (for example, by a call to  
  <font face="sans-serif"> MPI_SEND</font> or to <font face="sans-serif"> MPI_ISEND</font>).  
</ul> 
<br> 
 Some examples of a <em> local</em> blocked <font face="sans-serif"> MPI</font> procedure call:  
<ul> 
 
<li><font face="sans-serif"> MPI_RSEND</font>, if the message data cannot be entirely buffered,  
  delays its return until the destination <font face="sans-serif"> MPI</font> process has received the  
  portion of message data that cannot be buffered, which may require one  
  or more unspecific <font face="sans-serif"> MPI</font> procedure call(s) at the destination <font face="sans-serif"> MPI</font> process.  
 
<li><font face="sans-serif"> MPI_RECV</font>, in case the message was buffered at the sending  
  <font face="sans-serif"> MPI</font> process (e.g. with <font face="sans-serif"> MPI_BSEND</font>), delays its return until  
  the message is received, which may require one or more unspecific <font face="sans-serif"> MPI</font>  
  procedure calls at the sending <font face="sans-serif"> MPI</font> process to send the buffered data.  
</ul> 
<br> 
  
All <font face="sans-serif"> MPI</font> processes are required to  
<b> guarantee progress</b>,  
i.e., all decoupled <font face="sans-serif"> MPI</font> activities will eventually be executed.  
This guarantee is required to be provided during  
<ul> 
 
<li>blocked <font face="sans-serif"> MPI</font> procedures, and  
 
<li>repeatedly called <font face="sans-serif"> MPI</font> test procedures (see below) that return <font face="sans-serif"> flag</font><font face="sans-serif"> =false</font>.  
</ul> 
<br> 
The <em> progress</em> must be provided independently of whether a decoupled  
<font face="sans-serif"> MPI</font> activity belongs to a specific session or to the World Model  
(see Sections <a href="node268.htm#Node268">The World Model</a> and <a href="node273.htm#Node273">The Sessions Model</a>).  
Other ways of fulfilling this guarantee are possible and permitted  
(for example, a dedicated progress thread or off-loading to a network interface controller (NIC)).  
<P> 
<font face="sans-serif"> MPI</font> test procedures are  
<font face="sans-serif"> MPI_TEST</font>, <font face="sans-serif"> MPI_TESTANY</font>, <font face="sans-serif"> MPI_TESTALL</font>, <font face="sans-serif"> MPI_TESTSOME</font>,  
<font face="sans-serif"> MPI_IPROBE</font>, <font face="sans-serif"> MPI_IMPROBE</font>, <font face="sans-serif"> MPI_REQUEST_GET_STATUS</font>,  
<font face="sans-serif"> MPI_WIN_TEST</font>, and <font face="sans-serif"> MPI_PARRIVED</font>.  
<P> 
<P> 
<b> Strong progress</b>  
is provided by an <font face="sans-serif"> MPI</font> implementation if all <em> local</em> procedures return independently  
of <font face="sans-serif"> MPI</font> procedure calls in other <font face="sans-serif"> MPI</font> processes (operation-related or not).  
An <font face="sans-serif"> MPI</font> implementation provides <b> weak progress</b>  
if it does not provide <em> strong progress</em>.  
<P> 
<P> 
 
<br> 
<em> Advice to users.</em>  
<P> 
The type of <em> progress</em> may influence the performance of <font face="sans-serif"> MPI</font> operations.  
A correct <font face="sans-serif"> MPI</font> application must be written under the assumption that  
only <em> weak progress</em> is provided.  
Every <font face="sans-serif"> MPI</font> application that is correct under <em> weak progress</em> will be  
correctly executed if <em> strong progress</em> is provided.  
In addition, the <font face="sans-serif"> MPI</font> standard is designed such that correctness under  
the assumption of <em> strong progress</em> should imply also correctness if only  
<em> weak progress</em> is provided by the implementation.  
 (<em> End of advice to users.</em>) <br> 
 
<br> 
<em> Rationale.</em>  
<P> 
<font face="sans-serif"> MPI</font> does not guarantee progress when using synchronization methods that are not  
based on <font face="sans-serif"> MPI</font> procedures.  
Without guaranteed <em> strong progress</em> in <font face="sans-serif"> MPI</font> this may lead to a <em> deadlock</em>,  
see for example Section <a href="node48.htm#Node48">Processes</a> and  
Example <a href="node342.htm#Node342">Progress</a> in Section <a href="node342.htm#Node342">Progress</a>.  
 (<em> End of rationale.</em>) <br> 
  
For further rules, see in Section <a href="node32.htm#Node32"><font face="sans-serif"> MPI</font> Procedures</a> the definition of <em> local</em> <font face="sans-serif"> MPI</font> procedures,  
and all references to <em> progress</em> in the  
<a href="node627.htm#Node627">general index</a>.  
<P> 

<P>
<hr>
<a href="node49.htm#Node49"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node26.htm#Node26"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node51.htm#Node51"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node26.htm#Node26"> <font face="sans-serif"> MPI</font> Terms and Conventions</a>
<b>Next: </b><a href="node51.htm#Node51"> Implementation Issues</a>
<b>Previous: </b><a href="node49.htm#Node49"> Error Handling</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
