<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from appLang-FNames -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>I/O Fortran Bindings</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node603">22.5.12. I/O Fortran Bindings</span></h2>
<a href="node602.htm#Node602"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node591.htm#Node591"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node604.htm#Node604"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node591.htm#Node591"> Fortran Bindings with <tt>mpif.h</tt> or the <tt>mpi</tt> Module</a>
<b>Next: </b><a href="node604.htm#Node604"> Language Bindings Fortran Bindings</a>
<b>Previous: </b><a href="node602.htm#Node602"> External Interfaces Fortran Bindings</a>
<p>
  <tt> MPI_CONVERSION_FN_NULL(USERBUF, DATATYPE, COUNT, FILEBUF, POSITION, EXTRA_STATE, IERROR) <br> &lt;TYPE&gt; <span style="white-space:nowrap">USERBUF(*)</span>, <span style="white-space:nowrap">FILEBUF(*)</span><br>INTEGER <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">POSITION</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span> <br></tt>  
  <tt> MPI_FILE_CLOSE(FH, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_FILE_DELETE(FILENAME, INFO, IERROR) <br> CHARACTER*(*) <span style="white-space:nowrap">FILENAME</span><br>INTEGER <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_FILE_GET_AMODE(FH, AMODE, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">AMODE</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_FILE_GET_ATOMICITY(FH, FLAG, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
  <tt> MPI_FILE_GET_BYTE_OFFSET(FH, OFFSET, DISP, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span>, <span style="white-space:nowrap">DISP</span> <br></tt>  
  <tt> MPI_FILE_GET_GROUP(FH, GROUP, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">GROUP</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_FILE_GET_INFO(FH, INFO_USED, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">INFO_USED</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_FILE_GET_POSITION(FH, OFFSET, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span> <br></tt>  
  <tt> MPI_FILE_GET_POSITION_SHARED(FH, OFFSET, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span> <br></tt>  
  <tt> MPI_FILE_GET_SIZE(FH, SIZE, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">SIZE</span> <br></tt>  
  <tt> MPI_FILE_GET_TYPE_EXTENT(FH, DATATYPE, EXTENT, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTENT</span> <br></tt>  
  <tt> MPI_FILE_GET_VIEW(FH, DISP, ETYPE, FILETYPE, DATAREP, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">ETYPE</span>, <span style="white-space:nowrap">FILETYPE</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">DISP</span><br>CHARACTER*(*) <span style="white-space:nowrap">DATAREP</span> <br></tt>  
  <tt> MPI_FILE_IREAD(FH, BUF, COUNT, DATATYPE, REQUEST, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_IREAD_ALL(FH, BUF, COUNT, DATATYPE, REQUEST, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_IREAD_AT(FH, OFFSET, BUF, COUNT, DATATYPE, REQUEST, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_IREAD_AT_ALL(FH, OFFSET, BUF, COUNT, DATATYPE, REQUEST, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_IREAD_SHARED(FH, BUF, COUNT, DATATYPE, REQUEST, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_IWRITE(FH, BUF, COUNT, DATATYPE, REQUEST, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_IWRITE_ALL(FH, BUF, COUNT, DATATYPE, REQUEST, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_IWRITE_AT(FH, OFFSET, BUF, COUNT, DATATYPE, REQUEST, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_IWRITE_AT_ALL(FH, OFFSET, BUF, COUNT, DATATYPE, REQUEST, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_IWRITE_SHARED(FH, BUF, COUNT, DATATYPE, REQUEST, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_OPEN(COMM, FILENAME, AMODE, INFO, FH, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">AMODE</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">IERROR</span><br>CHARACTER*(*) <span style="white-space:nowrap">FILENAME</span> <br></tt>  
  <tt> MPI_FILE_PREALLOCATE(FH, SIZE, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">SIZE</span> <br></tt>  
  <tt> MPI_FILE_READ(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_READ_ALL(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_READ_ALL_BEGIN(FH, BUF, COUNT, DATATYPE, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_READ_ALL_END(FH, BUF, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_READ_AT(FH, OFFSET, BUF, COUNT, DATATYPE, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_READ_AT_ALL(FH, OFFSET, BUF, COUNT, DATATYPE, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_READ_AT_ALL_BEGIN(FH, OFFSET, BUF, COUNT, DATATYPE, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_READ_AT_ALL_END(FH, BUF, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_READ_ORDERED(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_READ_ORDERED_BEGIN(FH, BUF, COUNT, DATATYPE, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_READ_ORDERED_END(FH, BUF, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_READ_SHARED(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_SEEK(FH, OFFSET, WHENCE, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">WHENCE</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span> <br></tt>  
  <tt> MPI_FILE_SEEK_SHARED(FH, OFFSET, WHENCE, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">WHENCE</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span> <br></tt>  
  <tt> MPI_FILE_SET_ATOMICITY(FH, FLAG, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
  <tt> MPI_FILE_SET_INFO(FH, INFO, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_FILE_SET_SIZE(FH, SIZE, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">SIZE</span> <br></tt>  
  <tt> MPI_FILE_SET_VIEW(FH, DISP, ETYPE, FILETYPE, DATAREP, INFO, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">ETYPE</span>, <span style="white-space:nowrap">FILETYPE</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">DISP</span><br>CHARACTER*(*) <span style="white-space:nowrap">DATAREP</span> <br></tt>  
  <tt> MPI_FILE_SYNC(FH, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_FILE_WRITE(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_WRITE_ALL(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_WRITE_ALL_BEGIN(FH, BUF, COUNT, DATATYPE, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_WRITE_ALL_END(FH, BUF, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_WRITE_AT(FH, OFFSET, BUF, COUNT, DATATYPE, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_WRITE_AT_ALL(FH, OFFSET, BUF, COUNT, DATATYPE, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_WRITE_AT_ALL_BEGIN(FH, OFFSET, BUF, COUNT, DATATYPE, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">OFFSET</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_WRITE_AT_ALL_END(FH, BUF, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_WRITE_ORDERED(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_WRITE_ORDERED_BEGIN(FH, BUF, COUNT, DATATYPE, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_WRITE_ORDERED_END(FH, BUF, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_FILE_WRITE_SHARED(FH, BUF, COUNT, DATATYPE, STATUS, IERROR) <br> INTEGER <span style="white-space:nowrap">FH</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span><br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
  <tt> MPI_REGISTER_DATAREP(DATAREP, READ_CONVERSION_FN, WRITE_CONVERSION_FN, DTYPE_FILE_EXTENT_FN, EXTRA_STATE, IERROR) <br> CHARACTER*(*) <span style="white-space:nowrap">DATAREP</span><br>EXTERNAL <span style="white-space:nowrap">READ_CONVERSION_FN</span>, <span style="white-space:nowrap">WRITE_CONVERSION_FN</span>, <span style="white-space:nowrap">DTYPE_FILE_EXTENT_FN</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span><br>INTEGER <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 

<P>
<hr>
<a href="node602.htm#Node602"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node591.htm#Node591"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node604.htm#Node604"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node591.htm#Node591"> Fortran Bindings with <tt>mpif.h</tt> or the <tt>mpi</tt> Module</a>
<b>Next: </b><a href="node604.htm#Node604"> Language Bindings Fortran Bindings</a>
<b>Previous: </b><a href="node602.htm#Node602"> External Interfaces Fortran Bindings</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
