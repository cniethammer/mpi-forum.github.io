<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-one-side/one-side-2-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Window Info</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node317">13.2.7. Window Info</span></h2>
<a href="node316.htm#Node316"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node310.htm#Node310"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node318.htm#Node318"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node310.htm#Node310"> Initialization</a>
<b>Next: </b><a href="node318.htm#Node318"> Communication Calls</a>
<b>Previous: </b><a href="node316.htm#Node316"> Window Attributes</a>
<p>
  
<P> 
Hints specified via info  
(see Chapter <a href="node265.htm#Node265">The <font face="sans-serif"> Info</font> Object</a>)  
allow a user to provide information  
to direct optimization.  
Providing hints may enable an implementation to deliver increased  
performance or use system resources more efficiently.  
As described in Chapter <a href="node265.htm#Node265">The <font face="sans-serif"> Info</font> Object</a>,  
an implementation is free to ignore all hints; however, applications  
must comply with any info hints they provide that are used by the <font face="sans-serif"> MPI</font>  
implementation (i.e., are returned by a call to  
<font face="sans-serif"> MPI_WIN_GET_INFO</font>) and that place a restriction on the  
behavior of the application.  
Hints are specified on a per window basis,  
in window creation functions and <font face="sans-serif"> MPI_WIN_SET_INFO</font>,  
via the opaque <font face="sans-serif"> info</font> object.  
When an info object that specifies a subset of valid hints is passed to  
<font face="sans-serif"> MPI_WIN_SET_INFO</font>   
there will be no effect on  
previously set or default hints that the <font face="sans-serif"> info</font> does not specify.   
<P> 
 
<br> 
<em> Advice  
        to implementors.</em>  
<P> 
It may happen that a program is coded with hints for one system, and  
later executes on another system that does not support these hints.  
In general, unsupported hints should simply be ignored.  
Needless to say, no hint can be mandatory.  
However, for each hint used by a specific implementation,  
a default value must be provided  
when the user does not specify a value for  
the hint.   
 (<em> End of advice to implementors.</em>) <br> 
<TABLE><TR><TD COLSPAN=2>MPI_WIN_SET_INFO(<span style="white-space:nowrap">win</span>, <span style="white-space:nowrap">info</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> INOUT</span> win</TD><TD>window object (handle)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> info</TD><TD>info argument (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Win_set_info(MPI_Win win, MPI_Info info) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Win_set_info(win, info, ierror) <br> TYPE(MPI_Win), INTENT(IN) :: <span style="white-space:nowrap">win</span><br>TYPE(MPI_Info), INTENT(IN) :: <span style="white-space:nowrap">info</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_WIN_SET_INFO(WIN, INFO, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
<font face="sans-serif"> MPI_WIN_SET_INFO</font> updates the hints of the window  
associated with <font face="sans-serif"> win</font> using the hints provided in <font face="sans-serif"> info</font>.  
This operation has no effect on previously set or defaulted hints that  
are not specified by <font face="sans-serif"> info</font>.  It also has no effect on previously  
set or defaulted hints that are specified by <font face="sans-serif"> info</font>, but are  
ignored by the <font face="sans-serif"> MPI</font> implementation in this call to  
<font face="sans-serif"> MPI_WIN_SET_INFO</font>.  
The procedure is collective over the group of <font face="sans-serif"> win</font>.  
The entries in the info object may be different on each <font face="sans-serif"> MPI</font> process,  
but any info entries that an implementation requires to be the same on all <font face="sans-serif"> MPI</font> processes  
must appear with the same value in each <font face="sans-serif"> MPI</font> process's info object.  
<P> 
 
<br> 
<em> Advice to users.</em>  
<P> 
Some info items that an implementation can use when it creates a window  
cannot easily be changed once the window has been created.  
Thus, an implementation may ignore hints issued in this call that it would have accepted in a creation call.  
An implementation may also be unable to update certain info hints in a call to <font face="sans-serif"> MPI_WIN_SET_INFO</font>.  
<font face="sans-serif"> MPI_WIN_GET_INFO</font> can be used to determine whether info  
changes were ignored by the implementation.  
 (<em> End of advice to users.</em>) <br> 
<TABLE><TR><TD COLSPAN=2>MPI_WIN_GET_INFO(<span style="white-space:nowrap">win</span>, <span style="white-space:nowrap">info_used</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> win</TD><TD>window object (handle)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> info_used</TD><TD>new info object (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Win_get_info(MPI_Win win, MPI_Info *info_used) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Win_get_info(win, info_used, ierror) <br> TYPE(MPI_Win), INTENT(IN) :: <span style="white-space:nowrap">win</span><br>TYPE(MPI_Info), INTENT(OUT) :: <span style="white-space:nowrap">info_used</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_WIN_GET_INFO(WIN, INFO_USED, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">INFO_USED</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
<font face="sans-serif"> MPI_WIN_GET_INFO</font> returns a new info object containing  
the hints of the window associated with <font face="sans-serif"> win</font>.  
The current setting of all hints related to this window is returned in  
<font face="sans-serif"> info_used</font>.  An <font face="sans-serif"> MPI</font> implementation is required to return all hints  
that are supported by the implementation and have default values  
specified; any user-supplied hints that were not ignored by the  
implementation; and any additional hints that were set by the  
implementation.  
If no such hints exist, a handle to a newly created info object is returned that contains no key/value pair.  
The user is responsible for freeing <font face="sans-serif"> info_used</font> via <font face="sans-serif"> MPI_INFO_FREE</font>.  
<P> 

<P>
<hr>
<a href="node316.htm#Node316"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node310.htm#Node310"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node318.htm#Node318"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node310.htm#Node310"> Initialization</a>
<b>Next: </b><a href="node318.htm#Node318"> Communication Calls</a>
<b>Previous: </b><a href="node316.htm#Node316"> Window Attributes</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
