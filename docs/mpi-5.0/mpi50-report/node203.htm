<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-context/context-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Inter-Communication Examples</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node203">8.6.3. Inter-Communication Examples</span></h2>
<a href="node202.htm#Node202"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node200.htm#Node200"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node203.htm#Node204"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node200.htm#Node200"> Inter-Communication</a>
<b>Next: </b><a href="node203.htm#Node204"> Example 1: Three-Group ``Pipeline''</a>
<b>Previous: </b><a href="node202.htm#Node202"> Inter-Communicator Operations</a>
<p>
  
<P> 
<ul> 
</ul> 

<P>
<hr>
<a href="node202.htm#Node202"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node200.htm#Node200"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node203.htm#Node204"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node200.htm#Node200"> Inter-Communication</a>
<b>Next: </b><a href="node203.htm#Node204"> Example 1: Three-Group ``Pipeline''</a>
<b>Previous: </b><a href="node202.htm#Node202"> Inter-Communicator Operations</a>
<p>
<hr><h3><span id="Node204">8.6.3.1. Example 1: Three-Group ``Pipeline''</span></h3>
<a href="node203.htm#Node203"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node203.htm#Node203"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node203.htm#Node205"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node203.htm#Node203"> Inter-Communication Examples</a>
<b>Next: </b><a href="node203.htm#Node205"> Example 2: Three-Group ``Ring''</a>
<b>Previous: </b><a href="node203.htm#Node203"> Inter-Communication Examples</a>
<p>
  
<P> 
  <div style="text-align:center"><P><img width=997 height=246 src="context-fig-1.gif" alt="Image file"><P>
</div>  
  <br> 
<b>Figure 20: </b><span id="Figure20">Three-group pipeline</span><P> 
  
    
  
As shown in Figure <a href="node203.htm#Figure20">20</a>,  
groups 0 and 1 communicate. Groups 1 and 2 communicate. Therefore, group 0  
requires one inter-communicator, group 1 requires two  
inter-communicators, and group 2 requires 1 inter-communicator.  
<P> 
<br><b> Example</b>  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>int</b> main(<b>int</b> argc, <b>char</b> *argv[]) 
{ 
  <b>MPI_Comm</b>   myComm;       /* intra-communicator of local sub-group */ 
  <b>MPI_Comm</b>   myFirstComm;  /* inter-communicator */ 
  <b>MPI_Comm</b>   mySecondComm; /* second inter-communicator (group 1 only) */ 
  <b>int</b> membershipKey; 
  <b>int</b> rank; 
 
  <b>MPI_Init</b>(&amp;argc, &amp;argv); 
  <b>MPI_Comm_rank</b>(<b>MPI_COMM_WORLD</b>, &amp;rank); 
 
  /* User code must generate membershipKey in the range [0, 1, 2] */ 
  membershipKey = rank % 3; 
 
  /* Build intra-communicator <b>for</b> local sub-group */ 
  <b>MPI_Comm_split</b>(<b>MPI_COMM_WORLD</b>, membershipKey, rank, &amp;myComm); 
 
  /* Build inter-communicators. Tags are hard-coded. */ 
  <b>if</b> (membershipKey == 0) 
  {                     /* Group 0 communicates with group 1. */ 
    <b>MPI_Intercomm_create</b>(myComm, 0, <b>MPI_COMM_WORLD</b>, 1, 
                         1, &amp;myFirstComm); 
  } 
  <b>else</b> <b>if</b> (membershipKey == 1) 
  {              /* Group 1 communicates with groups 0 and 2. */ 
    <b>MPI_Intercomm_create</b>(myComm, 0, <b>MPI_COMM_WORLD</b>, 0, 
                         1, &amp;myFirstComm); 
    <b>MPI_Intercomm_create</b>(myComm, 0, <b>MPI_COMM_WORLD</b>, 2, 
                         12, &amp;mySecondComm); 
  } 
  <b>else</b> <b>if</b> (membershipKey == 2) 
  {                     /* Group 2 communicates with group 1. */ 
    <b>MPI_Intercomm_create</b>(myComm, 0, <b>MPI_COMM_WORLD</b>, 1, 
                         12, &amp;myFirstComm); 
  } 
 
  /* Do work ... */ 
 
  <b>switch</b>(membershipKey)  /* free communicators appropriately */ 
  { 
  <b>case</b> 1: 
     <b>MPI_Comm_free</b>(&amp;mySecondComm); 
  <b>case</b> 0: 
  <b>case</b> 2: 
     <b>MPI_Comm_free</b>(&amp;myFirstComm); 
     <b>break</b>; 
  } 
 
  <b>MPI_Finalize</b>(); 
  <b>return</b> 0; 
} 
</tt></pre> 
  
  
<P> 

<P>
<hr>
<a href="node203.htm#Node203"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node203.htm#Node203"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node203.htm#Node205"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node203.htm#Node203"> Inter-Communication Examples</a>
<b>Next: </b><a href="node203.htm#Node205"> Example 2: Three-Group ``Ring''</a>
<b>Previous: </b><a href="node203.htm#Node203"> Inter-Communication Examples</a>
<p>
<hr><h3><span id="Node205">8.6.3.2. Example 2: Three-Group ``Ring''</span></h3>
<a href="node203.htm#Node204"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node203.htm#Node203"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node206.htm#Node206"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node203.htm#Node203"> Inter-Communication Examples</a>
<b>Next: </b><a href="node206.htm#Node206"> Caching</a>
<b>Previous: </b><a href="node203.htm#Node204"> Example 1: Three-Group ``Pipeline''</a>
<p>
  
<P> 
  <div style="text-align:center"><P><img width=1117 height=322 src="context-fig-2.gif" alt="Image file"><P>
</div>  
  <br> 
<b>Figure 21: </b><span id="Figure21">Three-group ring</span><P> 
  
    
  
As shown in Figure <a href="node203.htm#Figure21">21</a>,  
groups 0 and 1 communicate. Groups 1 and 2 communicate. Groups 0 and 2  
communicate. Therefore, each requires two inter-communicators.  
<P> 
<br><b> Example</b>  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>int</b> main(<b>int</b> argc, <b>char</b> *argv[]) 
{ 
  <b>MPI_Comm</b>   myComm;      /* intra-communicator of local sub-group */ 
  <b>MPI_Comm</b>   myFirstComm; /* inter-communicators */ 
  <b>MPI_Comm</b>   mySecondComm; 
  <b>int</b> membershipKey; 
  <b>int</b> rank; 
 
  <b>MPI_Init</b>(&amp;argc, &amp;argv); 
  <b>MPI_Comm_rank</b>(<b>MPI_COMM_WORLD</b>, &amp;rank); 
  ... 
 
  /* User code must generate membershipKey in the range [0, 1, 2] */ 
  membershipKey = rank % 3; 
 
  /* Build intra-communicator <b>for</b> local sub-group */ 
  <b>MPI_Comm_split</b>(<b>MPI_COMM_WORLD</b>, membershipKey, rank, &amp;myComm); 
 
  /* Build inter-communicators. Tags are hard-coded. */ 
  <b>if</b> (membershipKey == 0) 
  {             /* Group 0 communicates with groups 1 and 2. */ 
    <b>MPI_Intercomm_create</b>(myComm, 0, <b>MPI_COMM_WORLD</b>, 1, 
                         1, &amp;myFirstComm); 
    <b>MPI_Intercomm_create</b>(myComm, 0, <b>MPI_COMM_WORLD</b>, 2, 
                         2, &amp;mySecondComm); 
  } 
  <b>else</b> <b>if</b> (membershipKey == 1) 
  {         /* Group 1 communicates with groups 0 and 2. */ 
    <b>MPI_Intercomm_create</b>(myComm, 0, <b>MPI_COMM_WORLD</b>, 0, 
                         1, &amp;myFirstComm); 
    <b>MPI_Intercomm_create</b>(myComm, 0, <b>MPI_COMM_WORLD</b>, 2, 
                         12, &amp;mySecondComm); 
  } 
  <b>else</b> <b>if</b> (membershipKey == 2) 
  {        /* Group 2 communicates with groups 0 and 1. */ 
    <b>MPI_Intercomm_create</b>(myComm, 0, <b>MPI_COMM_WORLD</b>, 0, 
                         2, &amp;myFirstComm); 
    <b>MPI_Intercomm_create</b>(myComm, 0, <b>MPI_COMM_WORLD</b>, 1, 
                         12, &amp;mySecondComm); 
  } 
 
  /* Do some work ... */ 
 
  /* Then free communicators before terminating... */ 
  <b>MPI_Comm_free</b>(&amp;myFirstComm); 
  <b>MPI_Comm_free</b>(&amp;mySecondComm); 
  <b>MPI_Comm_free</b>(&amp;myComm); 
  <b>MPI_Finalize</b>(); 
  <b>return</b> 0; 
} 
</tt></pre> 
  
  
  <P> 

<P>
<hr>
<a href="node203.htm#Node204"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node203.htm#Node203"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node206.htm#Node206"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node203.htm#Node203"> Inter-Communication Examples</a>
<b>Next: </b><a href="node206.htm#Node206"> Caching</a>
<b>Previous: </b><a href="node203.htm#Node204"> Example 1: Three-Group ``Pipeline''</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
