<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from appLang-F2008Names -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>External Interfaces Fortran 2008 Bindings</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node585">22.4.11. External Interfaces Fortran 2008 Bindings</span></h2>
<a href="node584.htm#Node584"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node574.htm#Node574"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node586.htm#Node586"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node574.htm#Node574"> Fortran 2008 Bindings with the <tt>mpi_f08</tt> Module</a>
<b>Next: </b><a href="node586.htm#Node586"> I/O Fortran 2008 Bindings</a>
<b>Previous: </b><a href="node584.htm#Node584"> One-Sided Communications Fortran 2008 Bindings</a>
<p>
  <tt> MPI_Grequest_complete(request, ierror) <br> TYPE(MPI_Request), INTENT(IN) :: <span style="white-space:nowrap">request</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <tt> MPI_Grequest_start(query_fn, free_fn, cancel_fn, extra_state, request, ierror) <br> PROCEDURE(MPI_Grequest_query_function) :: <span style="white-space:nowrap">query_fn</span><br>PROCEDURE(MPI_Grequest_free_function) :: <span style="white-space:nowrap">free_fn</span><br>PROCEDURE(MPI_Grequest_cancel_function) :: <span style="white-space:nowrap">cancel_fn</span><br>INTEGER(KIND=MPI_ADDRESS_KIND), INTENT(IN) :: <span style="white-space:nowrap">extra_state</span><br>TYPE(MPI_Request), INTENT(OUT) :: <span style="white-space:nowrap">request</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <tt> MPI_Status_set_cancelled(status, flag, ierror) <br> TYPE(MPI_Status), INTENT(INOUT) :: <span style="white-space:nowrap">status</span><br>LOGICAL, INTENT(IN) :: <span style="white-space:nowrap">flag</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <tt> MPI_Status_set_elements(status, datatype, count, ierror) <br> TYPE(MPI_Status), INTENT(INOUT) :: <span style="white-space:nowrap">status</span><br>TYPE(MPI_Datatype), INTENT(IN) :: <span style="white-space:nowrap">datatype</span><br>INTEGER, INTENT(IN) :: <span style="white-space:nowrap">count</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <tt> MPI_Status_set_elements(status, datatype, count, ierror) !(_c) <br> TYPE(MPI_Status), INTENT(INOUT) :: <span style="white-space:nowrap">status</span><br>TYPE(MPI_Datatype), INTENT(IN) :: <span style="white-space:nowrap">datatype</span><br>INTEGER(KIND=MPI_COUNT_KIND), INTENT(IN) :: <span style="white-space:nowrap">count</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <tt> MPI_Status_set_error(status, err, ierror) <br> TYPE(MPI_Status), INTENT(INOUT) :: <span style="white-space:nowrap">status</span><br>INTEGER, INTENT(IN) :: <span style="white-space:nowrap">err</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <tt> MPI_Status_set_source(status, source, ierror) <br> TYPE(MPI_Status), INTENT(INOUT) :: <span style="white-space:nowrap">status</span><br>INTEGER, INTENT(IN) :: <span style="white-space:nowrap">source</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <tt> MPI_Status_set_tag(status, tag, ierror) <br> TYPE(MPI_Status), INTENT(INOUT) :: <span style="white-space:nowrap">status</span><br>INTEGER, INTENT(IN) :: <span style="white-space:nowrap">tag</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
<P> 

<P>
<hr>
<a href="node584.htm#Node584"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node574.htm#Node574"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node586.htm#Node586"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node574.htm#Node574"> Fortran 2008 Bindings with the <tt>mpi_f08</tt> Module</a>
<b>Next: </b><a href="node586.htm#Node586"> I/O Fortran 2008 Bindings</a>
<b>Previous: </b><a href="node584.htm#Node584"> One-Sided Communications Fortran 2008 Bindings</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
