<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-binding/binding-2-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Problems With Fortran Bindings for <font face="sans-serif"> MPI</font></title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node479">20.1.10. Problems With Fortran Bindings for  MPI</span></h2>
<a href="node475.htm#Node478"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node466.htm#Node466"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node480.htm#Node480"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node466.htm#Node466"> Support for Fortran</a>
<b>Next: </b><a href="node480.htm#Node480"> Problems Due to Strong Typing</a>
<b>Previous: </b><a href="node475.htm#Node478"> Communication With Size-specific Types</a>
<p>
  
This section discusses a number of problems that may arise  
when using <font face="sans-serif"> MPI</font> in a Fortran program. It is intended as  
advice to users, and clarifies how <font face="sans-serif"> MPI</font> interacts with  
Fortran. It is intended to clarify, not add to, this standard.  
<P> 
As noted in the original <font face="sans-serif"> MPI</font> specification, the interface violates  
the Fortran standard in several ways. While these may cause few problems  
for Fortran 77 programs, they become more significant for Fortran 90  
programs, so that users must exercise care when using new Fortran 90  
features.  
With Fortran 2008 and the semantics defined in  
TS 29113, most violations  
are resolved, and this is hinted at in an addendum to each item.  
The violations were originally adopted and have been  
retained because they are important for the usability of <font face="sans-serif"> MPI</font>.  The  
rest of this section describes the potential problems in detail.  
<P> 
The following <font face="sans-serif"> MPI</font> features are inconsistent with Fortran 90 and Fortran 77.  
<ol> 
 
1. An <font face="sans-serif"> MPI</font> subroutine with a choice argument may be  
called with different argument types.  
When using the <tt>mpi_f08</tt> module  
together with a compiler that supports Fortran 2008 with  
TS 29113, this problem is resolved.  
 
<br> 
2. An <font face="sans-serif"> MPI</font> subroutine with an assumed-size dummy argument may  
be passed an actual scalar argument.  
This is only solved for choice buffers through the use of <tt> DIMENSION(..)</tt>.  
 
<br> 
3. Nonblocking and split-collective <font face="sans-serif"> MPI</font> routines assume that actual arguments are  
passed by address or descriptor and that arguments and the associated data are not copied on  
entrance to or exit from the subroutine.  
This problem is solved with the use of the  
<tt> ASYNCHRONOUS</tt> attribute.  
 
<br> 
4. An <font face="sans-serif"> MPI</font> implementation may read or modify user data (e.g.,  
communication buffers used by nonblocking communications) concurrently  
with a user program that is executing outside  
of <font face="sans-serif"> MPI</font> calls.  
This problem is resolved by relying on the extended  
semantics of the <tt> ASYNCHRONOUS</tt> attribute as specified in  
TS 29113.  
 
<br> 
5. Several named ``constants,'' such as <font face="sans-serif"> MPI_BOTTOM</font>,  
  <font face="sans-serif"> MPI_IN_PLACE</font>,  
<font face="sans-serif"> MPI_STATUS_IGNORE</font>, <font face="sans-serif"> MPI_STATUSES_IGNORE</font>,  
<font face="sans-serif"> MPI_ERRCODES_IGNORE</font>,  
<font face="sans-serif"> MPI_UNWEIGHTED</font>,  
<font face="sans-serif"> MPI_WEIGHTS_EMPTY</font>,  
<font face="sans-serif"> MPI_ARGV_NULL</font>, and  
<font face="sans-serif"> MPI_ARGVS_NULL</font>  
are not ordinary Fortran constants and require a special  
implementation. See Section <a href="node38.htm#Node38">Named Constants</a> for more information.  
 
<br> 
6. The memory allocation routine <font face="sans-serif"> MPI_ALLOC_MEM</font> cannot  
be used from  
Fortran 77/90/95  
without a language extension (for example, Cray pointers) that allows  
the allocated memory to be associated with a Fortran variable.  
Therefore, address sized integers were used in <font face="sans-serif"> MPI-2.0</font> -- <font face="sans-serif"> MPI-2.2</font>.  
In Fortran 2003, <tt> TYPE(C_PTR)</tt> entities were added,  
which allow a standard-conforming implementation of the semantics of <font face="sans-serif"> MPI_ALLOC_MEM</font>.  
In <font face="sans-serif"> MPI-3.0</font> and later, <font face="sans-serif"> MPI_ALLOC_MEM</font>  
has an additional, overloaded interface to support this  
language feature. The use of Cray pointers is deprecated.  
The <tt>mpi_f08</tt> module only supports <tt> TYPE(C_PTR)</tt> pointers.  
</ol> 
Additionally, <font face="sans-serif"> MPI</font> is inconsistent with Fortran 77 in a number of  
ways, as noted below.  
<ul> 
 
<li><font face="sans-serif"> MPI</font> identifiers exceed 6 characters.  
 
<li><font face="sans-serif"> MPI</font> identifiers may contain underscores after the first character.  
 
<li><font face="sans-serif"> MPI</font> requires an include file, <tt>mpif.h</tt> (deprecated). On systems  
that do not support include files, the implementation should specify  
the values of named constants.  
 
<li>Many routines in  
<font face="sans-serif"> MPI</font>  
have <tt>KIND</tt>-parameterized integers  
(e.g., <font face="sans-serif"> MPI_ADDRESS_KIND</font> and <font face="sans-serif"> MPI_OFFSET_KIND</font>)  
that hold address information.  
On systems that do not support Fortran 90-style parameterized  
types, <tt> INTEGER*8</tt> or <tt> INTEGER</tt> should be used instead.  
</ul> 
<br> 
<font face="sans-serif"> MPI-1</font> contained several routines that take address-sized information  
as input or return address-sized information as output. In C  
such arguments were of type <font face="sans-serif"> MPI_Aint</font> and in Fortran of  
type <tt> INTEGER</tt>. On machines where integers are smaller than  
addresses, these routines can lose information. In <font face="sans-serif"> MPI-2</font> the  
use of these functions has been deprecated  
and they have been replaced by  
routines taking <tt> INTEGER</tt> arguments of <tt>KIND=MPI_ADDRESS_KIND</tt>.  
A number of <font face="sans-serif"> MPI-2</font> functions also take <tt> INTEGER</tt> arguments  
of nondefault <tt>KIND</tt>. See Section <a href="node43.htm#Node43">Language Binding</a> and  
Section <a href="node99.htm#Node99">Type Constructors with Explicit Addresses</a> for more information.  
<P> 
Sections <a href="node480.htm#Node480">Problems Due to Strong Typing</a> through <a href="node499.htm#Node499">Permanent Data Movement</a>  
describe several problems in detail that concern the interaction of <font face="sans-serif"> MPI</font> and Fortran as well as their solutions.  
Some of these solutions require special capabilities from the compilers.  
Major requirements are summarized in  
Section <a href="node473.htm#Node473">Requirements on Fortran Compilers</a>.  
<P> 

<P>
<hr>
<a href="node475.htm#Node478"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node466.htm#Node466"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node480.htm#Node480"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node466.htm#Node466"> Support for Fortran</a>
<b>Next: </b><a href="node480.htm#Node480"> Problems Due to Strong Typing</a>
<b>Previous: </b><a href="node475.htm#Node478"> Communication With Size-specific Types</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
