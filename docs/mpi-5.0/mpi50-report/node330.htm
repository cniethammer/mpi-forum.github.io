<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-one-side/one-side-2-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Fence</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node330">13.5.1. Fence</span></h2>
<a href="node329.htm#Node329"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node329.htm#Node329"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node331.htm#Node331"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node329.htm#Node329"> Synchronization Calls</a>
<b>Next: </b><a href="node331.htm#Node331"> General Active Target Synchronization</a>
<b>Previous: </b><a href="node329.htm#Node329"> Synchronization Calls</a>
<p>
<TABLE><TR><TD COLSPAN=2>MPI_WIN_FENCE(<span style="white-space:nowrap">assert</span>, <span style="white-space:nowrap">win</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> assert</TD><TD>program assertion (integer)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> win</TD><TD>window object (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Win_fence(int assert, MPI_Win win) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Win_fence(assert, win, ierror) <br> INTEGER, INTENT(IN) :: <span style="white-space:nowrap">assert</span><br>TYPE(MPI_Win), INTENT(IN) :: <span style="white-space:nowrap">win</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_WIN_FENCE(ASSERT, WIN, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">ASSERT</span>, <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
<font face="sans-serif"> MPI_WIN_FENCE</font> synchronizes  
<font face="sans-serif"> RMA</font> communication operations on <font face="sans-serif"> win</font>.  The procedure is collective over the group of  
<font face="sans-serif"> win</font>.  
All <font face="sans-serif"> RMA</font>  
operations on <font face="sans-serif"> win</font> originating at a given origin process and started  
before the fence call will complete at that <font face="sans-serif"> MPI</font> process  
before the fence call returns.    
They will be completed at their target before the fence  
call returns at the target.  
Store accesses to shared-memory of <font face="sans-serif"> win</font> will become visible  
before the fence call returns at the target.  
<font face="sans-serif"> RMA</font> operations on <font face="sans-serif"> win</font> started by  
an origin process after the fence call returns will access their target  
window only after <font face="sans-serif"> MPI_WIN_FENCE</font> has been  
called by the target process.  
<P> 
The call closes an <font face="sans-serif"> RMA</font> access epoch if it was preceded by  
another fence call and the local <font face="sans-serif"> MPI</font> process initiated any <font face="sans-serif"> RMA</font> communication  
operations on <font face="sans-serif"> win</font> between these two calls.  The call  
closes an <font face="sans-serif"> RMA</font> exposure epoch if it was  
preceded by another fence call and the local window was the target of <font face="sans-serif"> RMA</font>  
accesses between these two calls.  The call opens an  
<font face="sans-serif"> RMA</font> access epoch if it is followed by another fence call and by  
<font face="sans-serif"> RMA</font> communication calls issued between these two fence calls.  The  
call opens an exposure epoch if it is followed by another fence call  
and the local window is the target of <font face="sans-serif"> RMA</font> accesses between these two fence calls.  
Thus, the fence call is equivalent to calls to a subset of  
<tt>post</tt>, <tt>start</tt>, <tt>complete</tt>, <tt>wait</tt>.  
<P> 
A call to <font face="sans-serif"> MPI_WIN_FENCE</font> is usually synchronizing.  
However, a call to <font face="sans-serif"> MPI_WIN_FENCE</font>  
that is known not to close any epoch  
(in particular, a call with the <font face="sans-serif"> MPI_MODE_NOPRECEDE</font> <font face="sans-serif"> assert</font> set) is  
not necessarily synchronizing.  
<P> 
The <font face="sans-serif"> assert</font> argument is used to provide assertions on the  
context of the call that may be used for various optimizations.  This  
is described in  
Section <a href="node334.htm#Node334">Assertions</a>.  A value of <font face="sans-serif"> assert</font><font face="sans-serif">  = 0</font> is  
always valid.  
<P> 
 
<br> 
<em> Advice to users.</em>  
<P> 
Calls to <font face="sans-serif"> MPI_WIN_FENCE</font> should both precede and follow calls to  
<font face="sans-serif"> RMA</font> communication procedures that are synchronized with fence calls.  
 (<em> End of advice to users.</em>) <br> 

<P>
<hr>
<a href="node329.htm#Node329"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node329.htm#Node329"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node331.htm#Node331"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node329.htm#Node329"> Synchronization Calls</a>
<b>Next: </b><a href="node331.htm#Node331"> General Active Target Synchronization</a>
<b>Previous: </b><a href="node329.htm#Node329"> Synchronization Calls</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
