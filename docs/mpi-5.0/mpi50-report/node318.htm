<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-one-side/one-side-2-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Communication Calls</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h1><span id="Node318">13.3. Communication Calls</span></h1>
<a href="node317.htm#Node317"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node308.htm#Node308"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node319.htm#Node319"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node308.htm#Node308"> One-Sided Communications</a>
<b>Next: </b><a href="node319.htm#Node319"> Put</a>
<b>Previous: </b><a href="node317.htm#Node317"> Window Info</a>
<p>
  
  
<P> 
<font face="sans-serif"> MPI</font> supports the following <font face="sans-serif"> RMA</font> communication calls: <font face="sans-serif"> MPI_PUT</font>  
and <font face="sans-serif"> MPI_RPUT</font> transfer data from the  
caller memory (origin) to the target memory;  
<font face="sans-serif"> MPI_GET</font> and <font face="sans-serif"> MPI_RGET</font> transfer data from the target memory to the caller  
memory;  
<font face="sans-serif"> MPI_ACCUMULATE</font> and <font face="sans-serif"> MPI_RACCUMULATE</font> perform element-wise atomic updates of locations in the target memory,  
e.g., by adding to these locations values sent from the caller  
memory; <font face="sans-serif"> MPI_GET_ACCUMULATE</font>, <font face="sans-serif"> MPI_RGET_ACCUMULATE</font>, and  
<font face="sans-serif"> MPI_FETCH_AND_OP</font> perform element-wise atomic read-modify-write updates and return each value before the update; and  
<font face="sans-serif"> MPI_COMPARE_AND_SWAP</font> performs a remote atomic compare and swap  
operation.  
These procedures are <em> nonblocking</em>.  
The operation is completed, at the origin or both the origin and the target, when  
a subsequent <em> synchronization</em> procedure is called by the origin on  
the involved window object.  These synchronization procedures are described in  
Section <a href="node329.htm#Node329">Synchronization Calls</a>.  
<font face="sans-serif"> RMA</font> communication operations can also be completed with calls to flush procedures; see  
Section <a href="node333.htm#Node333">Flush and Sync</a> for details. Request-based operations  
<font face="sans-serif"> MPI_RPUT</font>, <font face="sans-serif"> MPI_RGET</font>,  
<font face="sans-serif"> MPI_RACCUMULATE</font>, and  
<font face="sans-serif"> MPI_RGET_ACCUMULATE</font> can be  
completed at the origin by using the <font face="sans-serif"> MPI</font> test or wait procedures described in  
Section <a href="node76.htm#Node76">Communication Completion</a>.  
<P> 
The local communication buffer of an <font face="sans-serif"> RMA</font> operation should not be updated after the operation started and  
until the operation completes at the origin.  
The local communication buffer of a get operation should not be accessed after the operation started and until the  
operation completes at the origin.  
<P> 
Two concurrent accesses are called conflicting if one of the two is a put operation, exactly one of them is an  
accumulate operation, or one of them is a get operation and the other is a local store access.  
The outcome of conflicting  
accesses to the same memory location is undefined;  
if a location is updated by a put or accumulate operation, then   
the outcome of loads or other <font face="sans-serif"> RMA</font> operations is undefined  
until the updating operation has completed at the target.  
There is one exception to this rule; namely, the same location can be  
updated by several concurrent accumulate operations, the outcome being as  
if these updates occurred in some order.  In addition,   
the outcome of concurrent load/store accesses and <font face="sans-serif"> RMA</font> updates to the same memory location is undefined.  
These restrictions  
are described in more detail in  
Section <a href="node339.htm#Node339">Semantics and Correctness</a>.  
<P> 
The calls use general datatype arguments to specify communication  
buffers at the origin and at the target.  Thus, a transfer operation  
may also gather data at the source and scatter it at the destination.  
However, all arguments specifying both communication buffers are  
provided by the caller.  
<P> 
For all <font face="sans-serif"> RMA</font> communication operations, the target process may be identical with the  
origin process;  
i.e., an <font face="sans-serif"> MPI</font> process may use an <font face="sans-serif"> RMA</font> operation to move data in its memory.  
<P> 
 
<br> 
<em> Rationale.</em>  
<P> 
The choice of supporting ``self-communication'' is the same as for  
message-passing.  
It simplifies some coding, and is very useful with accumulate  
operations, to allow atomic updates of local variables.  
 (<em> End of rationale.</em>) <br> 
<font face="sans-serif"> MPI_PROC_NULL</font> is a valid target rank in all <font face="sans-serif"> MPI</font> <font face="sans-serif"> RMA</font> communication calls.    
The effect is the same as for <font face="sans-serif"> MPI_PROC_NULL</font> in <font face="sans-serif"> MPI</font> point-to-point  
communication.  
After any <font face="sans-serif"> RMA</font> operation with rank <font face="sans-serif"> MPI_PROC_NULL</font>, it is still necessary to  
close the <font face="sans-serif"> RMA</font> epoch with the synchronization method that opened the epoch.   
<P> 
<ul> 
</ul> 

<P>
<hr>
<a href="node317.htm#Node317"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node308.htm#Node308"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node319.htm#Node319"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node308.htm#Node308"> One-Sided Communications</a>
<b>Next: </b><a href="node319.htm#Node319"> Put</a>
<b>Previous: </b><a href="node317.htm#Node317"> Window Info</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
