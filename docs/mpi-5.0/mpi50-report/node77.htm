<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-pt2pt/pt2pt-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Semantics of Nonblocking Communication Operations</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node77">4.7.4. Semantics of Nonblocking Communication Operations</span></h2>
<a href="node76.htm#Node76"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node73.htm#Node73"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node78.htm#Node78"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node73.htm#Node73"> Nonblocking Communication</a>
<b>Next: </b><a href="node78.htm#Node78"> Multiple Completions</a>
<b>Previous: </b><a href="node76.htm#Node76"> Communication Completion</a>
<p>
  
  
<P> 
The semantics of nonblocking communication operations are defined by suitably extending the  
definitions in Section <a href="node70.htm#Node70">Semantics of Point-to-Point Communication</a>.  
<P> 
<b> Order.</b>  
Nonblocking communication operations are <b> ordered</b> according to the execution  
order of the calls that <em> initiate</em> the communication.  
The <b> nonovertaking</b>  
requirement of Section <a href="node70.htm#Node70">Semantics of Point-to-Point Communication</a> is extended to  
nonblocking communication, with this definition of order being used.  
<P> 
<br><b> Example</b>  
  
Message ordering for nonblocking operations.  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>CALL</b> <b>MPI_COMM_RANK</b>(comm, rank, ierr) 
<b>IF</b> (rank .EQ. 0) <b>THEN</b> 
   <b>CALL</b> <b>MPI_ISEND</b>(a, 1, <b>MPI_REAL</b>, 1, 0, comm, r1, ierr) 
   <b>CALL</b> <b>MPI_ISEND</b>(b, 1, <b>MPI_REAL</b>, 1, 0, comm, r2, ierr) 
<b>ELSE</b> <b>IF</b> (rank .EQ. 1) <b>THEN</b> 
   <b>CALL</b> <b>MPI_IRECV</b>(a, 1, <b>MPI_REAL</b>, 0, <b>MPI_ANY_TAG</b>, comm, r1, ierr) 
   <b>CALL</b> <b>MPI_IRECV</b>(b, 1, <b>MPI_REAL</b>, 0, 0, comm, r2, ierr) 
<b>END</b> <b>IF</b> 
<b>CALL</b> <b>MPI_WAIT</b>(r1, status, ierr) 
<b>CALL</b> <b>MPI_WAIT</b>(r2, status, ierr) 
</tt></pre> 
  
The first send will match the  
first receive, even  
if both messages are sent before either receive is executed.  
  
<P> 
<b> Progress.</b>  
A call to <font face="sans-serif"> MPI_WAIT</font> that <em> completes</em> a receive will eventually  
terminate and return if a matching send has been <em> started</em>, unless  
the send is satisfied by another receive.  In particular, if the matching send  
is  
<em> nonblocking</em>,  
then the receive should <em> complete</em> even if no call is executed by the  
sender to <em> complete</em> the send.  Similarly, a call to <font face="sans-serif"> MPI_WAIT</font> that  
<em> completes</em> a send will eventually  
return if a matching receive has been <em> started</em>, unless  
the receive is satisfied by another send, and even if no call is executed to  
<em> complete</em> the receive.  
<P> 
<br><b> Example</b>  
  
An illustration of progress semantics.  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>CALL</b> <b>MPI_COMM_RANK</b>(comm, rank, ierr) 
<b>IF</b> (rank .EQ. 0) <b>THEN</b> 
   <b>CALL</b> <b>MPI_SSEND</b>(a, 1, <b>MPI_REAL</b>, 1, 0, comm, ierr) 
   <b>CALL</b> <b>MPI_SEND</b>(b, 1, <b>MPI_REAL</b>, 1, 1, comm, ierr) 
<b>ELSE</b> <b>IF</b> (rank .EQ. 1) <b>THEN</b> 
   <b>CALL</b> <b>MPI_IRECV</b>(a, 1, <b>MPI_REAL</b>, 0, 0, comm, r, ierr) 
   <b>CALL</b> <b>MPI_RECV</b>(b, 1, <b>MPI_REAL</b>, 0, 1, comm, status, ierr) 
   <b>CALL</b> <b>MPI_WAIT</b>(r, status, ierr) 
<b>END</b> <b>IF</b> 
</tt></pre> 
  
<P> 
This code should not deadlock in a correct <font face="sans-serif"> MPI</font> implementation.  
The first synchronous send must complete once the  
matching (nonblocking) receive is <em> started</em>, even though  
the completing wait call has not yet been reached.  
Thus, the sending <font face="sans-serif"> MPI</font> process will continue and execute  
the second send procedure, allowing the receiving <font face="sans-serif"> MPI</font> process to complete execution.  
  
<P> 
If an <font face="sans-serif"> MPI_TEST</font> that <em> completes</em> a receive is repeatedly called  
with the same  
arguments, and  
a matching send has been <em> started</em>, then the call will eventually  
return <font face="sans-serif"> flag</font><font face="sans-serif">  = true</font>, unless the send is satisfied by another  
receive.  
If an <font face="sans-serif"> MPI_TEST</font> that <em> completes</em> a send is repeatedly called with the  
same arguments, and  
a matching receive has been <em> started</em>, then the call will eventually  
return <font face="sans-serif"> flag</font><font face="sans-serif">  = true</font>, unless the receive is satisfied by another  
send.  
See also Section <a href="node50.htm#Node50">Progress</a> on <em> progress</em>.  
<P> 

<P>
<hr>
<a href="node76.htm#Node76"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node73.htm#Node73"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node78.htm#Node78"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node73.htm#Node73"> Nonblocking Communication</a>
<b>Next: </b><a href="node78.htm#Node78"> Multiple Completions</a>
<b>Previous: </b><a href="node76.htm#Node76"> Communication Completion</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
