<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-context/context-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Inter-Communication</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h1><span id="Node200">8.6. Inter-Communication</span></h1>
<a href="node199.htm#Node199"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node175.htm#Node175"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node201.htm#Node201"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node175.htm#Node175"> Groups, Contexts, Communicators, and Caching</a>
<b>Next: </b><a href="node201.htm#Node201"> Inter-Communicator Accessors</a>
<b>Previous: </b><a href="node199.htm#Node199"> Library Example #2</a>
<p>
  
This section introduces the concept of intercommunication and  
describes the portions of <font face="sans-serif"> MPI</font> that support it. It describes support for  
writing programs that contain user-level servers.  
<P> 
All communication described thus far has involved  
communication between <font face="sans-serif"> MPI</font> processes that are members of the same group. This type  
of communication is called ``<b> intracommunication</b>'' and the  
communicator used is called an ``<b> intra-communicator</b>,'' as we have noted  
earlier in the chapter.  
<P> 
In modular and multi-disciplinary applications, different <font face="sans-serif"> MPI</font> process groups  
execute distinct modules and <font face="sans-serif"> MPI</font> processes within different modules communicate  
with one another in a pipeline or a more general module graph. In these  
applications, the most natural way for an <font face="sans-serif"> MPI</font> process to specify a target <font face="sans-serif"> MPI</font> process  
is by the rank of the target <font face="sans-serif"> MPI</font> process within the target group. In applications  
that contain internal user-level servers, each server may be an <font face="sans-serif"> MPI</font> process group  
that provides services to one or more clients, and each client may be an  
<font face="sans-serif"> MPI</font> process group that uses the services of one or more servers. It is again most  
natural to specify the target <font face="sans-serif"> MPI</font> process by rank within the target group in these  
applications. This type of communication is called  
``<b> intercommunication</b>'' and the communicator used is called an  
``<b> inter-communicator</b>,'' as introduced earlier.  
<P> 
An <b> inter-communication</b> is a point-to-point communication  
between <font face="sans-serif"> MPI</font> processes in different groups. The group containing an <font face="sans-serif"> MPI</font> process that  
initiates an intercommunication operation is called the ``local  
group,'' that is, the sender in a send and the receiver in a receive. The  
group containing the target <font face="sans-serif"> MPI</font> process is called the ``remote group,'' that is,  
the receiver in a send and the sender in a receive. As in  
intracommunication, the target <font face="sans-serif"> MPI</font> process is specified using a  
(<font face="sans-serif"> communicator</font>, <font face="sans-serif"> rank</font>) pair. Unlike intracommunication, the  
rank is relative to a second, remote group.  
<P> 
All inter-communicator constructors are blocking  
except for <font face="sans-serif"> MPI_COMM_IDUP</font> and  
require that the local and remote groups be disjoint.  
 
<br> 
<em> Advice to users.</em>  
<P> 
The groups must be disjoint for several reasons. First, the intent of the  
  inter-communicators is to provide a communicator for communication between  
  disjoint groups. This is reflected in the  
  definition of <font face="sans-serif"> MPI_INTERCOMM_MERGE</font>, which allows the user to  
  control the ranking of the <font face="sans-serif"> MPI</font> processes in the created intra-communicator;  
  this ranking makes little sense if the groups are not disjoint. In  
  addition, the natural extension of collective operations to  
  inter-communicators makes the most sense when  
  the groups are disjoint.  
 (<em> End of advice to users.</em>) <br> 
Here is a summary of the properties of intercommunication and  
inter-communicators:  
<ul> 
  
<li>The syntax of point-to-point  
and collective  
communication is  
the same for both inter- and intracommunication. The same  
communicator can be used both for send and for receive operations.  
<P> 
 
<li>A target <font face="sans-serif"> MPI</font> process is addressed by its rank in the remote group, both for sends  
and for receives.  
<P> 
 
<li>Communications using an inter-communicator are guaranteed not to  
conflict with any communications that use a different communicator.  
<P> 
 
<li>A communicator will provide either intra- or  
intercommunication, never both.  
</ul> 
<br> 
 The routine <font face="sans-serif"> MPI_COMM_TEST_INTER</font> may be used to determine if  
a communicator is an inter- or intra-communicator. Inter-communicators can be  
used as arguments to some of the other communicator access routines.  
Inter-communicators cannot be used as input to some of the constructor routines  
for intra-communicators (for instance, <font face="sans-serif"> MPI_CART_CREATE</font>).  
<P> 
 
<br> 
<em> Advice  
        to implementors.</em>  
<P> 
For the purpose of point-to-point communication,  
communicators can be represented in each process by a tuple consisting of:  
<b> group</b><br> 
<b> send_context</b><br> 
<b> receive_context</b><br> 
<b> source</b><br> 
 For inter-communicators, <em> group</em> describes the remote group,  
and  
<em> source</em> is the rank of the <font face="sans-serif"> MPI</font> process in the local group.  
For intra-communicators, <em> group</em> is the communicator group  
(remote=local), <em> source</em> is the rank of the <font face="sans-serif"> MPI</font> process in this group,  
and <em> send context</em> and <em> receive context</em> are identical.  
A group  
can be  
represented by a rank-to-absolute-address translation table.  
<P> 
The inter-communicator cannot be discussed sensibly without  
considering <font face="sans-serif"> MPI</font> processes in both the local and remote groups. Imagine an  
<font face="sans-serif"> MPI</font> process <b> P</b> in group <i><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> P</span></i>, which has an inter-communicator  
<b> <i> C<SUB><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> P</span></SUB></i></b>, and an <font face="sans-serif"> MPI</font> process  
<b> Q</b> in group <i><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> Q</span></i>, which has an inter-communicator  
<b> <i> C<SUB><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> Q</span></SUB></i></b>.  
Then  
<ul> 
 
<li><b> <i> C<SUB><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> P</span></SUB></i>.group</b> describes the group <i><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> Q</span></i> and <b> <i> C<SUB><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> Q</span></SUB></i>.group</b>  
describes the group <i><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> P</span></i>.  
 
<li><b> <i> C<SUB><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> P</span></SUB></i>.send_context = <i> C<SUB><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> Q</span></SUB></i>.receive_context</b> and the context is  
unique in <i><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> Q</span></i>; <br>  
<b> <i> C<SUB><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> P</span></SUB></i>.receive_context =  <i> C<SUB><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> Q</span></SUB></i>.send_context</b> and this context is  
unique in <i><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> P</span></i>.  
 
<li><b> <i> C<SUB><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> P</span></SUB></i>.source</b> is rank of <b> P</b> in <i><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> P</span></i> and <b> <i> C<SUB><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> Q</span></SUB></i>.source</b> is  
rank of <b> Q</b> in <i><span style="font-family: &#39;Lucida Calligraphy&#39;, &#39;Monotype Corsiva&#39;, &#39;URW Chancery L&#39;, &#39;Apple Chancery&#39;, &#39;Tex Gyre Chorus&#39;, cursive, serif;"> Q</span></i>.  
</ul> 
<br> 
Assume that <b> P</b> sends a message to <b> Q</b> using the  
inter-communicator. Then <b> P</b> uses the <b> group</b> table to find  
the absolute address of <b> Q</b>; <b> source</b> and <b> send_context</b>  
are appended to the message.  
<P> 
Assume that <b> Q</b> posts a receive with an explicit source argument  
using the inter-communicator. Then <b> Q</b> matches  
<b> receive_context</b> to the message context and source argument to the  
message source.  
<P> 
The same algorithm is appropriate for intra-communicators as well.  
<P> 
In order to support inter-communicator accessors and constructors, it  
is necessary to supplement this model with additional structures, that  
store information about the local communication group, and additional  
safe contexts.  
 (<em> End of advice to implementors.</em>) <br> 
<ul> 
</ul> 

<P>
<hr>
<a href="node199.htm#Node199"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node175.htm#Node175"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node201.htm#Node201"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node175.htm#Node175"> Groups, Contexts, Communicators, and Caching</a>
<b>Next: </b><a href="node201.htm#Node201"> Inter-Communicator Accessors</a>
<b>Previous: </b><a href="node199.htm#Node199"> Library Example #2</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
