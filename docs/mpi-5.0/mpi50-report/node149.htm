<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-coll/coll-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Nonblocking Broadcast</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node149">7.12.2. Nonblocking Broadcast</span></h2>
<a href="node148.htm#Node148"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node147.htm#Node147"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node149.htm#Node150"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node147.htm#Node147"> Nonblocking Collective Operations</a>
<b>Next: </b><a href="node149.htm#Node150"> Example using <font face="sans-serif"> MPI_IBCAST</font></a>
<b>Previous: </b><a href="node148.htm#Node148"> Nonblocking Barrier Synchronization</a>
<p>
  
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_IBCAST(<span style="white-space:nowrap">buffer</span>, <span style="white-space:nowrap">count</span>, <span style="white-space:nowrap">datatype</span>, <span style="white-space:nowrap">root</span>, <span style="white-space:nowrap">comm</span>, <span style="white-space:nowrap">request</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> INOUT</span> buffer</TD><TD>starting address of buffer (choice)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> count</TD><TD>number of entries in buffer (nonnegative integer)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> datatype</TD><TD>datatype of buffer (handle)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> root</TD><TD>rank of broadcast root (integer)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> comm</TD><TD>communicator (handle)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> request</TD><TD>communication request (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Ibcast(void *buffer, int count, MPI_Datatype datatype, int root, MPI_Comm comm, MPI_Request *request) <br></tt>  
  
  <tt> int MPI_Ibcast_c(void *buffer, MPI_Count count, MPI_Datatype datatype, int root, MPI_Comm comm, MPI_Request *request) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Ibcast(buffer, count, datatype, root, comm, request, ierror) <br> TYPE(*), DIMENSION(..), ASYNCHRONOUS :: <span style="white-space:nowrap">buffer</span><br>INTEGER, INTENT(IN) :: <span style="white-space:nowrap">count</span>, <span style="white-space:nowrap">root</span><br>TYPE(MPI_Datatype), INTENT(IN) :: <span style="white-space:nowrap">datatype</span><br>TYPE(MPI_Comm), INTENT(IN) :: <span style="white-space:nowrap">comm</span><br>TYPE(MPI_Request), INTENT(OUT) :: <span style="white-space:nowrap">request</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <tt> MPI_Ibcast(buffer, count, datatype, root, comm, request, ierror) !(_c) <br> TYPE(*), DIMENSION(..), ASYNCHRONOUS :: <span style="white-space:nowrap">buffer</span><br>INTEGER(KIND=MPI_COUNT_KIND), INTENT(IN) :: <span style="white-space:nowrap">count</span><br>TYPE(MPI_Datatype), INTENT(IN) :: <span style="white-space:nowrap">datatype</span><br>INTEGER, INTENT(IN) :: <span style="white-space:nowrap">root</span><br>TYPE(MPI_Comm), INTENT(IN) :: <span style="white-space:nowrap">comm</span><br>TYPE(MPI_Request), INTENT(OUT) :: <span style="white-space:nowrap">request</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_IBCAST(BUFFER, COUNT, DATATYPE, ROOT, COMM, REQUEST, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">BUFFER(*)</span><br>INTEGER <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">ROOT</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
This call starts a nonblocking variant of <font face="sans-serif"> MPI_BCAST</font> (see  
Section <a href="node122.htm#Node122">Broadcast</a>).  
<P> 
<ul> 
</ul> 

<P>
<hr>
<a href="node148.htm#Node148"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node147.htm#Node147"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node149.htm#Node150"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node147.htm#Node147"> Nonblocking Collective Operations</a>
<b>Next: </b><a href="node149.htm#Node150"> Example using <font face="sans-serif"> MPI_IBCAST</font></a>
<b>Previous: </b><a href="node148.htm#Node148"> Nonblocking Barrier Synchronization</a>
<p>
<hr><h3><span id="Node150">7.12.2.1. Example using  MPI_IBCAST</span></h3>
<a href="node149.htm#Node149"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node149.htm#Node149"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node151.htm#Node151"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node149.htm#Node149"> Nonblocking Broadcast</a>
<b>Next: </b><a href="node151.htm#Node151"> Nonblocking Gather</a>
<b>Previous: </b><a href="node149.htm#Node149"> Nonblocking Broadcast</a>
<p>
The example in this section uses an intra-communicator.  
<P> 
<br><b> Example</b>  
  
Start a broadcast of 100 <tt>int</tt>s from <font face="sans-serif"> MPI</font> process <tt>0</tt> to every <font face="sans-serif"> MPI</font> process in the  
group, perform some computation on independent data, and then complete  
the outstanding broadcast operation.  
<P> 
<br> 
<pre style="background-color:#EFEFEF"><tt><b>MPI_Comm</b> comm; 
<b>int</b> array1[100], array2[100]; 
<b>int</b> root=0; 
<b>MPI_Request</b> req; 
... 
<b>MPI_Ibcast</b>(array1, 100, <b>MPI_INT</b>, root, comm, &amp;req); 
compute(array2, 100); 
<b>MPI_Wait</b>(&amp;req, <b>MPI_STATUS_IGNORE</b>); 
</tt></pre> 
  
  
<P> 

<P>
<hr>
<a href="node149.htm#Node149"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node149.htm#Node149"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node151.htm#Node151"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node149.htm#Node149"> Nonblocking Broadcast</a>
<b>Next: </b><a href="node151.htm#Node151"> Nonblocking Gather</a>
<b>Previous: </b><a href="node149.htm#Node149"> Nonblocking Broadcast</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
