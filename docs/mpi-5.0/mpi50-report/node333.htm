<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-one-side/one-side-2-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Flush and Sync</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node333">13.5.4. Flush and Sync</span></h2>
<a href="node332.htm#Node332"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node329.htm#Node329"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node334.htm#Node334"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node329.htm#Node329"> Synchronization Calls</a>
<b>Next: </b><a href="node334.htm#Node334"> Assertions</a>
<b>Previous: </b><a href="node332.htm#Node332"> Lock</a>
<p>
  
<P> 
All flush and sync functions can be called only within passive target  
epochs.  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_WIN_FLUSH(<span style="white-space:nowrap">rank</span>, <span style="white-space:nowrap">win</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> rank</TD><TD>rank of target <font face="sans-serif"> MPI</font> process in the group of the window <font face="sans-serif"> win</font> (nonnegative integer)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> win</TD><TD>window object (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Win_flush(int rank, MPI_Win win) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Win_flush(rank, win, ierror) <br> INTEGER, INTENT(IN) :: <span style="white-space:nowrap">rank</span><br>TYPE(MPI_Win), INTENT(IN) :: <span style="white-space:nowrap">win</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_WIN_FLUSH(RANK, WIN, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">RANK</span>, <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
All outstanding <font face="sans-serif"> RMA</font> operations on <font face="sans-serif"> win</font> initiated by  
the <font face="sans-serif"> MPI</font> process calling this procedure to the target with <font face="sans-serif"> rank</font> in the group of the specified window  
will have completed when <font face="sans-serif"> MPI_WIN_FLUSH</font> returns. The operations are completed both at  
the origin and at the target.   
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_WIN_FLUSH_ALL(<span style="white-space:nowrap">win</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> win</TD><TD>window object (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Win_flush_all(MPI_Win win) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Win_flush_all(win, ierror) <br> TYPE(MPI_Win), INTENT(IN) :: <span style="white-space:nowrap">win</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_WIN_FLUSH_ALL(WIN, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
All <font face="sans-serif"> RMA</font> operations initiated by the <font face="sans-serif"> MPI</font> process calling this procedure to any target on the specified window  
prior to this call will have  
completed both at the origin and at the target when <font face="sans-serif"> MPI_WIN_FLUSH_ALL</font>  
returns.   
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_WIN_FLUSH_LOCAL(<span style="white-space:nowrap">rank</span>, <span style="white-space:nowrap">win</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> rank</TD><TD>rank of target <font face="sans-serif"> MPI</font> process in the group of the window <font face="sans-serif"> win</font> (nonnegative integer)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> win</TD><TD>window object (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Win_flush_local(int rank, MPI_Win win) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Win_flush_local(rank, win, ierror) <br> INTEGER, INTENT(IN) :: <span style="white-space:nowrap">rank</span><br>TYPE(MPI_Win), INTENT(IN) :: <span style="white-space:nowrap">win</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_WIN_FLUSH_LOCAL(RANK, WIN, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">RANK</span>, <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
All outstanding <font face="sans-serif"> RMA</font> operations  
initiated on <font face="sans-serif"> win</font> by the <font face="sans-serif"> MPI</font> process calling this procedure to the target with <font face="sans-serif"> rank</font>  
in the group of the specified window will have completed at the origin when  
<font face="sans-serif"> MPI_WIN_FLUSH_LOCAL</font> returns. For example, after this procedure returns, the user may  
reuse any buffers provided to put, get, or accumulate operations.  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_WIN_FLUSH_LOCAL_ALL(<span style="white-space:nowrap">win</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> win</TD><TD>window object (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Win_flush_local_all(MPI_Win win) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Win_flush_local_all(win, ierror) <br> TYPE(MPI_Win), INTENT(IN) :: <span style="white-space:nowrap">win</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_WIN_FLUSH_LOCAL_ALL(WIN, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
All <font face="sans-serif"> RMA</font> operations initiated by the <font face="sans-serif"> MPI</font> process calling this procedure to any target on the specified window prior to this call  
will have completed at the origin when  
<font face="sans-serif"> MPI_WIN_FLUSH_LOCAL_ALL</font> returns.  
<P> 
  
<TABLE><TR><TD COLSPAN=2>MPI_WIN_SYNC(<span style="white-space:nowrap">win</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> win</TD><TD>window object (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Win_sync(MPI_Win win) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Win_sync(win, ierror) <br> TYPE(MPI_Win), INTENT(IN) :: <span style="white-space:nowrap">win</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_WIN_SYNC(WIN, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
For windows in the separate memory model,  
a call to <font face="sans-serif"> MPI_WIN_SYNC</font> synchronizes the private and public window  
copies of <font face="sans-serif"> win</font> at the calling <font face="sans-serif"> MPI</font> process, as described in Section <a href="node339.htm#Node339">Semantics and Correctness</a>.  
<P> 
In the unified memory model, <font face="sans-serif"> MPI_WIN_SYNC</font> may be used to  
order load and store accesses to shared memory and to ensure visibility of store updates in shared memory  
for other threads and <font face="sans-serif"> MPI</font> processes.  
<P> 
A call to <font face="sans-serif"> MPI_WIN_SYNC</font> does not open or close an epoch and does not complete any pending <font face="sans-serif"> RMA</font> operations.  
A call to <font face="sans-serif"> MPI_WIN_SYNC</font> does not guarantee  
<em> progress</em>  
of any pending <font face="sans-serif"> MPI</font> operation.  
<P> 

<P>
<hr>
<a href="node332.htm#Node332"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node329.htm#Node329"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node334.htm#Node334"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node329.htm#Node329"> Synchronization Calls</a>
<b>Next: </b><a href="node334.htm#Node334"> Assertions</a>
<b>Previous: </b><a href="node332.htm#Node332"> Lock</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
