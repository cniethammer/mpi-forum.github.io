<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-abi/abi-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Fortran Type Registration</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node532">21.4.1. Fortran Type Registration</span></h2>
<a href="node531.htm#Node531"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node531.htm#Node531"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node533.htm#Node533"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node531.htm#Node531"> The Fortran Application Binary Interface</a>
<b>Next: </b><a href="node533.htm#Node533"> The <font face="sans-serif"> MPI</font> ABI Fortran Modules and Shared Library</a>
<b>Previous: </b><a href="node531.htm#Node531"> The Fortran Application Binary Interface</a>
<p>
  
<P> 
In order to decouple <font face="sans-serif"> MPI</font> Fortran support from the rest of the implementation,  
there must be a way to inform the implementation of the properties of  
<font face="sans-serif"> MPI</font> Fortran datatypes.  
With this, it is possible to implement <font face="sans-serif"> MPI</font> Fortran support on top  
of the <font face="sans-serif"> MPI</font> C implementation, without the latter having to know the  
properties of the Fortran environment.  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_ABI_SET_FORTRAN_INFO(<span style="white-space:nowrap">info</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> info</TD><TD>Fortran ABI details info object (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Abi_set_fortran_info(MPI_Info info) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Abi_set_fortran_info(info, ierror) <br> TYPE(MPI_Info), INTENT(IN) :: <span style="white-space:nowrap">info</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_ABI_SET_FORTRAN_INFO(INFO, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_ABI_GET_FORTRAN_INFO(<span style="white-space:nowrap">info</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> info</TD><TD>Fortran ABI details info object (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Abi_get_fortran_info(MPI_Info *info) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Abi_get_fortran_info(info, ierror) <br> TYPE(MPI_Info), INTENT(OUT) :: <span style="white-space:nowrap">info</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_ABI_GET_FORTRAN_INFO(INFO, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
<font face="sans-serif"> MPI_ABI_SET_FORTRAN_INFO</font> allows the application  
to inform the implementation of the sizes of Fortran types  
and whether or not optional types are supported by the  
Fortran compiler.  
Before setting this information, the application should  
get this info object using <font face="sans-serif"> MPI_ABI_GET_FORTRAN_INFO</font>.  
When <font face="sans-serif"> MPI_INFO_NULL</font> is returned, the implementation  
does not know the properties of the Fortran compiler and they  
must be set by the application.  
Only the first call to <font face="sans-serif"> MPI_ABI_SET_FORTRAN_INFO</font>  
affects the state of the <font face="sans-serif"> MPI</font> library; all subsequent calls  
will return the error code <span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_ABI</span></font>.  
If a call to <font face="sans-serif"> MPI_ABI_SET_FORTRAN_INFO</font> is not  
successful, the user should call <font face="sans-serif"> MPI_ABI_GET_FORTRAN_INFO</font>  
to determine what Fortran compiler properties were set.  
<P> 
The following keys are predefined for this object:  
<dl> 
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_logical_size<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
 The size in bytes of the Fortran default <tt> LOGICAL</tt> kind.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_integer_size<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
 The size in bytes of the Fortran default <tt> INTEGER</tt> kind.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_real_size<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
 The size in bytes of the Fortran default <tt> REAL</tt> kind.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_double_precision_size<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
 The size in bytes of the Fortran <tt> DOUBLE PRECISION</tt> kind.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_logical1_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
  (boolean) <font face="sans-serif"> MPI_LOGICAL1</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_logical2_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
  (boolean) <font face="sans-serif"> MPI_LOGICAL2</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_logical4_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
  (boolean) <font face="sans-serif"> MPI_LOGICAL4</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_logical8_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
  (boolean) <font face="sans-serif"> MPI_LOGICAL8</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_logical16_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
 (boolean) <font face="sans-serif"> MPI_LOGICAL16</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_integer1_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
  (boolean) <font face="sans-serif"> MPI_INTEGER1</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_integer2_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
  (boolean) <font face="sans-serif"> MPI_INTEGER2</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_integer4_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
  (boolean) <font face="sans-serif"> MPI_INTEGER4</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_integer8_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
  (boolean) <font face="sans-serif"> MPI_INTEGER8</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_integer16_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
 (boolean) <font face="sans-serif"> MPI_INTEGER16</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_real2_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
     (boolean) <font face="sans-serif"> MPI_REAL2</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_real4_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
     (boolean) <font face="sans-serif"> MPI_REAL4</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_real8_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
     (boolean) <font face="sans-serif"> MPI_REAL8</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_real16_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
    (boolean) <font face="sans-serif"> MPI_REAL16</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_complex4_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
  (boolean) <font face="sans-serif"> MPI_COMPLEX4</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_complex8_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
  (boolean) <font face="sans-serif"> MPI_COMPLEX8</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_complex16_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
 (boolean) <font face="sans-serif"> MPI_COMPLEX16</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_complex32_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
 (boolean) <font face="sans-serif"> MPI_COMPLEX32</font> is supported.  
 
<dt> 
<b><font face="sans-serif"> <span style="font-size:0.900em;"><tt>"</span></tt>mpi_double_complex_supported<span style="font-size:0.900em;"><tt>"</span></tt></font>:</b><dd> 
 (boolean) <font face="sans-serif"> MPI_DOUBLE_COMPLEX</font> is supported.  
</dl> 
<br> 
<TABLE><TR><TD COLSPAN=2>MPI_ABI_SET_FORTRAN_BOOLEANS(<span style="white-space:nowrap">logical_size</span>, <span style="white-space:nowrap">logical_true</span>, <span style="white-space:nowrap">logical_false</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> logical_size</TD><TD>the size of Fortran <tt>LOGICAL</tt> in bytes (integer)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> logical_true</TD><TD>the Fortran literal value <tt>.TRUE.</tt> (logical)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> logical_false</TD><TD>the Fortran literal value <tt>.FALSE.</tt> (logical)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Abi_set_fortran_booleans(int logical_size, void *logical_true, void *logical_false) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Abi_set_fortran_booleans(logical_size, logical_true, logical_false, ierror) <br> INTEGER, INTENT(IN) :: <span style="white-space:nowrap">logical_size</span><br>LOGICAL, INTENT(IN) :: <span style="white-space:nowrap">logical_true</span>, <span style="white-space:nowrap">logical_false</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_ABI_SET_FORTRAN_BOOLEANS(LOGICAL_SIZE, LOGICAL_TRUE, LOGICAL_FALSE, IERROR) <br> INTEGER <span style="white-space:nowrap">LOGICAL_SIZE</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">LOGICAL_TRUE</span>, <span style="white-space:nowrap">LOGICAL_FALSE</span> <br></tt>  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_ABI_GET_FORTRAN_BOOLEANS(<span style="white-space:nowrap">logical_size</span>, <span style="white-space:nowrap">logical_true</span>, <span style="white-space:nowrap">logical_false</span>, <span style="white-space:nowrap">is_set</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> logical_size</TD><TD>the size of Fortran <tt>LOGICAL</tt> in bytes (integer)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> logical_true</TD><TD>the Fortran literal value <tt>.TRUE.</tt> (logical)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> logical_false</TD><TD>the Fortran literal value <tt>.FALSE.</tt> (logical)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> is_set</TD><TD>flag to indicate whether the logical boolean values were set previously (logical)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Abi_get_fortran_booleans(int logical_size, void *logical_true, void *logical_false, int *is_set) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Abi_get_fortran_booleans(logical_size, logical_true, logical_false, is_set, ierror) <br> INTEGER, INTENT(IN) :: <span style="white-space:nowrap">logical_size</span><br>LOGICAL, INTENT(OUT) :: <span style="white-space:nowrap">logical_true</span>, <span style="white-space:nowrap">logical_false</span>, <span style="white-space:nowrap">is_set</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_ABI_GET_FORTRAN_BOOLEANS(LOGICAL_SIZE, LOGICAL_TRUE, LOGICAL_FALSE, IS_SET, IERROR) <br> INTEGER <span style="white-space:nowrap">LOGICAL_SIZE</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">LOGICAL_TRUE</span>, <span style="white-space:nowrap">LOGICAL_FALSE</span>, <span style="white-space:nowrap">IS_SET</span> <br></tt>  
<P> 
<font face="sans-serif"> MPI_ABI_SET_FORTRAN_BOOLEANS</font> allows the application  
to inform the implementation of the literal values of the Fortran booleans.  
Boolean literals must be passed directly so that they can be observed  
by the implementation, since it may not be possible to obtain their  
literal values directly.  
This function has a size argument to allow it to be called before  
<font face="sans-serif"> MPI_ABI_SET_FORTRAN_INFO</font>.  
Before setting this information, the application should  
check if the logical values are already set  
using <font face="sans-serif"> MPI_ABI_GET_FORTRAN_BOOLEANS</font>.  
When <font face="sans-serif"> is_set</font><font face="sans-serif">  = false</font>, the implementation  
does not know the properties of the Fortran compiler and they  
must be set by the application.  
When <font face="sans-serif"> is_set</font><font face="sans-serif">  = true</font>, the implementation  
already knows the literal values of the Fortran booleans  
and they cannot be set.  
As with <font face="sans-serif"> MPI_ABI_SET_FORTRAN_INFO</font>, only the first call  
to this function affects the state of the <font face="sans-serif"> MPI</font> library; subsequent  
calls will return the error code <span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_ABI</span></font>.  
<P> 
 
<br> 
<em> Rationale.</em>  
<P> 
<font face="sans-serif"> MPI</font> does not assume that Fortran boolean literals follow the C  
convention (zero is false and non-zero is true).  
 (<em> End of rationale.</em>) <br> 

<P>
<hr>
<a href="node531.htm#Node531"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node531.htm#Node531"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node533.htm#Node533"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node531.htm#Node531"> The Fortran Application Binary Interface</a>
<b>Next: </b><a href="node533.htm#Node533"> The <font face="sans-serif"> MPI</font> ABI Fortran Modules and Shared Library</a>
<b>Previous: </b><a href="node531.htm#Node531"> The Fortran Application Binary Interface</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
