<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from appLang-FNames -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Groups, Contexts, Communicators, and Caching Fortran Bindings</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node596">22.5.5. Groups, Contexts, Communicators, and Caching Fortran Bindings</span></h2>
<a href="node595.htm#Node595"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node591.htm#Node591"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node597.htm#Node597"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node591.htm#Node591"> Fortran Bindings with <tt>mpif.h</tt> or the <tt>mpi</tt> Module</a>
<b>Next: </b><a href="node597.htm#Node597"> Virtual Topologies for <font face="sans-serif"> MPI</font> Processes Fortran Bindings</a>
<b>Previous: </b><a href="node595.htm#Node595"> Collective Communication Fortran Bindings</a>
<p>
  <tt> MPI_COMM_COMPARE(COMM1, COMM2, RESULT, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM1</span>, <span style="white-space:nowrap">COMM2</span>, <span style="white-space:nowrap">RESULT</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_CREATE(COMM, GROUP, NEWCOMM, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">GROUP</span>, <span style="white-space:nowrap">NEWCOMM</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_CREATE_FROM_GROUP(GROUP, STRINGTAG, INFO, ERRHANDLER, NEWCOMM, IERROR) <br> INTEGER <span style="white-space:nowrap">GROUP</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">ERRHANDLER</span>, <span style="white-space:nowrap">NEWCOMM</span>, <span style="white-space:nowrap">IERROR</span><br>CHARACTER*(*) <span style="white-space:nowrap">STRINGTAG</span> <br></tt>  
  <tt> MPI_COMM_CREATE_GROUP(COMM, GROUP, TAG, NEWCOMM, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">GROUP</span>, <span style="white-space:nowrap">TAG</span>, <span style="white-space:nowrap">NEWCOMM</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_CREATE_KEYVAL(COMM_COPY_ATTR_FN, COMM_DELETE_ATTR_FN, COMM_KEYVAL, EXTRA_STATE, IERROR) <br> EXTERNAL <span style="white-space:nowrap">COMM_COPY_ATTR_FN</span>, <span style="white-space:nowrap">COMM_DELETE_ATTR_FN</span><br>INTEGER <span style="white-space:nowrap">COMM_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span> <br></tt>  
  <tt> MPI_COMM_DELETE_ATTR(COMM, COMM_KEYVAL, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">COMM_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_DUP(COMM, NEWCOMM, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">NEWCOMM</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_DUP_FN(OLDCOMM, COMM_KEYVAL, EXTRA_STATE, ATTRIBUTE_VAL_IN, ATTRIBUTE_VAL_OUT, FLAG, IERROR) <br> INTEGER <span style="white-space:nowrap">OLDCOMM</span>, <span style="white-space:nowrap">COMM_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_IN</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_OUT</span><br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
  <tt> MPI_COMM_DUP_WITH_INFO(COMM, INFO, NEWCOMM, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">NEWCOMM</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_FREE(COMM, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_FREE_KEYVAL(COMM_KEYVAL, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_GET_ATTR(COMM, COMM_KEYVAL, ATTRIBUTE_VAL, FLAG, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">COMM_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">ATTRIBUTE_VAL</span><br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
  <tt> MPI_COMM_GET_INFO(COMM, INFO_USED, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">INFO_USED</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_GET_NAME(COMM, COMM_NAME, RESULTLEN, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">RESULTLEN</span>, <span style="white-space:nowrap">IERROR</span><br>CHARACTER*(*) <span style="white-space:nowrap">COMM_NAME</span> <br></tt>  
  <tt> MPI_COMM_GROUP(COMM, GROUP, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">GROUP</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_IDUP(COMM, NEWCOMM, REQUEST, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">NEWCOMM</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_IDUP_WITH_INFO(COMM, INFO, NEWCOMM, REQUEST, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">NEWCOMM</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_NULL_COPY_FN(OLDCOMM, COMM_KEYVAL, EXTRA_STATE, ATTRIBUTE_VAL_IN, ATTRIBUTE_VAL_OUT, FLAG, IERROR) <br> INTEGER <span style="white-space:nowrap">OLDCOMM</span>, <span style="white-space:nowrap">COMM_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_IN</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_OUT</span><br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
  <tt> MPI_COMM_NULL_DELETE_FN(COMM, COMM_KEYVAL, ATTRIBUTE_VAL, EXTRA_STATE, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">COMM_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">ATTRIBUTE_VAL</span>, <span style="white-space:nowrap">EXTRA_STATE</span> <br></tt>  
  <tt> MPI_COMM_RANK(COMM, RANK, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">RANK</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_REMOTE_GROUP(COMM, GROUP, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">GROUP</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_REMOTE_SIZE(COMM, SIZE, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">SIZE</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_SET_ATTR(COMM, COMM_KEYVAL, ATTRIBUTE_VAL, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">COMM_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">ATTRIBUTE_VAL</span> <br></tt>  
  <tt> MPI_COMM_SET_INFO(COMM, INFO, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_SET_NAME(COMM, COMM_NAME, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">IERROR</span><br>CHARACTER*(*) <span style="white-space:nowrap">COMM_NAME</span> <br></tt>  
  <tt> MPI_COMM_SIZE(COMM, SIZE, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">SIZE</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_SPLIT(COMM, COLOR, KEY, NEWCOMM, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">COLOR</span>, <span style="white-space:nowrap">KEY</span>, <span style="white-space:nowrap">NEWCOMM</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_SPLIT_TYPE(COMM, SPLIT_TYPE, KEY, INFO, NEWCOMM, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">SPLIT_TYPE</span>, <span style="white-space:nowrap">KEY</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">NEWCOMM</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_COMM_TEST_INTER(COMM, FLAG, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
  <tt> MPI_GROUP_COMPARE(GROUP1, GROUP2, RESULT, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">GROUP1</span>, <span style="white-space:nowrap">GROUP2</span>, <span style="white-space:nowrap">RESULT</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GROUP_DIFFERENCE(GROUP1, GROUP2, NEWGROUP, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">GROUP1</span>, <span style="white-space:nowrap">GROUP2</span>, <span style="white-space:nowrap">NEWGROUP</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GROUP_EXCL(GROUP, N, RANKS, NEWGROUP, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">GROUP</span>, <span style="white-space:nowrap">N</span>, <span style="white-space:nowrap">RANKS(*)</span>, <span style="white-space:nowrap">NEWGROUP</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GROUP_FREE(GROUP, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">GROUP</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GROUP_FROM_SESSION_PSET(SESSION, PSET_NAME, NEWGROUP, IERROR) <br> INTEGER <span style="white-space:nowrap">SESSION</span>, <span style="white-space:nowrap">NEWGROUP</span>, <span style="white-space:nowrap">IERROR</span><br>CHARACTER*(*) <span style="white-space:nowrap">PSET_NAME</span> <br></tt>  
  <tt> MPI_GROUP_INCL(GROUP, N, RANKS, NEWGROUP, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">GROUP</span>, <span style="white-space:nowrap">N</span>, <span style="white-space:nowrap">RANKS(*)</span>, <span style="white-space:nowrap">NEWGROUP</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GROUP_INTERSECTION(GROUP1, GROUP2, NEWGROUP, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">GROUP1</span>, <span style="white-space:nowrap">GROUP2</span>, <span style="white-space:nowrap">NEWGROUP</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GROUP_RANGE_EXCL(GROUP, N, RANGES, NEWGROUP, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">GROUP</span>, <span style="white-space:nowrap">N</span>, <span style="white-space:nowrap">RANGES(3, *)</span>, <span style="white-space:nowrap">NEWGROUP</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GROUP_RANGE_INCL(GROUP, N, RANGES, NEWGROUP, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">GROUP</span>, <span style="white-space:nowrap">N</span>, <span style="white-space:nowrap">RANGES(3, *)</span>, <span style="white-space:nowrap">NEWGROUP</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GROUP_RANK(GROUP, RANK, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">GROUP</span>, <span style="white-space:nowrap">RANK</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GROUP_SIZE(GROUP, SIZE, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">GROUP</span>, <span style="white-space:nowrap">SIZE</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GROUP_TRANSLATE_RANKS(GROUP1, N, RANKS1, GROUP2, RANKS2, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">GROUP1</span>, <span style="white-space:nowrap">N</span>, <span style="white-space:nowrap">RANKS1(*)</span>, <span style="white-space:nowrap">GROUP2</span>, <span style="white-space:nowrap">RANKS2(*)</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GROUP_UNION(GROUP1, GROUP2, NEWGROUP, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">GROUP1</span>, <span style="white-space:nowrap">GROUP2</span>, <span style="white-space:nowrap">NEWGROUP</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_INTERCOMM_CREATE(LOCAL_COMM, LOCAL_LEADER, PEER_COMM, REMOTE_LEADER, TAG, NEWINTERCOMM, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">LOCAL_COMM</span>, <span style="white-space:nowrap">LOCAL_LEADER</span>, <span style="white-space:nowrap">PEER_COMM</span>, <span style="white-space:nowrap">REMOTE_LEADER</span>, <span style="white-space:nowrap">TAG</span>, <span style="white-space:nowrap">NEWINTERCOMM</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_INTERCOMM_CREATE_FROM_GROUPS(LOCAL_GROUP, LOCAL_LEADER, REMOTE_GROUP, REMOTE_LEADER, STRINGTAG, INFO, ERRHANDLER, NEWINTERCOMM, IERROR) <br> INTEGER <span style="white-space:nowrap">LOCAL_GROUP</span>, <span style="white-space:nowrap">LOCAL_LEADER</span>, <span style="white-space:nowrap">REMOTE_GROUP</span>, <span style="white-space:nowrap">REMOTE_LEADER</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">ERRHANDLER</span>, <span style="white-space:nowrap">NEWINTERCOMM</span>, <span style="white-space:nowrap">IERROR</span><br>CHARACTER*(*) <span style="white-space:nowrap">STRINGTAG</span> <br></tt>  
  <tt> MPI_INTERCOMM_MERGE(INTERCOMM, HIGH, NEWINTRACOMM, IERROR) <br> INTEGER <span style="white-space:nowrap">INTERCOMM</span>, <span style="white-space:nowrap">NEWINTRACOMM</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">HIGH</span> <br></tt>  
  <tt> MPI_TYPE_CREATE_KEYVAL(TYPE_COPY_ATTR_FN, TYPE_DELETE_ATTR_FN, TYPE_KEYVAL, EXTRA_STATE, IERROR) <br> EXTERNAL <span style="white-space:nowrap">TYPE_COPY_ATTR_FN</span>, <span style="white-space:nowrap">TYPE_DELETE_ATTR_FN</span><br>INTEGER <span style="white-space:nowrap">TYPE_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span> <br></tt>  
  <tt> MPI_TYPE_DELETE_ATTR(DATATYPE, TYPE_KEYVAL, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">TYPE_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_TYPE_DUP_FN(OLDTYPE, TYPE_KEYVAL, EXTRA_STATE, ATTRIBUTE_VAL_IN, ATTRIBUTE_VAL_OUT, FLAG, IERROR) <br> INTEGER <span style="white-space:nowrap">OLDTYPE</span>, <span style="white-space:nowrap">TYPE_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_IN</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_OUT</span><br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
  <tt> MPI_TYPE_FREE_KEYVAL(TYPE_KEYVAL, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">TYPE_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_TYPE_GET_ATTR(DATATYPE, TYPE_KEYVAL, ATTRIBUTE_VAL, FLAG, IERROR) <br> INTEGER <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">TYPE_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">ATTRIBUTE_VAL</span><br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
  <tt> MPI_TYPE_GET_NAME(DATATYPE, TYPE_NAME, RESULTLEN, IERROR) <br> INTEGER <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">RESULTLEN</span>, <span style="white-space:nowrap">IERROR</span><br>CHARACTER*(*) <span style="white-space:nowrap">TYPE_NAME</span> <br></tt>  
  <tt> MPI_TYPE_NULL_COPY_FN(OLDTYPE, TYPE_KEYVAL, EXTRA_STATE, ATTRIBUTE_VAL_IN, ATTRIBUTE_VAL_OUT, FLAG, IERROR) <br> INTEGER <span style="white-space:nowrap">OLDTYPE</span>, <span style="white-space:nowrap">TYPE_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_IN</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_OUT</span><br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
  <tt> MPI_TYPE_NULL_DELETE_FN(DATATYPE, TYPE_KEYVAL, ATTRIBUTE_VAL, EXTRA_STATE, IERROR) <br> INTEGER <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">TYPE_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">ATTRIBUTE_VAL</span>, <span style="white-space:nowrap">EXTRA_STATE</span> <br></tt>  
  <tt> MPI_TYPE_SET_ATTR(DATATYPE, TYPE_KEYVAL, ATTRIBUTE_VAL, IERROR) <br> INTEGER <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">TYPE_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">ATTRIBUTE_VAL</span> <br></tt>  
  <tt> MPI_TYPE_SET_NAME(DATATYPE, TYPE_NAME, IERROR) <br> INTEGER <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">IERROR</span><br>CHARACTER*(*) <span style="white-space:nowrap">TYPE_NAME</span> <br></tt>  
  <tt> MPI_WIN_CREATE_KEYVAL(WIN_COPY_ATTR_FN, WIN_DELETE_ATTR_FN, WIN_KEYVAL, EXTRA_STATE, IERROR) <br> EXTERNAL <span style="white-space:nowrap">WIN_COPY_ATTR_FN</span>, <span style="white-space:nowrap">WIN_DELETE_ATTR_FN</span><br>INTEGER <span style="white-space:nowrap">WIN_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span> <br></tt>  
  <tt> MPI_WIN_DELETE_ATTR(WIN, WIN_KEYVAL, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">WIN_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_WIN_DUP_FN(OLDWIN, WIN_KEYVAL, EXTRA_STATE, ATTRIBUTE_VAL_IN, ATTRIBUTE_VAL_OUT, FLAG, IERROR) <br> INTEGER <span style="white-space:nowrap">OLDWIN</span>, <span style="white-space:nowrap">WIN_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_IN</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_OUT</span><br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
  <tt> MPI_WIN_FREE_KEYVAL(WIN_KEYVAL, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">WIN_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_WIN_GET_ATTR(WIN, WIN_KEYVAL, ATTRIBUTE_VAL, FLAG, IERROR) <br> INTEGER <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">WIN_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">ATTRIBUTE_VAL</span><br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
  <tt> MPI_WIN_GET_NAME(WIN, WIN_NAME, RESULTLEN, IERROR) <br> INTEGER <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">RESULTLEN</span>, <span style="white-space:nowrap">IERROR</span><br>CHARACTER*(*) <span style="white-space:nowrap">WIN_NAME</span> <br></tt>  
  <tt> MPI_WIN_NULL_COPY_FN(OLDWIN, WIN_KEYVAL, EXTRA_STATE, ATTRIBUTE_VAL_IN, ATTRIBUTE_VAL_OUT, FLAG, IERROR) <br> INTEGER <span style="white-space:nowrap">OLDWIN</span>, <span style="white-space:nowrap">WIN_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_IN</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_OUT</span><br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
  <tt> MPI_WIN_NULL_DELETE_FN(WIN, WIN_KEYVAL, ATTRIBUTE_VAL, EXTRA_STATE, IERROR) <br> INTEGER <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">WIN_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">ATTRIBUTE_VAL</span>, <span style="white-space:nowrap">EXTRA_STATE</span> <br></tt>  
  <tt> MPI_WIN_SET_ATTR(WIN, WIN_KEYVAL, ATTRIBUTE_VAL, IERROR) <br> INTEGER <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">WIN_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">ATTRIBUTE_VAL</span> <br></tt>  
  <tt> MPI_WIN_SET_NAME(WIN, WIN_NAME, IERROR) <br> INTEGER <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">IERROR</span><br>CHARACTER*(*) <span style="white-space:nowrap">WIN_NAME</span> <br></tt>  
<P> 

<P>
<hr>
<a href="node595.htm#Node595"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node591.htm#Node591"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node597.htm#Node597"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node591.htm#Node591"> Fortran Bindings with <tt>mpif.h</tt> or the <tt>mpi</tt> Module</a>
<b>Next: </b><a href="node597.htm#Node597"> Virtual Topologies for <font face="sans-serif"> MPI</font> Processes Fortran Bindings</a>
<b>Previous: </b><a href="node595.htm#Node595"> Collective Communication Fortran Bindings</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
