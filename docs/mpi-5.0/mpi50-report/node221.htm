<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-topol/topol-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Introduction</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h1><span id="Node221">9.1. Introduction</span></h1>
<a href="node220.htm#Node220"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node220.htm#Node220"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node222.htm#Node222"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node220.htm#Node220"> Virtual Topologies for <font face="sans-serif"> MPI</font> Processes</a>
<b>Next: </b><a href="node222.htm#Node222"> Virtual Topologies</a>
<b>Previous: </b><a href="node220.htm#Node220"> Virtual Topologies for <font face="sans-serif"> MPI</font> Processes</a>
<p>
This chapter discusses the <font face="sans-serif"> MPI</font> <em> virtual topology</em> mechanism.  A <em> virtual topology</em> is an extra,  
optional attribute that one can give to an intra-communicator; <em> virtual topologies</em>  
cannot be added to inter-communicators.  A <em> virtual topology</em> can provide a convenient  
naming mechanism for the <font face="sans-serif"> MPI</font> processes of a group (within a communicator), and  
additionally, may assist the runtime system in mapping the processes onto  
hardware.  
<P> 
As stated in Chapter <a href="node175.htm#Node175">Groups, Contexts, Communicators, and Caching</a>,  
a group in <font face="sans-serif"> MPI</font> is an ordered set of <font face="sans-serif"> n</font> process identifiers (henceforth  
<font face="sans-serif"> MPI</font> processes). Each <font face="sans-serif"> MPI</font> process in  
the group is assigned a rank between <font face="sans-serif"> 0</font> and <font face="sans-serif"> n-1</font>. In many parallel  
applications, a linear assignment of integer ranks to the <font face="sans-serif"> MPI</font> processes does not adequately reflect the logical  
communication pattern of the <font face="sans-serif"> MPI</font> processes (which is usually determined by the  
underlying problem geometry and the numerical algorithm used).  Often the  
<font face="sans-serif"> MPI</font> processes are arranged in topological patterns such as two- or  
three-dimensional grids. More generally, the logical <font face="sans-serif"> MPI</font> process arrangement is  
described by a graph.  In this chapter we will refer to this logical <font face="sans-serif"> MPI</font> process  
arrangement as the <em> virtual topology</em>.  
<P> 
A clear distinction must be made between the <em> virtual topology</em> and the  
topology of the underlying, physical hardware.  The <em> virtual topology</em> can be  
exploited by the system in the assignment of processes to physical processors,  
if this helps to improve the communication performance on a given machine. How  
this mapping is done, however, is outside the scope of <font face="sans-serif"> MPI</font>.  The description  
of the <em> virtual topology</em>, on the other hand, depends only on the application,  
and is machine-independent.   
The functions that are described in this chapter  
deal with machine-independent   
mapping and communication on <em> virtual topologies</em>.  
<P> 
 
<br> 
<em> Rationale.</em>  
<P> 
Though physical mapping is not discussed, the  
existence of the <em> virtual topology</em> information may be used as advice by  
the runtime system.  
There are well-known techniques for mapping grid/torus structures to  
hardware topologies such as hypercubes or grids. For more  
complicated graph structures good heuristics often yield nearly optimal  
results [<a href="node626.htm#-Bib51">51</a>]. On the other hand,  
if there is no way for the user to specify the logical process  
arrangement as a <em> virtual topology</em>, a random mapping is most  
likely to result. On some machines, this will lead to  
unnecessary contention in the interconnection network.  
Some details about predicted and measured  
performance improvements that result from good process-to-processor  
mapping on wormhole-routing architectures can be found in  
[<a href="node626.htm#-Bib13">13</a>,<a href="node626.htm#-Bib14">14</a>].  
<P> 
Besides possible performance benefits, the <em> virtual topology</em> can  
function as a convenient, process-naming structure, with   
significant  
benefits for program readability and notational power in  
message-passing programming.  
 (<em> End of rationale.</em>) <br> 

<P>
<hr>
<a href="node220.htm#Node220"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node220.htm#Node220"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node222.htm#Node222"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node220.htm#Node220"> Virtual Topologies for <font face="sans-serif"> MPI</font> Processes</a>
<b>Next: </b><a href="node222.htm#Node222"> Virtual Topologies</a>
<b>Previous: </b><a href="node220.htm#Node220"> Virtual Topologies for <font face="sans-serif"> MPI</font> Processes</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
