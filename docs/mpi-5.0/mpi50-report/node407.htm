<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-tools/prof-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Logic of the Design</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node407">16.2.3. Logic of the Design</span></h2>
<a href="node406.htm#Node406"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node404.htm#Node404"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node408.htm#Node408"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node404.htm#Node404"> Profiling Interface</a>
<b>Next: </b><a href="node408.htm#Node408"> <font face="sans-serif"> MPI</font> Library Implementation</a>
<b>Previous: </b><a href="node406.htm#Node406"> Discussion</a>
<p>
Provided that an <font face="sans-serif"> MPI</font> implementation meets the requirements above, it is  
possible for the implementor of the profiling system to intercept the <font face="sans-serif"> MPI</font>  
calls that  are made by the user program.  The profiling system implementor can then collect any required  
information before calling the underlying <font face="sans-serif"> MPI</font> implementation  
(through its name shifted entry points) to achieve the desired effects.  
<P> 
<br><b> Example</b>  
  
A wrapper to accumulate the total amount of data sent by the  
<font face="sans-serif"> MPI_SEND</font> function, along with the total elapsed time spent in  
the function.  
<P> 
<br> 
<pre style="background-color:#EFEFEF"><tt>static <b>int</b> totalBytes = 0; 
static <b>double</b> totalTime = 0.0; 
 
<b>int</b> <b>MPI_Send</b>(const <b>void</b>* buffer, <b>int</b> count, <b>MPI_Datatype</b> datatype, 
             <b>int</b> dest, <b>int</b> tag, <b>MPI_Comm</b> comm) 
{ 
    <b>double</b> tstart = <b>MPI_Wtime</b>();       /* Pass on all arguments */ 
    <b>int</b> size; 
    <b>int</b> result    = <b>PMPI_Send</b>(buffer, count, datatype, dest, tag, comm); 
 
    totalTime    += <b>MPI_Wtime</b>() - tstart;  /* Compute time */ 
 
    <b>MPI_Type_size</b>(datatype, &amp;size);        /* and size */ 
    totalBytes += count*size; 
 
    <b>return</b> result; 
} 
</tt></pre> 
  
  
<P> 

<P>
<hr>
<a href="node406.htm#Node406"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node404.htm#Node404"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node408.htm#Node408"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node404.htm#Node404"> Profiling Interface</a>
<b>Next: </b><a href="node408.htm#Node408"> <font face="sans-serif"> MPI</font> Library Implementation</a>
<b>Previous: </b><a href="node406.htm#Node406"> Discussion</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
