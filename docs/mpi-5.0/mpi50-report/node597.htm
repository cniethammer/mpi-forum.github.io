<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from appLang-FNames -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Virtual Topologies for <font face="sans-serif"> MPI</font> Processes Fortran Bindings</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node597">22.5.6. Virtual Topologies for  MPI Processes Fortran Bindings</span></h2>
<a href="node596.htm#Node596"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node591.htm#Node591"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node598.htm#Node598"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node591.htm#Node591"> Fortran Bindings with <tt>mpif.h</tt> or the <tt>mpi</tt> Module</a>
<b>Next: </b><a href="node598.htm#Node598"> <font face="sans-serif"> MPI</font> Environmental Management Fortran Bindings</a>
<b>Previous: </b><a href="node596.htm#Node596"> Groups, Contexts, Communicators, and Caching Fortran Bindings</a>
<p>
  <tt> MPI_CART_COORDS(COMM, RANK, MAXDIMS, COORDS, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">RANK</span>, <span style="white-space:nowrap">MAXDIMS</span>, <span style="white-space:nowrap">COORDS(*)</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_CART_CREATE(COMM_OLD, NDIMS, DIMS, PERIODS, REORDER, COMM_CART, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM_OLD</span>, <span style="white-space:nowrap">NDIMS</span>, <span style="white-space:nowrap">DIMS(*)</span>, <span style="white-space:nowrap">COMM_CART</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">PERIODS(*)</span>, <span style="white-space:nowrap">REORDER</span> <br></tt>  
  <tt> MPI_CART_GET(COMM, MAXDIMS, DIMS, PERIODS, COORDS, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">MAXDIMS</span>, <span style="white-space:nowrap">DIMS(*)</span>, <span style="white-space:nowrap">COORDS(*)</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">PERIODS(*)</span> <br></tt>  
  <tt> MPI_CART_MAP(COMM, NDIMS, DIMS, PERIODS, NEWRANK, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">NDIMS</span>, <span style="white-space:nowrap">DIMS(*)</span>, <span style="white-space:nowrap">NEWRANK</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">PERIODS(*)</span> <br></tt>  
  <tt> MPI_CART_RANK(COMM, COORDS, RANK, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">COORDS(*)</span>, <span style="white-space:nowrap">RANK</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_CART_SHIFT(COMM, DIRECTION, DISP, RANK_SOURCE, RANK_DEST, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">DIRECTION</span>, <span style="white-space:nowrap">DISP</span>, <span style="white-space:nowrap">RANK_SOURCE</span>, <span style="white-space:nowrap">RANK_DEST</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_CART_SUB(COMM, REMAIN_DIMS, NEWCOMM, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">NEWCOMM</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">REMAIN_DIMS(*)</span> <br></tt>  
  <tt> MPI_CARTDIM_GET(COMM, NDIMS, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">NDIMS</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_DIMS_CREATE(NNODES, NDIMS, DIMS, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">NNODES</span>, <span style="white-space:nowrap">NDIMS</span>, <span style="white-space:nowrap">DIMS(*)</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_DIST_GRAPH_CREATE(COMM_OLD, N, SOURCES, DEGREES, DESTINATIONS, WEIGHTS, INFO, REORDER, COMM_DIST_GRAPH, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM_OLD</span>, <span style="white-space:nowrap">N</span>, <span style="white-space:nowrap">SOURCES(*)</span>, <span style="white-space:nowrap">DEGREES(*)</span>, <span style="white-space:nowrap">DESTINATIONS(*)</span>, <span style="white-space:nowrap">WEIGHTS(*)</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">COMM_DIST_GRAPH</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">REORDER</span> <br></tt>  
  <tt> MPI_DIST_GRAPH_CREATE_ADJACENT(COMM_OLD, INDEGREE, SOURCES, SOURCEWEIGHTS, OUTDEGREE, DESTINATIONS, DESTWEIGHTS, INFO, REORDER, COMM_DIST_GRAPH, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM_OLD</span>, <span style="white-space:nowrap">INDEGREE</span>, <span style="white-space:nowrap">SOURCES(*)</span>, <span style="white-space:nowrap">SOURCEWEIGHTS(*)</span>, <span style="white-space:nowrap">OUTDEGREE</span>, <span style="white-space:nowrap">DESTINATIONS(*)</span>, <span style="white-space:nowrap">DESTWEIGHTS(*)</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">COMM_DIST_GRAPH</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">REORDER</span> <br></tt>  
  <tt> MPI_DIST_GRAPH_NEIGHBORS(COMM, MAXINDEGREE, SOURCES, SOURCEWEIGHTS, MAXOUTDEGREE, DESTINATIONS, DESTWEIGHTS, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">MAXINDEGREE</span>, <span style="white-space:nowrap">SOURCES(*)</span>, <span style="white-space:nowrap">SOURCEWEIGHTS(*)</span>, <span style="white-space:nowrap">MAXOUTDEGREE</span>, <span style="white-space:nowrap">DESTINATIONS(*)</span>, <span style="white-space:nowrap">DESTWEIGHTS(*)</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_DIST_GRAPH_NEIGHBORS_COUNT(COMM, INDEGREE, OUTDEGREE, WEIGHTED, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">INDEGREE</span>, <span style="white-space:nowrap">OUTDEGREE</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">WEIGHTED</span> <br></tt>  
  <tt> MPI_GRAPH_CREATE(COMM_OLD, NNODES, INDEX, EDGES, REORDER, COMM_GRAPH, IERROR) <br> INTEGER <span style="white-space:nowrap">COMM_OLD</span>, <span style="white-space:nowrap">NNODES</span>, <span style="white-space:nowrap">INDEX(*)</span>, <span style="white-space:nowrap">EDGES(*)</span>, <span style="white-space:nowrap">COMM_GRAPH</span>, <span style="white-space:nowrap">IERROR</span><br>LOGICAL <span style="white-space:nowrap">REORDER</span> <br></tt>  
  <tt> MPI_GRAPH_GET(COMM, MAXINDEX, MAXEDGES, INDEX, EDGES, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">MAXINDEX</span>, <span style="white-space:nowrap">MAXEDGES</span>, <span style="white-space:nowrap">INDEX(*)</span>, <span style="white-space:nowrap">EDGES(*)</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GRAPH_MAP(COMM, NNODES, INDEX, EDGES, NEWRANK, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">NNODES</span>, <span style="white-space:nowrap">INDEX(*)</span>, <span style="white-space:nowrap">EDGES(*)</span>, <span style="white-space:nowrap">NEWRANK</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GRAPH_NEIGHBORS(COMM, RANK, MAXNEIGHBORS, NEIGHBORS, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">RANK</span>, <span style="white-space:nowrap">MAXNEIGHBORS</span>, <span style="white-space:nowrap">NEIGHBORS(*)</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GRAPH_NEIGHBORS_COUNT(COMM, RANK, NNEIGHBORS, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">RANK</span>, <span style="white-space:nowrap">NNEIGHBORS</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_GRAPHDIMS_GET(COMM, NNODES, NEDGES, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">NNODES</span>, <span style="white-space:nowrap">NEDGES</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_INEIGHBOR_ALLGATHER(SENDBUF, SENDCOUNT, SENDTYPE, RECVBUF, RECVCOUNT, RECVTYPE, COMM, REQUEST, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNT</span>, <span style="white-space:nowrap">SENDTYPE</span>, <span style="white-space:nowrap">RECVCOUNT</span>, <span style="white-space:nowrap">RECVTYPE</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_INEIGHBOR_ALLGATHERV(SENDBUF, SENDCOUNT, SENDTYPE, RECVBUF, RECVCOUNTS, DISPLS, RECVTYPE, COMM, REQUEST, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNT</span>, <span style="white-space:nowrap">SENDTYPE</span>, <span style="white-space:nowrap">RECVCOUNTS(*)</span>, <span style="white-space:nowrap">DISPLS(*)</span>, <span style="white-space:nowrap">RECVTYPE</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_INEIGHBOR_ALLTOALL(SENDBUF, SENDCOUNT, SENDTYPE, RECVBUF, RECVCOUNT, RECVTYPE, COMM, REQUEST, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNT</span>, <span style="white-space:nowrap">SENDTYPE</span>, <span style="white-space:nowrap">RECVCOUNT</span>, <span style="white-space:nowrap">RECVTYPE</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_INEIGHBOR_ALLTOALLV(SENDBUF, SENDCOUNTS, SDISPLS, SENDTYPE, RECVBUF, RECVCOUNTS, RDISPLS, RECVTYPE, COMM, REQUEST, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNTS(*)</span>, <span style="white-space:nowrap">SDISPLS(*)</span>, <span style="white-space:nowrap">SENDTYPE</span>, <span style="white-space:nowrap">RECVCOUNTS(*)</span>, <span style="white-space:nowrap">RDISPLS(*)</span>, <span style="white-space:nowrap">RECVTYPE</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_INEIGHBOR_ALLTOALLW(SENDBUF, SENDCOUNTS, SDISPLS, SENDTYPES, RECVBUF, RECVCOUNTS, RDISPLS, RECVTYPES, COMM, REQUEST, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNTS(*)</span>, <span style="white-space:nowrap">SENDTYPES(*)</span>, <span style="white-space:nowrap">RECVCOUNTS(*)</span>, <span style="white-space:nowrap">RECVTYPES(*)</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">SDISPLS(*)</span>, <span style="white-space:nowrap">RDISPLS(*)</span> <br></tt>  
  <tt> MPI_NEIGHBOR_ALLGATHER(SENDBUF, SENDCOUNT, SENDTYPE, RECVBUF, RECVCOUNT, RECVTYPE, COMM, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNT</span>, <span style="white-space:nowrap">SENDTYPE</span>, <span style="white-space:nowrap">RECVCOUNT</span>, <span style="white-space:nowrap">RECVTYPE</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_NEIGHBOR_ALLGATHER_INIT(SENDBUF, SENDCOUNT, SENDTYPE, RECVBUF, RECVCOUNT, RECVTYPE, COMM, INFO, REQUEST, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNT</span>, <span style="white-space:nowrap">SENDTYPE</span>, <span style="white-space:nowrap">RECVCOUNT</span>, <span style="white-space:nowrap">RECVTYPE</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_NEIGHBOR_ALLGATHERV(SENDBUF, SENDCOUNT, SENDTYPE, RECVBUF, RECVCOUNTS, DISPLS, RECVTYPE, COMM, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNT</span>, <span style="white-space:nowrap">SENDTYPE</span>, <span style="white-space:nowrap">RECVCOUNTS(*)</span>, <span style="white-space:nowrap">DISPLS(*)</span>, <span style="white-space:nowrap">RECVTYPE</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_NEIGHBOR_ALLGATHERV_INIT(SENDBUF, SENDCOUNT, SENDTYPE, RECVBUF, RECVCOUNTS, DISPLS, RECVTYPE, COMM, INFO, REQUEST, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNT</span>, <span style="white-space:nowrap">SENDTYPE</span>, <span style="white-space:nowrap">RECVCOUNTS(*)</span>, <span style="white-space:nowrap">DISPLS(*)</span>, <span style="white-space:nowrap">RECVTYPE</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_NEIGHBOR_ALLTOALL(SENDBUF, SENDCOUNT, SENDTYPE, RECVBUF, RECVCOUNT, RECVTYPE, COMM, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNT</span>, <span style="white-space:nowrap">SENDTYPE</span>, <span style="white-space:nowrap">RECVCOUNT</span>, <span style="white-space:nowrap">RECVTYPE</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_NEIGHBOR_ALLTOALL_INIT(SENDBUF, SENDCOUNT, SENDTYPE, RECVBUF, RECVCOUNT, RECVTYPE, COMM, INFO, REQUEST, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNT</span>, <span style="white-space:nowrap">SENDTYPE</span>, <span style="white-space:nowrap">RECVCOUNT</span>, <span style="white-space:nowrap">RECVTYPE</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_NEIGHBOR_ALLTOALLV(SENDBUF, SENDCOUNTS, SDISPLS, SENDTYPE, RECVBUF, RECVCOUNTS, RDISPLS, RECVTYPE, COMM, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNTS(*)</span>, <span style="white-space:nowrap">SDISPLS(*)</span>, <span style="white-space:nowrap">SENDTYPE</span>, <span style="white-space:nowrap">RECVCOUNTS(*)</span>, <span style="white-space:nowrap">RDISPLS(*)</span>, <span style="white-space:nowrap">RECVTYPE</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_NEIGHBOR_ALLTOALLV_INIT(SENDBUF, SENDCOUNTS, SDISPLS, SENDTYPE, RECVBUF, RECVCOUNTS, RDISPLS, RECVTYPE, COMM, INFO, REQUEST, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNTS(*)</span>, <span style="white-space:nowrap">SDISPLS(*)</span>, <span style="white-space:nowrap">SENDTYPE</span>, <span style="white-space:nowrap">RECVCOUNTS(*)</span>, <span style="white-space:nowrap">RDISPLS(*)</span>, <span style="white-space:nowrap">RECVTYPE</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
  <tt> MPI_NEIGHBOR_ALLTOALLW(SENDBUF, SENDCOUNTS, SDISPLS, SENDTYPES, RECVBUF, RECVCOUNTS, RDISPLS, RECVTYPES, COMM, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNTS(*)</span>, <span style="white-space:nowrap">SENDTYPES(*)</span>, <span style="white-space:nowrap">RECVCOUNTS(*)</span>, <span style="white-space:nowrap">RECVTYPES(*)</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">SDISPLS(*)</span>, <span style="white-space:nowrap">RDISPLS(*)</span> <br></tt>  
  <tt> MPI_NEIGHBOR_ALLTOALLW_INIT(SENDBUF, SENDCOUNTS, SDISPLS, SENDTYPES, RECVBUF, RECVCOUNTS, RDISPLS, RECVTYPES, COMM, INFO, REQUEST, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span><br>INTEGER <span style="white-space:nowrap">SENDCOUNTS(*)</span>, <span style="white-space:nowrap">SENDTYPES(*)</span>, <span style="white-space:nowrap">RECVCOUNTS(*)</span>, <span style="white-space:nowrap">RECVTYPES(*)</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">SDISPLS(*)</span>, <span style="white-space:nowrap">RDISPLS(*)</span> <br></tt>  
  <tt> MPI_TOPO_TEST(COMM, STATUS, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">STATUS</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 

<P>
<hr>
<a href="node596.htm#Node596"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node591.htm#Node591"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node598.htm#Node598"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node591.htm#Node591"> Fortran Bindings with <tt>mpif.h</tt> or the <tt>mpi</tt> Module</a>
<b>Next: </b><a href="node598.htm#Node598"> <font face="sans-serif"> MPI</font> Environmental Management Fortran Bindings</a>
<b>Previous: </b><a href="node596.htm#Node596"> Groups, Contexts, Communicators, and Caching Fortran Bindings</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
