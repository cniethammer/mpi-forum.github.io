<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-coll/coll-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Broadcast</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h1><span id="Node122">7.4. Broadcast</span></h1>
<a href="node121.htm#Node121"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node115.htm#Node115"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node123.htm#Node123"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node115.htm#Node115"> Collective Communication</a>
<b>Next: </b><a href="node123.htm#Node123"> Example using <font face="sans-serif"> MPI_BCAST</font></a>
<b>Previous: </b><a href="node121.htm#Node121"> Barrier Synchronization</a>
<p>
  
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_BCAST(<span style="white-space:nowrap">buffer</span>, <span style="white-space:nowrap">count</span>, <span style="white-space:nowrap">datatype</span>, <span style="white-space:nowrap">root</span>, <span style="white-space:nowrap">comm</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> INOUT</span> buffer</TD><TD>starting address of buffer (choice)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> count</TD><TD>number of entries in buffer (nonnegative integer)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> datatype</TD><TD>datatype of buffer (handle)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> root</TD><TD>rank of the root (integer)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> comm</TD><TD>communicator (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Bcast(void *buffer, int count, MPI_Datatype datatype, int root, MPI_Comm comm) <br></tt>  
  
  <tt> int MPI_Bcast_c(void *buffer, MPI_Count count, MPI_Datatype datatype, int root, MPI_Comm comm) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Bcast(buffer, count, datatype, root, comm, ierror) <br> TYPE(*), DIMENSION(..) :: <span style="white-space:nowrap">buffer</span><br>INTEGER, INTENT(IN) :: <span style="white-space:nowrap">count</span>, <span style="white-space:nowrap">root</span><br>TYPE(MPI_Datatype), INTENT(IN) :: <span style="white-space:nowrap">datatype</span><br>TYPE(MPI_Comm), INTENT(IN) :: <span style="white-space:nowrap">comm</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <tt> MPI_Bcast(buffer, count, datatype, root, comm, ierror) !(_c) <br> TYPE(*), DIMENSION(..) :: <span style="white-space:nowrap">buffer</span><br>INTEGER(KIND=MPI_COUNT_KIND), INTENT(IN) :: <span style="white-space:nowrap">count</span><br>TYPE(MPI_Datatype), INTENT(IN) :: <span style="white-space:nowrap">datatype</span><br>INTEGER, INTENT(IN) :: <span style="white-space:nowrap">root</span><br>TYPE(MPI_Comm), INTENT(IN) :: <span style="white-space:nowrap">comm</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_BCAST(BUFFER, COUNT, DATATYPE, ROOT, COMM, IERROR) <br> &lt;type&gt; <span style="white-space:nowrap">BUFFER(*)</span><br>INTEGER <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">ROOT</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
If <font face="sans-serif"> comm</font> is an intra-communicator,  
<font face="sans-serif"> MPI_BCAST</font> broadcasts a message from  
the <font face="sans-serif"> MPI</font> process with rank <font face="sans-serif"> root</font> to all <font face="sans-serif"> MPI</font> processes  
of the group, itself included.  
It is called by all members of  
the  
group using the same arguments for  
<font face="sans-serif"> comm</font>  
and  
<font face="sans-serif"> root</font>.  
On return, the  
content of the root's buffer is copied to all other <font face="sans-serif"> MPI</font> processes.  
<P> 
General, derived datatypes are allowed for <font face="sans-serif"> datatype</font>.  
The type signature of <font face="sans-serif"> count</font>, <font face="sans-serif"> datatype</font> on any <font face="sans-serif"> MPI</font> process must  
be equal to the type signature of <font face="sans-serif"> count</font>, <font face="sans-serif"> datatype</font> at the root.  
This implies that the amount of data sent must be equal to the amount received,  
pairwise between each <font face="sans-serif"> MPI</font> process and the root.  
<font face="sans-serif"> MPI_BCAST</font> and all other data-movement collective routines  
make this restriction.  
Distinct type maps between sender and receiver are still allowed.  
<P> 
The ``in place'' option is not meaningful here.  
<P> 
If <font face="sans-serif"> comm</font> is an inter-communicator, then the call involves all  
<font face="sans-serif"> MPI</font> processes in the inter-communicator, but with one group (group A) defining the  
root.  All <font face="sans-serif"> MPI</font> processes in the other group (group B) pass the same value  
in argument  
<font face="sans-serif"> root</font>, which is the rank of the root in group A.  The root  
passes the value <font face="sans-serif"> MPI_ROOT</font> in <font face="sans-serif"> root</font>.  
All other <font face="sans-serif"> MPI</font> processes in group A pass the value <font face="sans-serif"> MPI_PROC_NULL</font> in  
<font face="sans-serif"> root</font>.  
Data is broadcast from the root to all <font face="sans-serif"> MPI</font> processes in group B.  
The  
buffer arguments of the <font face="sans-serif"> MPI</font> processes in group B must be consistent with  
the buffer argument of the root.  
<P> 
<ul> 
</ul> 

<P>
<hr>
<a href="node121.htm#Node121"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node115.htm#Node115"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node123.htm#Node123"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node115.htm#Node115"> Collective Communication</a>
<b>Next: </b><a href="node123.htm#Node123"> Example using <font face="sans-serif"> MPI_BCAST</font></a>
<b>Previous: </b><a href="node121.htm#Node121"> Barrier Synchronization</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
