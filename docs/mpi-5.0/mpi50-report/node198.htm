<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-context/context-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Library Example #1</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node198">8.5.5. Library Example #1</span></h2>
<a href="node197.htm#Node197"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node193.htm#Node193"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node199.htm#Node199"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node193.htm#Node193"> Motivating Examples</a>
<b>Next: </b><a href="node199.htm#Node199"> Library Example #2</a>
<b>Previous: </b><a href="node197.htm#Node197"> Communication Safety Example</a>
<p>
<br><b> Example</b>  
  
First library example  
<P> 
 The main program:  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>int</b> main(<b>int</b> argc, <b>char</b> *argv[]) 
{ 
  <b>int</b> done = 0; 
  user_lib_t *libh_a, *libh_b; 
  <b>void</b> *dataset1, *dataset2; 
  ... 
  <b>MPI_Init</b>(&amp;argc, &amp;argv); 
  ... 
  init_user_lib(<b>MPI_COMM_WORLD</b>, &amp;libh_a); 
  init_user_lib(<b>MPI_COMM_WORLD</b>, &amp;libh_b); 
  ... 
  user_start_op(libh_a, dataset1); 
  user_start_op(libh_b, dataset2); 
  ... 
  <b>while</b>(!done) 
  { 
     /* work */ 
     ... 
     <b>MPI_Reduce</b>(..., <b>MPI_COMM_WORLD</b>); 
     ... 
     /* see <b>if</b> done */ 
     ... 
  } 
  user_end_op(libh_a); 
  user_end_op(libh_b); 
 
  uninit_user_lib(libh_a); 
  uninit_user_lib(libh_b); 
  <b>MPI_Finalize</b>(); 
  <b>return</b> 0; 
} 
</tt></pre> 
  
<P> 
 The user library initialization code:  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>void</b> init_user_lib(<b>MPI_Comm</b> comm, user_lib_t **handle) 
{ 
  user_lib_t *save; 
 
  user_lib_initsave(&amp;save); /* local */ 
  <b>MPI_Comm_dup</b>(comm, &amp;(save-&gt;comm)); 
 
  /* other inits */ 
  ... 
 
  *handle = save; 
} 
</tt></pre> 
  
<P> 
 User start-up code:  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>void</b> user_start_op(user_lib_t *handle, <b>void</b> *data) 
{ 
  <b>MPI_Irecv</b>( ..., handle-&gt;comm, &amp;(handle-&gt;irecv_handle) ); 
  <b>MPI_Isend</b>( ..., handle-&gt;comm, &amp;(handle-&gt;isend_handle) ); 
} 
</tt></pre> 
  
<P> 
 User communication clean-up code:  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>void</b> user_end_op(user_lib_t *handle) 
{ 
  <b>MPI_Status</b> status; 
  <b>MPI_Wait</b>(&amp;handle-&gt;isend_handle, &amp;status); 
  <b>MPI_Wait</b>(&amp;handle-&gt;irecv_handle, &amp;status); 
} 
</tt></pre> 
  
<P> 
 User object clean-up code:  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>void</b> uninit_user_lib(user_lib_t *handle) 
{ 
  <b>MPI_Comm_free</b>(&amp;(handle-&gt;comm)); 
  free(handle); 
} 
</tt></pre> 
  
  
<P> 

<P>
<hr>
<a href="node197.htm#Node197"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node193.htm#Node193"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node199.htm#Node199"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node193.htm#Node193"> Motivating Examples</a>
<b>Next: </b><a href="node199.htm#Node199"> Library Example #2</a>
<b>Previous: </b><a href="node197.htm#Node197"> Communication Safety Example</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
