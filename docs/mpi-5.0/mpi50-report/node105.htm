<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-datatypes/datatypes-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Extent and Bounds of Datatypes</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node105">6.1.7. Extent and Bounds of Datatypes</span></h2>
<a href="node104.htm#Node104"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node98.htm#Node98"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node106.htm#Node106"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node98.htm#Node98"> Derived Datatypes</a>
<b>Next: </b><a href="node106.htm#Node106"> True Extent of Datatypes</a>
<b>Previous: </b><a href="node104.htm#Node104"> Lower-Bound and Upper-Bound Markers</a>
<p>
  
  
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_TYPE_GET_EXTENT(<span style="white-space:nowrap">datatype</span>, <span style="white-space:nowrap">lb</span>, <span style="white-space:nowrap">extent</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> datatype</TD><TD>datatype to get information on (handle)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> lb</TD><TD>lower bound of datatype (integer)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> extent</TD><TD>extent of datatype (integer)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Type_get_extent(MPI_Datatype datatype, MPI_Aint *lb, MPI_Aint *extent) <br></tt>  
  
  <tt> int MPI_Type_get_extent_c(MPI_Datatype datatype, MPI_Count *lb, MPI_Count *extent) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Type_get_extent(datatype, lb, extent, ierror) <br> TYPE(MPI_Datatype), INTENT(IN) :: <span style="white-space:nowrap">datatype</span><br>INTEGER(KIND=MPI_ADDRESS_KIND), INTENT(OUT) :: <span style="white-space:nowrap">lb</span>, <span style="white-space:nowrap">extent</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <tt> MPI_Type_get_extent(datatype, lb, extent, ierror) !(_c) <br> TYPE(MPI_Datatype), INTENT(IN) :: <span style="white-space:nowrap">datatype</span><br>INTEGER(KIND=MPI_COUNT_KIND), INTENT(OUT) :: <span style="white-space:nowrap">lb</span>, <span style="white-space:nowrap">extent</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_TYPE_GET_EXTENT(DATATYPE, LB, EXTENT, IERROR) <br> INTEGER <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">LB</span>, <span style="white-space:nowrap">EXTENT</span> <br></tt>  
<P> 
Returns the lower bound and the extent of  
<font face="sans-serif"> datatype</font>  
(as defined in Equation <a href="node98.htm#Equation1">1</a>).  
<P> 
If either <span style="font-size:0.900em;"> OUT</span> parameter cannot express the value  
to be returned (e.g., if the parameter is too small to hold the output  
value), it is set to <font face="sans-serif"> MPI_UNDEFINED</font>.  
<P> 
<font face="sans-serif"> MPI</font> allows one to change the extent of a datatype, using lower bound  
and upper bound markers.  This provides control over the stride of successive  
datatypes that are replicated by datatype constructors, or are  
replicated by the <font face="sans-serif"> count</font> argument in a send or receive  
call.  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_TYPE_CREATE_RESIZED(<span style="white-space:nowrap">oldtype</span>, <span style="white-space:nowrap">lb</span>, <span style="white-space:nowrap">extent</span>, <span style="white-space:nowrap">newtype</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> oldtype</TD><TD>input datatype (handle)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> lb</TD><TD>new lower bound of datatype (integer)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> extent</TD><TD>new extent of datatype (integer)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> newtype</TD><TD>output datatype (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Type_create_resized(MPI_Datatype oldtype, MPI_Aint lb, MPI_Aint extent, MPI_Datatype *newtype) <br></tt>  
  
  <tt> int MPI_Type_create_resized_c(MPI_Datatype oldtype, MPI_Count lb, MPI_Count extent, MPI_Datatype *newtype) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Type_create_resized(oldtype, lb, extent, newtype, ierror) <br> TYPE(MPI_Datatype), INTENT(IN) :: <span style="white-space:nowrap">oldtype</span><br>INTEGER(KIND=MPI_ADDRESS_KIND), INTENT(IN) :: <span style="white-space:nowrap">lb</span>, <span style="white-space:nowrap">extent</span><br>TYPE(MPI_Datatype), INTENT(OUT) :: <span style="white-space:nowrap">newtype</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <tt> MPI_Type_create_resized(oldtype, lb, extent, newtype, ierror) !(_c) <br> TYPE(MPI_Datatype), INTENT(IN) :: <span style="white-space:nowrap">oldtype</span><br>INTEGER(KIND=MPI_COUNT_KIND), INTENT(IN) :: <span style="white-space:nowrap">lb</span>, <span style="white-space:nowrap">extent</span><br>TYPE(MPI_Datatype), INTENT(OUT) :: <span style="white-space:nowrap">newtype</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_TYPE_CREATE_RESIZED(OLDTYPE, LB, EXTENT, NEWTYPE, IERROR) <br> INTEGER <span style="white-space:nowrap">OLDTYPE</span>, <span style="white-space:nowrap">NEWTYPE</span>, <span style="white-space:nowrap">IERROR</span><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">LB</span>, <span style="white-space:nowrap">EXTENT</span> <br></tt>  
<P> 
Returns in <font face="sans-serif"> newtype</font> a handle to a new datatype that is  
identical to <font face="sans-serif"> oldtype</font>, except that the lower bound of this new  
datatype is set to be <font face="sans-serif"> lb</font>, and its upper bound is set to be  
<font face="sans-serif"> lb</font><font face="sans-serif">  + </font><font face="sans-serif"> extent</font>.  
Any previous <b> lb</b>  
and <b> ub</b> markers are erased,  
and a new pair of lower bound and upper bound markers are put in the  
positions indicated by the <font face="sans-serif"> lb</font> and <font face="sans-serif"> extent</font> arguments.  
This affects the behavior of the datatype when used in communication  
operations, with  <font face="sans-serif"> count</font> <i>&gt;1</i>,  and when used in the  
construction of new derived datatypes.  
<P> 

<P>
<hr>
<a href="node104.htm#Node104"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node98.htm#Node98"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node106.htm#Node106"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node98.htm#Node98"> Derived Datatypes</a>
<b>Next: </b><a href="node106.htm#Node106"> True Extent of Datatypes</a>
<b>Previous: </b><a href="node104.htm#Node104"> Lower-Bound and Upper-Bound Markers</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
