<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-binding/binding-2-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Additional Support for Fortran Register-Memory-Synchronization</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node474">20.1.8. Additional Support for Fortran Register-Memory-Synchronization</span></h2>
<a href="node473.htm#Node473"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node466.htm#Node466"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node475.htm#Node475"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node466.htm#Node466"> Support for Fortran</a>
<b>Next: </b><a href="node475.htm#Node475"> Additional Support for Fortran Numeric Intrinsic Types</a>
<b>Previous: </b><a href="node473.htm#Node473"> Requirements on Fortran Compilers</a>
<p>
  
As described in Section <a href="node486.htm#Node486">Problems with Code Movement and Register Optimization</a>,  
a dummy call may be necessary to tell the compiler that registers  
are to be flushed for a given buffer  
or that accesses to a buffer may not be moved across a given point in the execution sequence.  
Only a Fortran binding exists for this call.  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_F_SYNC_REG(<span style="white-space:nowrap">buf</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> INOUT</span> buf</TD><TD>initial address of buffer (choice)</TD></TR>  
</TABLE>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_F_sync_reg(buf) <br> <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: <span style="white-space:nowrap">buf</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_F_SYNC_REG(BUF) <br> <br>&lt;type&gt; <span style="white-space:nowrap">BUF(*)</span> <br></tt>  
<P> 
This routine has no executable statements. It must be compiled in the <font face="sans-serif"> MPI</font> library  
in such a manner that a Fortran compiler cannot detect in the module that the routine  
has an empty body.  
It is used only to force the compiler to flush a cached register value of a variable or buffer  
back to memory (when necessary), or to invalidate the register value.  
<P> 
 
<br> 
<em> Rationale.</em>  
<P> 
This function is not available in other languages  
because it would not be useful.  
This routine has no <font face="sans-serif"> ierror</font> return argument because  
there is no operation that can fail.  
 (<em> End of rationale.</em>) <br> 
 
<br> 
<em> Advice  
        to implementors.</em>  
<P> 
This routine can be bound to a C routine to minimize  
the risk that the Fortran compiler can learn that this routine is empty  
(and that the call to this routine can be removed  
as part of an optimization).  
However, it is explicitly allowed to implement this routine within the  
<tt>mpi_f08</tt> module according to the definition  
for the <tt>mpi</tt> module or <tt>mpif.h</tt> to circumvent  
the overhead of building the internal dope vector to handle  
the assumed-type, assumed-rank argument.  
 (<em> End of advice to implementors.</em>) <br> 
 
<br> 
<em> Rationale.</em>  
<P> 
This routine is not defined with <tt>TYPE(*), DIMENSION(*)</tt>,  
i.e., assumed size instead of assumed rank, because this  
would restrict the usability to ``simply contiguous'' arrays  
and would require overloading with another interface for  
scalar arguments.  
 (<em> End of rationale.</em>) <br> 
 
<br> 
<em> Advice to users.</em>  
<P> 
If only a part of an array (e.g., defined by a subscript triplet)  
is used in a nonblocking routine,  
it is recommended to pass the whole array to <font face="sans-serif"> MPI_F_SYNC_REG</font>  
anyway to minimize the overhead of this no-operation call.  
Note that this routine need not be called  
if <font face="sans-serif"> MPI_ASYNC_PROTECTS_NONBLOCKING</font> is <tt>.TRUE.</tt> and  
the application fully uses the facilities of <tt> ASYNCHRONOUS</tt> arrays.  
 (<em> End of advice to users.</em>) <br> 

<P>
<hr>
<a href="node473.htm#Node473"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node466.htm#Node466"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node475.htm#Node475"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node466.htm#Node466"> Support for Fortran</a>
<b>Next: </b><a href="node475.htm#Node475"> Additional Support for Fortran Numeric Intrinsic Types</a>
<b>Previous: </b><a href="node473.htm#Node473"> Requirements on Fortran Compilers</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
