<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-context/context-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Library Example #2</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node199">8.5.6. Library Example #2</span></h2>
<a href="node198.htm#Node198"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node193.htm#Node193"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node200.htm#Node200"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node193.htm#Node193"> Motivating Examples</a>
<b>Next: </b><a href="node200.htm#Node200"> Inter-Communication</a>
<b>Previous: </b><a href="node198.htm#Node198"> Library Example #1</a>
<p>
<br><b> Example</b>  
  
Second library example  
<P> 
 The main program:  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>int</b> main(<b>int</b> argc, <b>char</b> *argv[]) 
{ 
  <b>int</b> ma, mb; 
  <b>MPI_Group</b> group_world, group_a, group_b; 
  <b>MPI_Comm</b> comm_a, comm_b; 
 
  static <b>int</b> list_a[] = {0, 1}; 
<b>#if</b>  defined(EXAMPLE_2B) || defined(EXAMPLE_2C) 
  static <b>int</b> list_b[] = {0, 2 ,3}; 
<b>#else</b>/* EXAMPLE_2A */ 
  static <b>int</b> list_b[] = {0, 2}; 
<b>#endif</b> 
  <b>int</b> size_list_a = <b>sizeof</b>(list_a)/<b>sizeof</b>(<b>int</b>); 
  <b>int</b> size_list_b = <b>sizeof</b>(list_b)/<b>sizeof</b>(<b>int</b>); 
 
  ... 
  <b>MPI_Init</b>(&amp;argc, &amp;argv); 
  <b>MPI_Comm_group</b>(<b>MPI_COMM_WORLD</b>, &amp;group_world); 
 
  <b>MPI_Group_incl</b>(group_world, size_list_a, list_a, &amp;group_a); 
  <b>MPI_Group_incl</b>(group_world, size_list_b, list_b, &amp;group_b); 
 
  <b>MPI_Comm_create</b>(<b>MPI_COMM_WORLD</b>, group_a, &amp;comm_a); 
  <b>MPI_Comm_create</b>(<b>MPI_COMM_WORLD</b>, group_b, &amp;comm_b); 
 
  <b>if</b>(comm_a != <b>MPI_COMM_NULL</b>) 
     <b>MPI_Comm_rank</b>(comm_a, &amp;ma); 
  <b>if</b>(comm_b != <b>MPI_COMM_NULL</b>) 
     <b>MPI_Comm_rank</b>(comm_b, &amp;mb); 
 
  <b>if</b>(comm_a != <b>MPI_COMM_NULL</b>) 
     lib_call(comm_a); 
 
  <b>if</b>(comm_b != <b>MPI_COMM_NULL</b>) 
  { 
    lib_call(comm_b); 
    lib_call(comm_b); 
  } 
 
  <b>if</b>(comm_a != <b>MPI_COMM_NULL</b>) 
    <b>MPI_Comm_free</b>(&amp;comm_a); 
  <b>if</b>(comm_b != <b>MPI_COMM_NULL</b>) 
    <b>MPI_Comm_free</b>(&amp;comm_b); 
  <b>MPI_Group_free</b>(&amp;group_a); 
  <b>MPI_Group_free</b>(&amp;group_b); 
  <b>MPI_Group_free</b>(&amp;group_world); 
  <b>MPI_Finalize</b>(); 
  <b>return</b> 0; 
} 
</tt></pre> 
  
<P> 
 The library:  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>void</b> lib_call(<b>MPI_Comm</b> comm) 
{ 
  <b>int</b> me, done = 0; 
  <b>MPI_Status</b> status;  
  <b>MPI_Comm_rank</b>(comm, &amp;me); 
  <b>if</b>(me == 0) 
     <b>while</b>(!done) 
     { 
        <b>MPI_Recv</b>(..., <b>MPI_ANY_SOURCE</b>, <b>MPI_ANY_TAG</b>, comm, &amp;status); 
        ... 
     } 
  <b>else</b> 
  { 
    /* work */ 
    <b>MPI_Send</b>(..., 0, ARBITRARY_TAG, comm); 
    ... 
  } 
<b>#ifdef</b> EXAMPLE_2C 
  /* include (resp, exclude) <b>for</b> safety (resp, no safety): */ 
  <b>MPI_Barrier</b>(comm); 
<b>#endif</b> 
} 
</tt></pre> 
  
The above example is three examples, depending on whether or  
not one includes rank 3 in <font face="sans-serif"> list_b</font>, and whether or not a  
synchronizing operation is included in <font face="sans-serif"> lib_call</font>. This example illustrates  
that, despite contexts, subsequent calls to <font face="sans-serif"> lib_call</font> with the  
same context need not be safe from one another (colloquially,  
``back-masking''). Safety is realized if a call to <font face="sans-serif"> MPI_Barrier</font> is  
added. What this demonstrates is that libraries have to be written  
carefully, even with contexts. When rank 3 is excluded, then  
the synchronizing operation is not needed to get safety from  
back-masking.  
<P> 
Algorithms like ``reduce'' and ``allreduce'' have strong enough source  
selectivity properties so that they are inherently okay (no  
back-masking),  
provided that <font face="sans-serif"> MPI</font> provides basic guarantees. So are multiple calls to a  
typical tree-broadcast algorithm with the same root or different roots  
(see [<a href="node626.htm#-Bib65">65</a>]).  
Here we rely on two guarantees of <font face="sans-serif"> MPI</font>: pairwise ordering of  
messages between <font face="sans-serif"> MPI</font> processes in the same context, and source  
selectivity---deleting either feature removes the guarantee that  
back-masking cannot  
be required.  
<P> 
Algorithms that try to do nondeterministic broadcasts or other calls that  
include wildcard operations will not generally have the good properties of the  
deterministic implementations of ``reduce,'' ``allreduce,'' and ``broadcast.''  
Such algorithms would have to utilize the monotonically increasing tags  
(within a communicator scope) to keep things straight.  
<P> 
All of the foregoing is a supposition of ``collective calls'' implemented with  
point-to-point operations. <font face="sans-serif"> MPI</font> implementations may or may not implement  
collective calls using point-to-point operations. These algorithms are used  
to illustrate the issues of correctness and safety, independent of how <font face="sans-serif"> MPI</font>  
implements its collective calls. See also Section <a href="node214.htm#Node214">Formalizing the Loosely Synchronous Model</a>.  
  
<P> 

<P>
<hr>
<a href="node198.htm#Node198"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node193.htm#Node193"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node200.htm#Node200"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node193.htm#Node193"> Motivating Examples</a>
<b>Next: </b><a href="node200.htm#Node200"> Inter-Communication</a>
<b>Previous: </b><a href="node198.htm#Node198"> Library Example #1</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
