<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from appLang-CNames -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>I/O C Bindings</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node568">22.3.12. I/O C Bindings</span></h2>
<a href="node567.htm#Node567"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node556.htm#Node556"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node569.htm#Node569"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node556.htm#Node556"> C Bindings</a>
<b>Next: </b><a href="node569.htm#Node569"> Language Bindings C Bindings</a>
<b>Previous: </b><a href="node567.htm#Node567"> External Interfaces C Bindings</a>
<p>
  <tt> int MPI_CONVERSION_FN_NULL_C(void *userbuf, MPI_Datatype datatype, MPI_Count count, void *filebuf, MPI_Offset position, void *extra_state) <br></tt>  
  <tt> int MPI_CONVERSION_FN_NULL(void *userbuf, MPI_Datatype datatype, int count, void *filebuf, MPI_Offset position, void *extra_state) <br></tt>  
  <tt> int MPI_File_close(MPI_File *fh) <br></tt>  
  <tt> int MPI_File_delete(const char *filename, MPI_Info info) <br></tt>  
  <tt> int MPI_File_get_amode(MPI_File fh, int *amode) <br></tt>  
  <tt> int MPI_File_get_atomicity(MPI_File fh, int *flag) <br></tt>  
  <tt> int MPI_File_get_byte_offset(MPI_File fh, MPI_Offset offset, MPI_Offset *disp) <br></tt>  
  <tt> int MPI_File_get_group(MPI_File fh, MPI_Group *group) <br></tt>  
  <tt> int MPI_File_get_info(MPI_File fh, MPI_Info *info_used) <br></tt>  
  <tt> int MPI_File_get_position_shared(MPI_File fh, MPI_Offset *offset) <br></tt>  
  <tt> int MPI_File_get_position(MPI_File fh, MPI_Offset *offset) <br></tt>  
  <tt> int MPI_File_get_size(MPI_File fh, MPI_Offset *size) <br></tt>  
  <tt> int MPI_File_get_type_extent_c(MPI_File fh, MPI_Datatype datatype, MPI_Count *extent) <br></tt>  
  <tt> int MPI_File_get_type_extent(MPI_File fh, MPI_Datatype datatype, MPI_Aint *extent) <br></tt>  
  <tt> int MPI_File_get_view(MPI_File fh, MPI_Offset *disp, MPI_Datatype *etype, MPI_Datatype *filetype, char *datarep) <br></tt>  
  <tt> int MPI_File_iread_all_c(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iread_all(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iread_at_all_c(MPI_File fh, MPI_Offset offset, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iread_at_all(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iread_at_c(MPI_File fh, MPI_Offset offset, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iread_at(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iread_c(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iread_shared_c(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iread_shared(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iread(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iwrite_all_c(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iwrite_all(MPI_File fh, const void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iwrite_at_all_c(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iwrite_at_all(MPI_File fh, MPI_Offset offset, const void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iwrite_at_c(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iwrite_at(MPI_File fh, MPI_Offset offset, const void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iwrite_c(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iwrite_shared_c(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iwrite_shared(MPI_File fh, const void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_iwrite(MPI_File fh, const void *buf, int count, MPI_Datatype datatype, MPI_Request *request) <br></tt>  
  <tt> int MPI_File_open(MPI_Comm comm, const char *filename, int amode, MPI_Info info, MPI_File *fh) <br></tt>  
  <tt> int MPI_File_preallocate(MPI_File fh, MPI_Offset size) <br></tt>  
  <tt> int MPI_File_read_all_begin_c(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype) <br></tt>  
  <tt> int MPI_File_read_all_begin(MPI_File fh, void *buf, int count, MPI_Datatype datatype) <br></tt>  
  <tt> int MPI_File_read_all_c(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_read_all_end(MPI_File fh, void *buf, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_read_all(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_read_at_all_begin_c(MPI_File fh, MPI_Offset offset, void *buf, MPI_Count count, MPI_Datatype datatype) <br></tt>  
  <tt> int MPI_File_read_at_all_begin(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype) <br></tt>  
  <tt> int MPI_File_read_at_all_c(MPI_File fh, MPI_Offset offset, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_read_at_all_end(MPI_File fh, void *buf, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_read_at_all(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_read_at_c(MPI_File fh, MPI_Offset offset, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_read_at(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_read_c(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_read_ordered_begin_c(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype) <br></tt>  
  <tt> int MPI_File_read_ordered_begin(MPI_File fh, void *buf, int count, MPI_Datatype datatype) <br></tt>  
  <tt> int MPI_File_read_ordered_c(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_read_ordered_end(MPI_File fh, void *buf, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_read_ordered(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_read_shared_c(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_read_shared(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_read(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_seek_shared(MPI_File fh, MPI_Offset offset, int whence) <br></tt>  
  <tt> int MPI_File_seek(MPI_File fh, MPI_Offset offset, int whence) <br></tt>  
  <tt> int MPI_File_set_atomicity(MPI_File fh, int flag) <br></tt>  
  <tt> int MPI_File_set_info(MPI_File fh, MPI_Info info) <br></tt>  
  <tt> int MPI_File_set_size(MPI_File fh, MPI_Offset size) <br></tt>  
  <tt> int MPI_File_set_view(MPI_File fh, MPI_Offset disp, MPI_Datatype etype, MPI_Datatype filetype, const char *datarep, MPI_Info info) <br></tt>  
  <tt> int MPI_File_sync(MPI_File fh) <br></tt>  
  <tt> int MPI_File_write_all_begin_c(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype) <br></tt>  
  <tt> int MPI_File_write_all_begin(MPI_File fh, const void *buf, int count, MPI_Datatype datatype) <br></tt>  
  <tt> int MPI_File_write_all_c(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_write_all_end(MPI_File fh, const void *buf, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_write_all(MPI_File fh, const void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_write_at_all_begin_c(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype) <br></tt>  
  <tt> int MPI_File_write_at_all_begin(MPI_File fh, MPI_Offset offset, const void *buf, int count, MPI_Datatype datatype) <br></tt>  
  <tt> int MPI_File_write_at_all_c(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_write_at_all_end(MPI_File fh, const void *buf, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_write_at_all(MPI_File fh, MPI_Offset offset, const void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_write_at_c(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_write_at(MPI_File fh, MPI_Offset offset, const void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_write_c(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_write_ordered_begin_c(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype) <br></tt>  
  <tt> int MPI_File_write_ordered_begin(MPI_File fh, const void *buf, int count, MPI_Datatype datatype) <br></tt>  
  <tt> int MPI_File_write_ordered_c(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_write_ordered_end(MPI_File fh, const void *buf, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_write_ordered(MPI_File fh, const void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_write_shared_c(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_write_shared(MPI_File fh, const void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_File_write(MPI_File fh, const void *buf, int count, MPI_Datatype datatype, MPI_Status *status) <br></tt>  
  <tt> int MPI_Register_datarep_c(const char *datarep, MPI_Datarep_conversion_function_c *read_conversion_fn, MPI_Datarep_conversion_function_c *write_conversion_fn, MPI_Datarep_extent_function *dtype_file_extent_fn, void *extra_state) <br></tt>  
  <tt> int MPI_Register_datarep(const char *datarep, MPI_Datarep_conversion_function *read_conversion_fn, MPI_Datarep_conversion_function *write_conversion_fn, MPI_Datarep_extent_function *dtype_file_extent_fn, void *extra_state) <br></tt>  
<P> 

<P>
<hr>
<a href="node567.htm#Node567"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node556.htm#Node556"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node569.htm#Node569"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node556.htm#Node556"> C Bindings</a>
<b>Next: </b><a href="node569.htm#Node569"> Language Bindings C Bindings</a>
<b>Previous: </b><a href="node567.htm#Node567"> External Interfaces C Bindings</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
