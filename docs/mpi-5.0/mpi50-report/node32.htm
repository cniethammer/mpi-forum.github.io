<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-terms/terms-2 -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title><font face="sans-serif"> MPI</font> Procedures</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node32">3.4.2.  MPI Procedures</span></h2>
<a href="node31.htm#Node31"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node30.htm#Node30"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node33.htm#Node33"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node30.htm#Node30"> Semantic Terms</a>
<b>Next: </b><a href="node33.htm#Node33"> <font face="sans-serif"> MPI</font> Datatypes</a>
<b>Previous: </b><a href="node31.htm#Node31"> <font face="sans-serif"> MPI</font> Operations</a>
<p>
  
  
  
  
  
All <font face="sans-serif"> MPI</font> procedures can either be <em> local</em> or <em> nonlocal</em>---defined as follows:  
<dl> 
 
<dt> 
<b> Nonlocal procedure:</b><dd> 
  
An <font face="sans-serif"> MPI</font> procedure is <b> nonlocal</b> if returning may require, during its execution,  
some specific semantically-related <font face="sans-serif"> MPI</font> procedure to be called on another <font face="sans-serif"> MPI</font> process.  
<P> 
 
<dt> 
<b> Local procedure:</b><dd> 
  
An <font face="sans-serif"> MPI</font> procedure is <b> local</b> if it is not <em> nonlocal</em>.  
</dl> 
<br> 
An <font face="sans-serif"> MPI</font> operation is implemented as a set of one or more <font face="sans-serif"> MPI</font>  
procedures.  
An <font face="sans-serif"> MPI</font> <b> operation-related procedure</b>  
implements at least a part of a stage  
of an <font face="sans-serif"> MPI</font> operation as described in Section <a href="node31.htm#Node31"><font face="sans-serif"> MPI</font> Operations</a>.  
An <font face="sans-serif"> MPI</font> operation-related procedure may also implement one or more stages of one or several <font face="sans-serif"> MPI</font> operations.  
In certain cases, more than one <font face="sans-serif"> MPI</font> operation-related procedure may be  
needed to implement a single stage.  
<P> 
There are also other <font face="sans-serif"> MPI</font> procedures that do not  
implement any stage of any <font face="sans-serif"> MPI</font> operation.  
<P> 
The semantics of <font face="sans-serif"> MPI</font> operation-related procedures are described using two  
orthogonal (independent) concepts: completeness (depends on which  
stages are included) and locality.  Such procedures can be either  
incomplete, or completing, or freeing, or completing and freeing based  
on the status of the associated operation at the time the procedure  
returns.  
Also, all such procedures can be described as either blocking or nonblocking,  
but these latter two terms refer to combinations of the completeness  
and locality concepts. Additionally, all <font face="sans-serif"> MPI</font> operation-related procedures can be  
collective or noncollective.  
<P> 
  
The following are properties of <font face="sans-serif"> MPI</font> operation-related procedures:  
<dl> 
 
<dt> 
<b> Initialization procedure:</b><dd> 
  
An <font face="sans-serif"> MPI</font> procedure is an <b> initialization procedure</b> if return from the  
procedure indicates that the associated operation has completed its  
initialization stage, which implies that the user has handed over  
control of the argument list (but not contents of the data buffers) to  
<font face="sans-serif"> MPI</font>.  
The user is still allowed to read or modify the contents of the data buffers.  
If an initializing procedure is not also the freeing procedure of the associated  
operation (see below) then the user is not permitted to deallocate  
the data buffers or to modify the array arguments.  
<P> 
 
<dt> 
<b> Starting procedure:</b><dd> 
  
An <font face="sans-serif"> MPI</font> procedure is a <b> starting procedure</b> if return from the  
procedure indicates that the associated operation has completed its  
starting stage, which implies that the user has handed over control of  
the data buffers to <font face="sans-serif"> MPI</font>.  
If a starting procedure is not also a completing procedure of the  
associated operation (see below) then the user is not permitted to  
modify input data buffers or to read output data buffers.  
<P> 
 
<dt> 
<b> Initiation procedure:</b><dd> 
  
An <font face="sans-serif"> MPI</font> procedure is an <b> initiation procedure</b> if return from the  
procedure indicates that both the initialization and  
the starting stage have completed, which implies  
control of the entire argument list is handed over to <font face="sans-serif"> MPI</font>.  
<P> 
 
<dt> 
<b> Completing procedure:</b><dd> 
  
An <font face="sans-serif"> MPI</font> procedure is called <b> completing</b> if return from the  
procedure indicates that at least one associated operation has  
finished its completion stage, which implies that the user can rely on  
the content of the output data buffers and modify the content of input  
and output data buffers of such operation(s). If a completing procedure is not also a  
freeing procedure (see below) then the user is not permitted to  
deallocate the data buffers or to modify the array  
arguments.  
<P> 
 
<dt> 
<b> Incomplete procedure:</b><dd> 
  
An <font face="sans-serif"> MPI</font> procedure is called <b> incomplete</b> if it  
is not a completing procedure.  
<P> 
 
<dt> 
<b> Freeing procedure:</b><dd> 
  
An <font face="sans-serif"> MPI</font> procedure is <b> freeing</b> if return from the procedure  
indicates that at least one associated operation has finished its freeing  
stage, which implies that the user can reuse all parameters specified  
when initializing such associated operation(s).  
</dl> 
<br> 
<dl> 
 
<dt> 
<b> Nonblocking procedure:</b><dd> 
  
An <font face="sans-serif"> MPI</font> procedure is <b> nonblocking</b> if it is incomplete and  
local.  
<P> 
 
<dt> 
<b> Blocking procedure:</b><dd> 
  
An <font face="sans-serif"> MPI</font> procedure is <b> blocking</b> if it is not nonblocking.  
</dl> 
<br> 
 
<br> 
<em> Advice to users.</em>  
<P> 
Note that for operation-related <font face="sans-serif"> MPI</font> procedures, in most cases  
incomplete procedures are local and completing procedures are nonlocal.  
Exceptions are noted where such procedures are defined.  
In many cases an additional prefix  
letter <font face="sans-serif"> I</font> as an abbreviation of the words <b> incomplete</b>  
and <b> immediate</b> marks nonblocking procedures in the procedure name.  
<P> 
 Some categorization examples are listed below.  
<P> 
 Nonblocking procedures:  
<ul> 
 
<li>incomplete and local: <font face="sans-serif"> MPI_ISEND</font>, <font face="sans-serif"> MPI_IRECV</font>,  <font face="sans-serif"> MPI_IBCAST</font>,  
<font face="sans-serif"> MPI_IMPROBE</font>, <font face="sans-serif"> MPI_SEND_INIT</font>, <font face="sans-serif"> MPI_RECV_INIT</font>, ...  
</ul> 
<br> 
 Blocking procedures:  
<ul> 
 
<li>completing and nonlocal: <font face="sans-serif"> MPI_SEND</font>, <font face="sans-serif"> MPI_RECV</font>, <font face="sans-serif"> MPI_BCAST</font>, ...  
 
<li>incomplete and nonlocal: <font face="sans-serif"> MPI_MPROBE</font>, <font face="sans-serif"> MPI_BCAST_INIT</font>, ...,  
<font face="sans-serif"> MPI_FILE_{READ<i>|</i>WRITE}_{AT_ALL<i>|</i>ALL<i>|</i>ORDERED}_BEGIN</font>.  
 
<li>completing and local: <font face="sans-serif"> MPI_BSEND</font>, <font face="sans-serif"> MPI_RSEND</font>, <font face="sans-serif"> MPI_MRECV</font>.  
</ul> 
<br> 
 <font face="sans-serif"> MPI</font> procedures that are not <font face="sans-serif"> MPI</font> operation-related:  
<ul> 
 
<li><font face="sans-serif"> MPI_COMM_RANK</font>, <font face="sans-serif"> MPI_WTIME</font>, <font face="sans-serif"> MPI_PROBE</font>,  <font face="sans-serif"> MPI_IPROBE</font>, ...  
</ul> 
<br> 
 (<em> End of advice to users.</em>) <br> 
<dl> 
 
<dt> 
<b> Collective procedure:</b><dd> 
  
An <font face="sans-serif"> MPI</font> procedure is <b> collective</b> if all processes in a group or groups of <font face="sans-serif"> MPI</font> processes need to invoke the procedure.  
<P> 
Initialization procedures of collective operations over the same  
process group must be executed in the same order by all members of the  
process group.  
<P> 
An <font face="sans-serif"> MPI</font> collective procedure is <b> synchronizing</b> if it will  
only return once all processes in the associated group or groups of <font face="sans-serif"> MPI</font> processes have called the  
appropriate matching <font face="sans-serif"> MPI</font> procedure.  
<P> 
The initiation procedures for nonblocking collective operations and  
the starting procedures for persistent collective operations are local  
and shall not be synchronizing.  
<P> 
All other procedures for collective operations,  
such as for blocking collective operations and the  
initialization procedures for persistent collective operations, may or  
may not be synchronizing.  
<P> 
 
<br> 
<em> Advice to users.</em>  
<P> 
Calling any synchronizing function is erroneous when there is no possibility of  
corresponding calls at all other processes in the associated process  
group.  
<P> 
Waiting for completion of any collective operation is erroneous when there is no possibility  
that all other processes in the associated group will be able to start  
the corresponding operation.  
 (<em> End of advice to users.</em>) <br> 
 
<dt> 
<b> Noncollective procedure:</b><dd> 
  
Noncollective procedures are defined as procedures that are not collective.  
</dl> 
<br> 
The definition of  
<b> local</b>  
and  
<b> nonlocal</b>  
<font face="sans-serif"> MPI</font> procedures  
can also be applied to a specific procedure invocation or to procedure calls <b> under certain constraints</b>.  
For example, a call to a completing receive procedure that happens after the related  
send operation was already started may be described as local, even though the completing receive procedure without the constraint is nonlocal.  
More generally, a call to any completing procedure that happens after the operation was already  
<em> enabled</em>  
is local, even if the completing procedure without the constraint is nonlocal.  
Another example, a call to a blocking collective procedure using a process group of size one is local, even if the blocking collective procedure without the constraint is nonlocal.  
<P> 

<P>
<hr>
<a href="node31.htm#Node31"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node30.htm#Node30"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node33.htm#Node33"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node30.htm#Node30"> Semantic Terms</a>
<b>Next: </b><a href="node33.htm#Node33"> <font face="sans-serif"> MPI</font> Datatypes</a>
<b>Previous: </b><a href="node31.htm#Node31"> <font face="sans-serif"> MPI</font> Operations</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
