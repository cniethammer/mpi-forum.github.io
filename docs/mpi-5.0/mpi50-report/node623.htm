<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-changes/changes -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Changes in <font face="sans-serif"> MPI-3.0</font></title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node623">23.5.2. Changes in  MPI-3.0</span></h2>
<a href="node622.htm#Node622"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node621.htm#Node621"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node624.htm#Node624"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node621.htm#Node621"> Changes from Version 2.2 to Version 3.0</a>
<b>Next: </b><a href="node624.htm#Node624"> Changes from Version 2.1 to Version 2.2</a>
<b>Previous: </b><a href="node622.htm#Node622"> Fixes to Errata in Previous Versions of <font face="sans-serif"> MPI</font></a>
<p>
<ol> 
 
1. Section <a href="node44.htm#Node44">Deprecated and Removed Interfaces</a> on page <a href="node44.htm#Node44">Deprecated and Removed Interfaces</a>,  
Section <a href="node458.htm#Node458">C++ Bindings</a> on page <a href="node458.htm#Node458">C++ Bindings</a> and all other chapters.   
<br>  
The C++ bindings were removed from the standard.  
See errata   
in Section <a href="node622.htm#Node622">Fixes to Errata in Previous Versions of <font face="sans-serif"> MPI</font></a> on page <a href="node622.htm#Node622">Fixes to Errata in Previous Versions of <font face="sans-serif"> MPI</font></a>  
for the latest changes to the <font face="sans-serif"> MPI</font> C++ binding defined in <font face="sans-serif"> MPI-2.2</font>.   
<br>This change may affect backward compatibility.  
<P> 
 
<br> 
2.   
Section <a href="node44.htm#Node44">Deprecated and Removed Interfaces</a> on page <a href="node44.htm#Node44">Deprecated and Removed Interfaces</a>,  
Section <a href="node446.htm#Node446">Deprecated since <font face="sans-serif"> MPI-2.0</font></a> on page <a href="node446.htm#Node446">Deprecated since <font face="sans-serif"> MPI-2.0</font></a> and  
Section <a href="node452.htm#Node452">Removed <font face="sans-serif"> MPI-1</font> Bindings</a> on page <a href="node452.htm#Node452">Removed <font face="sans-serif"> MPI-1</font> Bindings</a>.  
<br>  
The deprecated functions   
<font face="sans-serif"> MPI_TYPE_HVECTOR</font>,  
<font face="sans-serif"> MPI_TYPE_HINDEXED</font>,  
<font face="sans-serif"> MPI_TYPE_STRUCT</font>,  
<font face="sans-serif"> MPI_ADDRESS</font>,  
<font face="sans-serif"> MPI_TYPE_EXTENT</font>,  
<font face="sans-serif"> MPI_TYPE_LB</font>,  
<font face="sans-serif"> MPI_TYPE_UB</font>,  
<font face="sans-serif"> MPI_ERRHANDLER_CREATE</font>   
(and its callback function prototype <font face="sans-serif"> MPI_Handler_function</font>),  
<font face="sans-serif"> MPI_ERRHANDLER_SET</font>,  
<font face="sans-serif"> MPI_ERRHANDLER_GET</font>,  
the deprecated special datatype handles  
<font face="sans-serif"> MPI_LB</font>,  
<font face="sans-serif"> MPI_UB</font>,  
and the constants  
<font face="sans-serif"> MPI_COMBINER_HINDEXED_INTEGER</font>,  
<font face="sans-serif"> MPI_COMBINER_HVECTOR_INTEGER</font>,  
<font face="sans-serif"> MPI_COMBINER_STRUCT_INTEGER</font>  
were removed from the standard.   
<br>This change may affect backward compatibility.  
<P> 
  
 
<br> 
3. Section <a href="node29.htm#Node29">Procedure Specification</a> on page <a href="node29.htm#Node29">Procedure Specification</a>.   
<br>  
Clarified parameter usage for <span style="font-size:0.900em;"> IN</span> parameters. C bindings are now const-correct where  
backward compatibility is preserved.   
<P> 
 
<br> 
4. Section <a href="node38.htm#Node38">Named Constants</a> on page <a href="node38.htm#Node38">Named Constants</a> and  
Section <a href="node229.htm#Node229">Distributed Graph Constructor</a> on page <a href="node229.htm#Node229">Distributed Graph Constructor</a>.   
<br>  
The recommended C implementation value for <font face="sans-serif"> MPI_UNWEIGHTED</font>   
changed from NULL to non-NULL.   
An additional weight array constant (<font face="sans-serif"> MPI_WEIGHTS_EMPTY</font>) was introduced.  
<P> 
 
<br> 
5. Section <a href="node38.htm#Node38">Named Constants</a> on page <a href="node38.htm#Node38">Named Constants</a> and   
Section <a href="node246.htm#Node246">Version Inquiries</a> on page <a href="node246.htm#Node246">Version Inquiries</a>.   
<br>  
Added the new routine <font face="sans-serif"> MPI_GET_LIBRARY_VERSION</font>   
to query library specific versions,  
and the new constant <font face="sans-serif"> MPI_MAX_LIBRARY_VERSION_STRING</font>.  
<P> 
 
<br> 
6. Sections <a href="node42.htm#Node42">Counts</a>, <a href="node59.htm#Node59">Message Data</a>,  
<a href="node59.htm#Table4">4</a>, <a href="node133.htm#Node133">Predefined Reduction Operations</a>,   
on pages <a href="node42.htm#Node42">Counts</a>, <a href="node59.htm#Node59">Message Data</a>,  
<a href="node59.htm#Table4">4</a>, <a href="node133.htm#Node133">Predefined Reduction Operations</a>,  
Sections <a href="node98.htm#Node98">Derived Datatypes</a>,<a href="node105.htm#Node105">Extent and Bounds of Datatypes</a>,<a href="node106.htm#Node106">True Extent of Datatypes</a>,<a href="node109.htm#Node109">Use of General Datatypes in Communication</a>,<a href="node449.htm#Node450">Host Rank</a>on pages <a href="node98.htm#Node98">Derived Datatypes</a>,<a href="node105.htm#Node105">Extent and Bounds of Datatypes</a>,<a href="node106.htm#Node106">True Extent of Datatypes</a>,<a href="node109.htm#Node109">Use of General Datatypes in Communication</a>,<a href="node449.htm#Node450">Host Rank</a>,and  
Annex <a href="node540.htm#Node540">Defined Constants</a> on page <a href="node540.htm#Node540">Defined Constants</a>.  
<br>  
New inquiry functions, <font face="sans-serif"> MPI_TYPE_SIZE_X</font>, <font face="sans-serif"> MPI_TYPE_GET_EXTENT_X</font>,  
<font face="sans-serif"> MPI_TYPE_GET_TRUE_EXTENT_X</font>, and <font face="sans-serif"> MPI_GET_ELEMENTS_X</font>, return their results  
as an <font face="sans-serif"> MPI_Count</font> value, which is a new type large enough to represent element  
counts in memory, file views, etc. A new function, <font face="sans-serif"> MPI_STATUS_SET_ELEMENTS_X</font>,  
modifies the opaque part of an <font face="sans-serif"> MPI_Status</font> object so that a call to <font face="sans-serif"> MPI_GET_ELEMENTS_X</font>  
returns the provided <font face="sans-serif"> MPI_Count</font> value (in Fortran, <font face="sans-serif"> INTEGER(KIND=MPI_COUNT_KIND)</font> ).  
The corresponding predefined datatype is <font face="sans-serif"> MPI_COUNT</font>.    
<P> 
 
<br> 
7. Chapter <a href="node55.htm#Node55">Point-to-Point Communication</a> on page <a href="node55.htm#Node55">Point-to-Point Communication</a> through  
Chapter <a href="node465.htm#Node465">Language Bindings</a> on page <a href="node465.htm#Node465">Language Bindings</a>.  
<br>  
In the C language bindings, the array-arguments' interfaces were modified to consistently   
use <tt>[]</tt> instead of <tt>*</tt>.  
<P> 
Exceptions are <font face="sans-serif"> MPI_INIT</font>, which continues to use   
<tt>char ***argv</tt>   
(correct because of subtle rules regarding the use of   
the <tt>&amp;</tt> operator with <tt>char *argv[]</tt>),   
and <font face="sans-serif"> MPI_INIT_THREAD</font>, which is changed to be   
consistent with <font face="sans-serif"> MPI_INIT</font>.  
 <P> 
 
<br> 
8. Sections <a href="node62.htm#Node62">Return Status</a>,<a href="node103.htm#Node103">Address and Size Procedures</a>,<a href="node109.htm#Node109">Use of General Datatypes in Communication</a>,<a href="node113.htm#Node113">Pack and Unpack</a>on pages <a href="node62.htm#Node62">Return Status</a>,   
<a href="node103.htm#Node103">Address and Size Procedures</a>,  
<a href="node109.htm#Node109">Use of General Datatypes in Communication</a>,   
<a href="node113.htm#Node113">Pack and Unpack</a>.  
<br>  
The functions <font face="sans-serif"> MPI_GET_COUNT</font> and <font face="sans-serif"> MPI_GET_ELEMENTS</font> were  
defined to set the <font face="sans-serif"> count</font> argument to <font face="sans-serif"> MPI_UNDEFINED</font> when that argument  
would overflow.   
The functions <font face="sans-serif"> MPI_PACK_SIZE</font> and <font face="sans-serif"> MPI_TYPE_SIZE</font> were   
defined to set the <font face="sans-serif"> size</font> argument to <font face="sans-serif"> MPI_UNDEFINED</font> when that argument   
would overflow. In all other <font face="sans-serif"> MPI-2.2</font>  
routines, the type and semantics of the count arguments remain unchanged, i.e., <tt> int</tt>  
or <tt> INTEGER</tt>.   
 <P> 
 
<br> 
9. Section <a href="node63.htm#Node63">Passing <font face="sans-serif"> MPI_STATUS_IGNORE</font> for Status</a> on page <a href="node63.htm#Node63">Passing <font face="sans-serif"> MPI_STATUS_IGNORE</font> for Status</a>, and  
Section <a href="node80.htm#Node80">Probe and Cancel</a> on page <a href="node80.htm#Node80">Probe and Cancel</a>.  
<br>  
<font face="sans-serif"> MPI_STATUS_IGNORE</font> can also be used in   
<font face="sans-serif"> MPI_IPROBE</font>, <font face="sans-serif"> MPI_PROBE</font>,  
<font face="sans-serif"> MPI_IMPROBE</font>, and <font face="sans-serif"> MPI_MPROBE</font>.  
<P> 
 
<br> 
10. Section <a href="node80.htm#Node80">Probe and Cancel</a> on page <a href="node80.htm#Node80">Probe and Cancel</a> and    
Section <a href="node86.htm#Node86">Null <font face="sans-serif"> MPI</font> Processes</a> on page <a href="node86.htm#Node86">Null <font face="sans-serif"> MPI</font> Processes</a>.   
<br>  
The use of <font face="sans-serif"> MPI_PROC_NULL</font> in probe operations was clarified.   
A special predefined message <font face="sans-serif"> MPI_MESSAGE_NO_PROC</font>   
was defined for the use of matching probe   
(i.e., the new <font face="sans-serif"> MPI_MPROBE</font> and <font face="sans-serif"> MPI_IMPROBE</font>)   
with <font face="sans-serif"> MPI_PROC_NULL</font>.   
 <P> 
 
<br> 
11. Sections <a href="node82.htm#Node82">Matching Probe</a>,   
<a href="node83.htm#Node83">Matched Receives</a>,   
<a href="node509.htm#Node509">Transfer of Handles</a>,   
<a href="node540.htm#Node540">Defined Constants</a>  
on pages <a href="node82.htm#Node82">Matching Probe</a>,  
<a href="node83.htm#Node83">Matched Receives</a>,  
<a href="node509.htm#Node509">Transfer of Handles</a>,  
<a href="node540.htm#Node540">Defined Constants</a>.   
<br>  
Like <font face="sans-serif"> MPI_PROBE</font> and <font face="sans-serif"> MPI_IPROBE</font>, the new <font face="sans-serif"> MPI_MPROBE</font> and <font face="sans-serif"> MPI_IMPROBE</font>   
operations allow incoming messages to be queried without actually receiving them, except that  
<font face="sans-serif"> MPI_MPROBE</font> and <font face="sans-serif"> MPI_IMPROBE</font> provide a mechanism to receive the specific message  
with the new routines <font face="sans-serif"> MPI_MRECV</font> and <font face="sans-serif"> MPI_IMRECV</font> regardless of other intervening probe or receive operations.   
The opaque object <font face="sans-serif"> MPI_Message</font>, the null handle <font face="sans-serif"> MPI_MESSAGE_NULL</font>, and  
the conversion functions    
<font face="sans-serif"> MPI_Message_c2f</font> and  
<font face="sans-serif"> MPI_Message_f2c</font>   
were defined.   
<P> 
 
<br> 
12. Section <a href="node100.htm#Node100">Datatype Constructors</a> on page <a href="node100.htm#Node100">Datatype Constructors</a> and  
Section <a href="node111.htm#Node111">Decoding a Datatype</a> on page <a href="node111.htm#Node111">Decoding a Datatype</a>.   
<br>  
The routine <font face="sans-serif"> MPI_TYPE_CREATE_HINDEXED_BLOCK</font>   
and constant <font face="sans-serif"> MPI_COMBINER_HINDEXED_BLOCK</font> were added.  
<P> 
 
<br> 
13. Chapter <a href="node115.htm#Node115">Collective Communication</a> on page <a href="node115.htm#Node115">Collective Communication</a> and  
Section <a href="node147.htm#Node147">Nonblocking Collective Operations</a> on page <a href="node147.htm#Node147">Nonblocking Collective Operations</a>.   
<br>  
Added nonblocking interfaces to all collective operations.  
<P> 
 
<br> 
14. Sections <a href="node190.htm#Node190">Communicator Constructors</a>,   
<a href="node192.htm#Node192">Communicator Info</a>,<a href="node317.htm#Node317">Window Info</a>,on pages <a href="node190.htm#Node190">Communicator Constructors</a>,  
<a href="node192.htm#Node192">Communicator Info</a>,<a href="node317.htm#Node317">Window Info</a>.<br>  
The new routines <font face="sans-serif"> MPI_COMM_DUP_WITH_INFO</font>,   
<font face="sans-serif"> MPI_COMM_SET_INFO</font>, <font face="sans-serif"> MPI_COMM_GET_INFO</font>,   
<font face="sans-serif"> MPI_WIN_SET_INFO</font>, and <font face="sans-serif"> MPI_WIN_GET_INFO</font> wereadded.  
The routine <font face="sans-serif"> MPI_COMM_DUP</font> must also duplicate   
info hints.   
<P> 
 
<br> 
15. Section <a href="node190.htm#Node190">Communicator Constructors</a> on page <a href="node190.htm#Node190">Communicator Constructors</a>.   
<br>  
Added <font face="sans-serif"> MPI_COMM_IDUP</font>.   
<P> 
 
<br> 
16. Section <a href="node190.htm#Node190">Communicator Constructors</a> on page <a href="node190.htm#Node190">Communicator Constructors</a>.   
<br>  
Added the new communicator construction routine <font face="sans-serif"> MPI_COMM_CREATE_GROUP</font>, which is  
invoked only by the processes in the group of the new communicator being constructed.  
<P> 
 
<br> 
17. Section <a href="node190.htm#Node190">Communicator Constructors</a> on page <a href="node190.htm#Node190">Communicator Constructors</a>.   
<br>  
Added the <font face="sans-serif"> MPI_COMM_SPLIT_TYPE</font> routine  
and the communicator split type constant <font face="sans-serif"> MPI_COMM_TYPE_SHARED</font>.  
<P> 
 
<br> 
18. Section <a href="node202.htm#Node202">Inter-Communicator Operations</a> on page <a href="node202.htm#Node202">Inter-Communicator Operations</a>.   
<br>  
In <font face="sans-serif"> MPI-2.2</font>, communication involved in an  <font face="sans-serif"> MPI_INTERCOMM_CREATE</font> operation   
could interfere with point-to-point communication on the parent   
communicator with the same tag or <font face="sans-serif"> MPI_ANY_TAG</font>.  This interference has   
been removed in <font face="sans-serif"> MPI-3.0</font>.  
<P> 
 
<br> 
19. Section <a href="node213.htm#Node213">Naming Objects</a> on page <a href="node213.htm#Node213">Naming Objects</a>.   
<br>  
Section 6.8 on page 238.  
The constant <font face="sans-serif"> MPI_MAX_OBJECT_NAME</font> also applies for type and window names.   
<P> 
 
<br> 
20. Section <a href="node233.htm#Node233">Low-Level Topology Functions</a> on page <a href="node233.htm#Node233">Low-Level Topology Functions</a>.   
<br>  
<font face="sans-serif"> MPI_CART_MAP</font> can also be used for a zero-dimensional topologies.   
<P> 
 
<br> 
21. Section <a href="node234.htm#Node234">Neighborhood Collective Communication on Virtual Topologies</a> on page <a href="node234.htm#Node234">Neighborhood Collective Communication on Virtual Topologies</a> and  
Section <a href="node237.htm#Node237">Nonblocking Neighborhood Communication on Process Topologies</a> on page <a href="node237.htm#Node237">Nonblocking Neighborhood Communication on Process Topologies</a>.  
<br>  
The following neighborhood collective communication routines   
were added to support sparse communication on virtual topology grids:   
<font face="sans-serif"> MPI_NEIGHBOR_ALLGATHER</font>, <font face="sans-serif"> MPI_NEIGHBOR_ALLGATHERV</font>,   
<font face="sans-serif"> MPI_NEIGHBOR_ALLTOALL</font>, <font face="sans-serif"> MPI_NEIGHBOR_ALLTOALLV</font>,  
<font face="sans-serif"> MPI_NEIGHBOR_ALLTOALLW</font> and the nonblocking variants    
<font face="sans-serif"> MPI_INEIGHBOR_ALLGATHER</font>, <font face="sans-serif"> MPI_INEIGHBOR_ALLGATHERV</font>,  
<font face="sans-serif"> MPI_INEIGHBOR_ALLTOALL</font>, <font face="sans-serif"> MPI_INEIGHBOR_ALLTOALLV</font>, and  
<font face="sans-serif"> MPI_INEIGHBOR_ALLTOALLW</font>.  
The displacement arguments in <font face="sans-serif"> MPI_NEIGHBOR_ALLTOALLW</font>  
and <font face="sans-serif"> MPI_INEIGHBOR_ALLTOALLW</font> were defined as address size integers.  
In <font face="sans-serif"> MPI_DIST_GRAPH_NEIGHBORS</font>, an ordering rule was added  
for communicators created with <font face="sans-serif"> MPI_DIST_GRAPH_CREATE_ADJACENT</font>.    
<P> 
 
<br> 
22. Section <a href="node269.htm#Node269">Starting <font face="sans-serif"> MPI</font> Processes</a> on page <a href="node269.htm#Node269">Starting <font face="sans-serif"> MPI</font> Processes</a> and  
Section <a href="node269.htm#Node269">Starting <font face="sans-serif"> MPI</font> Processes</a> on page <a href="node269.htm#Node269">Starting <font face="sans-serif"> MPI</font> Processes</a>.   
<br>  
The use of <font face="sans-serif"> MPI_INIT</font>, <font face="sans-serif"> MPI_INIT_THREAD</font> and <font face="sans-serif"> MPI_FINALIZE</font>  
was clarified.   
After <font face="sans-serif"> MPI</font> is initialized, the application can access information about the execution  
environment by querying the new predefined info object <font face="sans-serif"> MPI_INFO_ENV</font>.  
<P> 
 
<br> 
23. Section <a href="node269.htm#Node269">Starting <font face="sans-serif"> MPI</font> Processes</a> on page <a href="node269.htm#Node269">Starting <font face="sans-serif"> MPI</font> Processes</a>.   
<br>  
Allow calls to <font face="sans-serif"> MPI_T</font> routines before <font face="sans-serif"> MPI_INIT</font>  
and after <font face="sans-serif"> MPI_FINALIZE</font>.   
<P> 
 
<br> 
24. Chapter <a href="node308.htm#Node308">One-Sided Communications</a> on page <a href="node308.htm#Node308">One-Sided Communications</a>.  
<br>  
Substantial revision of the entire One-sided chapter, with new routines for window creation,   
additional synchronization methods in passive target communication, new one-sided communication routines,   
a new memory model, and other changes.   
<P> 
 
<br> 
25. Section <a href="node415.htm#Node415">The <font face="sans-serif"> MPI</font> Tool Information Interface</a> on page <a href="node415.htm#Node415">The <font face="sans-serif"> MPI</font> Tool Information Interface</a>.   
<br>  
A new <font face="sans-serif"> MPI</font> Tool Information Interface was added.  
 <P> 
  
The following changes are related to the Fortran language support.  
 <P> 
 
<br> 
26. Section <a href="node29.htm#Node29">Procedure Specification</a> on page <a href="node29.htm#Node29">Procedure Specification</a>,   
and Sections <a href="node467.htm#Node467">Overview</a>, <a href="node468.htm#Node468">Fortran Support Through the <tt>mpi_f08</tt> Module</a>, <a href="node473.htm#Node473">Requirements on Fortran Compilers</a>   
on pages <a href="node467.htm#Node467">Overview</a>, <a href="node468.htm#Node468">Fortran Support Through the <tt>mpi_f08</tt> Module</a>, and <a href="node473.htm#Node473">Requirements on Fortran Compilers</a>.  
<br>  
The new <tt>mpi_f08</tt> Fortran module was introduced.   
 <P> 
 
<br> 
27. Section <a href="node35.htm#Node35">Opaque Objects</a> on page <a href="node35.htm#Node35">Opaque Objects</a>,   
and Sections <a href="node468.htm#Node468">Fortran Support Through the <tt>mpi_f08</tt> Module</a>, <a href="node469.htm#Node469">Fortran Support Through the <tt>mpi</tt> Module</a>, <a href="node473.htm#Node473">Requirements on Fortran Compilers</a>   
on pages <a href="node468.htm#Node468">Fortran Support Through the <tt>mpi_f08</tt> Module</a>, <a href="node469.htm#Node469">Fortran Support Through the <tt>mpi</tt> Module</a>, and <a href="node473.htm#Node473">Requirements on Fortran Compilers</a>.  
<br>  
Handles to opaque objects were defined as named types within the <tt>mpi_f08</tt> Fortran module.   
The operators <tt>.EQ.</tt>, <tt>.NE.</tt>, <tt>==</tt>, and <tt>/=</tt> were overloaded to allow the comparison of these handles.   
The handle types and the overloaded operators are also available through the <tt>mpi</tt> Fortran module.  
 <P> 
 <P> 
 
<br> 
28. Sections <a href="node38.htm#Node38">Named Constants</a>, <a href="node39.htm#Node39">Choice</a>   
on pages <a href="node38.htm#Node38">Named Constants</a>, <a href="node39.htm#Node39">Choice</a>,    
Sections <a href="node467.htm#Node467">Overview</a>, <a href="node479.htm#Node479">Problems With Fortran Bindings for <font face="sans-serif"> MPI</font></a>,   
<a href="node480.htm#Node480">Problems Due to Strong Typing</a>, <a href="node481.htm#Node481">Problems Due to Data Copying and Sequence Association with Subscript Triplets</a>,   
<a href="node482.htm#Node482">Problems Due to Data Copying and Sequence Association with Vector Subscripts</a>  
on pages <a href="node467.htm#Node467">Overview</a>, <a href="node479.htm#Node479">Problems With Fortran Bindings for <font face="sans-serif"> MPI</font></a>,   
<a href="node480.htm#Node480">Problems Due to Strong Typing</a>, <a href="node481.htm#Node481">Problems Due to Data Copying and Sequence Association with Subscript Triplets</a>,   
<a href="node482.htm#Node482">Problems Due to Data Copying and Sequence Association with Vector Subscripts</a>, and  
Sections <a href="node468.htm#Node468">Fortran Support Through the <tt>mpi_f08</tt> Module</a>, <a href="node469.htm#Node469">Fortran Support Through the <tt>mpi</tt> Module</a>, <a href="node473.htm#Node473">Requirements on Fortran Compilers</a>  
on pages <a href="node468.htm#Node468">Fortran Support Through the <tt>mpi_f08</tt> Module</a>, <a href="node469.htm#Node469">Fortran Support Through the <tt>mpi</tt> Module</a>, <a href="node473.htm#Node473">Requirements on Fortran Compilers</a>.  
<br>  
Within the <tt>mpi_f08</tt> Fortran module,   
choice buffers were defined as assumed-type and assumed-rank   
according to Fortran 2008 with TS 29113  
[<a href="node626.htm#-Bib47">47</a>],  
and the compile-time constant <font face="sans-serif"> MPI_SUBARRAYS_SUPPORTED</font> was set to <tt>.TRUE.</tt>.  
With this, Fortran subscript triplets can be used in nonblocking <font face="sans-serif"> MPI</font> operations;  
vector subscripts are not supported in nonblocking operations.   
If the compiler does not support this Fortran  
TS 29113 feature,  
the constant is set to <tt>.FALSE.</tt>.  
 <P> 
 
<br> 
29. Section <a href="node45.htm#Node45">Fortran Binding Issues</a> on page <a href="node45.htm#Node45">Fortran Binding Issues</a>,  
Section <a href="node468.htm#Node468">Fortran Support Through the <tt>mpi_f08</tt> Module</a> on page <a href="node468.htm#Node468">Fortran Support Through the <tt>mpi_f08</tt> Module</a>, and  
Section <a href="node473.htm#Node473">Requirements on Fortran Compilers</a> on page <a href="node473.htm#Node473">Requirements on Fortran Compilers</a>.  
<br>  
The <font face="sans-serif"> ierror</font> dummy arguments are <tt> OPTIONAL</tt> within the <tt>mpi_f08</tt> Fortran module.   
 <P> 
 
<br> 
30. Section <a href="node62.htm#Node62">Return Status</a> on page <a href="node62.htm#Node62">Return Status</a>,  
Sections <a href="node468.htm#Node468">Fortran Support Through the <tt>mpi_f08</tt> Module</a>, <a href="node469.htm#Node469">Fortran Support Through the <tt>mpi</tt> Module</a>, <a href="node473.htm#Node473">Requirements on Fortran Compilers</a>,   
on pages <a href="node468.htm#Node468">Fortran Support Through the <tt>mpi_f08</tt> Module</a>, <a href="node469.htm#Node469">Fortran Support Through the <tt>mpi</tt> Module</a>, <a href="node473.htm#Node473">Requirements on Fortran Compilers</a>,   
and Section <a href="node510.htm#Node510">Status</a> on page <a href="node510.htm#Node510">Status</a>.   
<br>  
Within the <tt>mpi_f08</tt> Fortran module,  
the status was defined as <font face="sans-serif"> TYPE(MPI_Status)</font>.   
Additionally, within both the <tt>mpi</tt> and the <tt>mpi_f08</tt> modules,  
the constants <font face="sans-serif"> MPI_STATUS_SIZE</font>,   
<font face="sans-serif"> MPI_SOURCE</font>, <font face="sans-serif"> MPI_TAG</font>, <font face="sans-serif"> MPI_ERROR</font>,  
and <font face="sans-serif"> TYPE(MPI_Status)</font>  
are defined.  
New conversion routines were added:   
<font face="sans-serif"> MPI_STATUS_F2F08</font>,   
<font face="sans-serif"> MPI_STATUS_F082F</font>,   
<font face="sans-serif"> MPI_Status_c2f08</font>, and  
<font face="sans-serif"> MPI_Status_f082c</font>,   
In <tt>mpi.h</tt>, the new type <font face="sans-serif"> MPI_F08_status</font>,   
and the external variables <font face="sans-serif"> MPI_F08_STATUS_IGNORE</font> and <font face="sans-serif"> MPI_F08_STATUSES_IGNORE</font> were added.   
 <P> 
 
<br> 
31. Section <a href="node71.htm#Node71">Buffer Allocation and Usage</a> on page <a href="node71.htm#Node71">Buffer Allocation and Usage</a>.  
<br>  
In Fortran with the <tt>mpi</tt> module or <tt>mpif.h</tt>,   
the type of the <font face="sans-serif"> buffer_addr</font> argument of <font face="sans-serif"> MPI_BUFFER_DETACH</font>  
is incorrectly defined and the argument is therefore unused.  
 <P> 
 
<br> 
32. Section <a href="node98.htm#Node98">Derived Datatypes</a> on page <a href="node98.htm#Node98">Derived Datatypes</a>,  
Section <a href="node104.htm#Node104">Lower-Bound and Upper-Bound Markers</a> on page <a href="node104.htm#Node104">Lower-Bound and Upper-Bound Markers</a>, and  
Section <a href="node484.htm#Node484">Fortran Derived Types</a> on page <a href="node484.htm#Node484">Fortran Derived Types</a>.  
<br>  
The Fortran alignments of basic datatypes within Fortran derived types  
are implementation dependent;   
therefore it is recommended to use the <tt> BIND(C)</tt> attribute for derived types  
in <font face="sans-serif"> MPI</font> communication buffers.   
If an array of structures (in C/C++) or derived types (in Fortran)   
is to be used in <font face="sans-serif"> MPI</font> communication buffers,   
it is recommended that the user creates a portable datatype handle and   
additionally applies <font face="sans-serif"> MPI_TYPE_CREATE_RESIZED</font> to this datatype handle.  
<P> 
 
<br> 
33. Sections<a href="node108.htm#Node108">Duplicating a Datatype</a>,  
<a href="node136.htm#Node136">User-Defined Reduction Operations</a>,  
<a href="node139.htm#Node139"><font face="sans-serif"> MPI</font> Process-Local Reduction</a>,  
<a href="node210.htm#Node210">Datatypes</a>,  
<a href="node213.htm#Node213">Naming Objects</a>,  
<a href="node255.htm#Node255">Error Handlers for Communicators</a>,  
<a href="node256.htm#Node256">Error Handlers for Windows</a>,  
<a href="node257.htm#Node257">Error Handlers for Files</a>,  
<a href="node446.htm#Node446">Deprecated since <font face="sans-serif"> MPI-2.0</font></a>,  
<a href="node475.htm#Node475">Additional Support for Fortran Numeric Intrinsic Types</a>  
on pages<a href="node108.htm#Node108">Duplicating a Datatype</a>,  
<a href="node136.htm#Node136">User-Defined Reduction Operations</a>,  
<a href="node139.htm#Node139"><font face="sans-serif"> MPI</font> Process-Local Reduction</a>,  
<a href="node210.htm#Node210">Datatypes</a>,  
<a href="node213.htm#Node213">Naming Objects</a>,  
<a href="node255.htm#Node255">Error Handlers for Communicators</a>,  
<a href="node256.htm#Node256">Error Handlers for Windows</a>,  
<a href="node257.htm#Node257">Error Handlers for Files</a>,  
<a href="node446.htm#Node446">Deprecated since <font face="sans-serif"> MPI-2.0</font></a>, and  
<a href="node475.htm#Node475">Additional Support for Fortran Numeric Intrinsic Types</a>.  
In some routines, the dummy argument names were changed because they  
were identical to the Fortran keywords <tt> TYPE</tt> and <tt> FUNCTION</tt>.  
The new dummy argument names must be used because the  
<tt>mpi</tt> and <tt>mpi_f08</tt> modules guarantee keyword-based actual argument lists.   
The argument name <font face="sans-serif"> type</font> was changed   
  in <font face="sans-serif"> MPI_TYPE_DUP</font>,  
    the Fortran <tt> USER_FUNCTION</tt> of <font face="sans-serif"> MPI_OP_CREATE</font>,  
    <font face="sans-serif"> MPI_TYPE_SET_ATTR</font>,  
    <font face="sans-serif"> MPI_TYPE_GET_ATTR</font>,  
    <font face="sans-serif"> MPI_TYPE_DELETE_ATTR</font>,  
    <font face="sans-serif"> MPI_TYPE_SET_NAME</font>,  
    <font face="sans-serif"> MPI_TYPE_GET_NAME</font>,  
    <font face="sans-serif"> MPI_TYPE_MATCH_SIZE</font>,  
  the callback prototype definition    
    <font face="sans-serif"> MPI_Type_delete_attr_function</font>,  
  and the predefined callback function  
    <font face="sans-serif"> MPI_TYPE_NULL_DELETE_FN</font>;  
<font face="sans-serif"> function</font> was changed  
    in <font face="sans-serif"> MPI_OP_CREATE</font>,  
       <font face="sans-serif"> MPI_COMM_CREATE_ERRHANDLER</font>,  
       <font face="sans-serif"> MPI_WIN_CREATE_ERRHANDLER</font>,  
       <font face="sans-serif"> MPI_FILE_CREATE_ERRHANDLER</font>, and  
       <font face="sans-serif"> MPI_ERRHANDLER_CREATE</font>.  
For consistency reasons, <font face="sans-serif"> INOUBUF</font> was changed to <font face="sans-serif"> INOUTBUF</font>  
  in <font face="sans-serif"> MPI_REDUCE_LOCAL</font>,  
and <font face="sans-serif"> intracomm</font> to <font face="sans-serif"> newintracomm</font>   
  in <font face="sans-serif"> MPI_INTERCOMM_MERGE</font>.  
<P> 
 
<br> 
34. Section <a href="node208.htm#Node208">Communicators</a> on page <a href="node208.htm#Node208">Communicators</a>.   
<br>  
It was clarified that in Fortran, the flag values   
returned by a <font face="sans-serif"> comm_copy_attr_fn</font> callback,  
including <font face="sans-serif"> MPI_COMM_NULL_COPY_FN</font>  
and <font face="sans-serif"> MPI_COMM_DUP_FN</font>,   
are <tt>.FALSE.</tt> and <tt>.TRUE.</tt>; see <font face="sans-serif"> MPI_COMM_CREATE_KEYVAL</font>.  
<P> 
 
<br> 
35. Section <a href="node253.htm#Node253">Memory Allocation</a> on page <a href="node253.htm#Node253">Memory Allocation</a>.  
<br>  
With the <tt>mpi</tt> and <tt>mpi_f08</tt> Fortran modules,   
<font face="sans-serif"> MPI_ALLOC_MEM</font> now also supports <tt> TYPE(C_PTR)</tt> C-pointers   
instead of only returning an address-sized integer that may be usable together   
with a nonstandard Cray-pointer.  
 <P> 
 
<br> 
36. Section <a href="node484.htm#Node484">Fortran Derived Types</a> on page <a href="node484.htm#Node484">Fortran Derived Types</a>, and  
Section <a href="node473.htm#Node473">Requirements on Fortran Compilers</a> on page <a href="node473.htm#Node473">Requirements on Fortran Compilers</a>.  
<br>  
Fortran <tt> SEQUENCE</tt> and <tt> BIND(C)</tt> derived application types  
can now be used as buffers in <font face="sans-serif"> MPI</font> operations.  
 <P> 
 
<br> 
37. Section <a href="node485.htm#Node485">Optimization Problems, an Overview</a> on page <a href="node485.htm#Node485">Optimization Problems, an Overview</a> to   
Section <a href="node499.htm#Node499">Permanent Data Movement</a> on page <a href="node499.htm#Node499">Permanent Data Movement</a>,   
Section <a href="node473.htm#Node473">Requirements on Fortran Compilers</a> on page <a href="node473.htm#Node473">Requirements on Fortran Compilers</a>, and  
Section <a href="node474.htm#Node474">Additional Support for Fortran Register-Memory-Synchronization</a> on page <a href="node474.htm#Node474">Additional Support for Fortran Register-Memory-Synchronization</a>.  
<br>  
The sections about Fortran optimization problems and their solutions were  
partially rewritten and new methods are added, e.g., the use of the <tt> ASYNCHRONOUS</tt> attribute.  
The constant <font face="sans-serif"> MPI_ASYNC_PROTECTS_NONBLOCKING</font> tells whether  
the semantics of the <tt> ASYNCHRONOUS</tt> attribute is extended to protect   
nonblocking operations.  
The Fortran routine <font face="sans-serif"> MPI_F_SYNC_REG</font> is added.   
<font face="sans-serif"> MPI-3.0</font> compliance for an <font face="sans-serif"> MPI</font> library together with a Fortran compiler is  
defined in Section <a href="node473.htm#Node473">Requirements on Fortran Compilers</a>.   
 <P> 
 
<br> 
38. Section <a href="node468.htm#Node468">Fortran Support Through the <tt>mpi_f08</tt> Module</a> on page <a href="node468.htm#Node468">Fortran Support Through the <tt>mpi_f08</tt> Module</a>.  
<br>  
Within the <tt>mpi_f08</tt> Fortran module,  
dummy arguments are now declared with <tt> INTENT=IN</tt>,  
<tt> OUT</tt>, or <tt> INOUT</tt> as defined in the <tt>mpi_f08</tt> interfaces.  
 <P> 
 
<br> 
39. Section <a href="node469.htm#Node469">Fortran Support Through the <tt>mpi</tt> Module</a> on page <a href="node469.htm#Node469">Fortran Support Through the <tt>mpi</tt> Module</a>, and  
Section <a href="node473.htm#Node473">Requirements on Fortran Compilers</a> on page <a href="node473.htm#Node473">Requirements on Fortran Compilers</a>.  
<br>  
The existing <tt>mpi</tt> Fortran module must implement compile-time argument checking.   
 <P> 
 
<br> 
40. Section <a href="node470.htm#Node470">Fortran Support Through the <tt>mpif.h</tt> Include File</a> on page <a href="node470.htm#Node470">Fortran Support Through the <tt>mpif.h</tt> Include File</a>.  
<br>  
The use of the <tt>mpif.h</tt> Fortran include file is now strongly discouraged.   
 <P> 
 
<br> 
41. Section <a href="node540.htm#Node540">Defined Constants</a>,  
Table <b> Predefined functions</b> on page <a href="node540.htm#Node540">Defined Constants</a>,  
Section <a href="node542.htm#Node542">Prototype Definitions</a> on page <a href="node542.htm#Node542">Prototype Definitions</a>,  
and Section <a href="node579.htm#Node579">Groups, Contexts, Communicators, and Caching Fortran 2008 Bindings</a> on page <a href="node579.htm#Node579">Groups, Contexts, Communicators, and Caching Fortran 2008 Bindings</a>.  
<br>  
Within the new <tt>mpi_f08</tt> module, all callback prototype definitions are now  
defined with explicit interfaces <tt> PROCEDURE(MPI_...)</tt> that have the <tt> BIND(C)</tt>   
attribute; user-written callbacks must be modified if the <tt>mpi_f08</tt> module is used.  
 <P> 
 
<br> 
42. Section <a href="node542.htm#Node542">Prototype Definitions</a> on page <a href="node542.htm#Node542">Prototype Definitions</a>.  
<br>  
In some routines, the Fortran callback prototype names were changed   
from <font face="sans-serif"> <i>...</i>_FN</font> to <font face="sans-serif"> <i>...</i>_FUNCTION</font> to be   
consistent with the other language bindings.  
 <P> 
</ol> 

<P>
<hr>
<a href="node622.htm#Node622"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node621.htm#Node621"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node624.htm#Node624"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node621.htm#Node621"> Changes from Version 2.2 to Version 3.0</a>
<b>Next: </b><a href="node624.htm#Node624"> Changes from Version 2.1 to Version 2.2</a>
<b>Previous: </b><a href="node622.htm#Node622"> Fixes to Errata in Previous Versions of <font face="sans-serif"> MPI</font></a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
