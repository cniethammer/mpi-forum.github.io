<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from appLang-CNames -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Tools / <font face="sans-serif"> MPI</font> Tool Information Interface C Bindings</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node572">22.3.16. Tools /  MPI Tool Information Interface C Bindings</span></h2>
<a href="node571.htm#Node571"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node556.htm#Node556"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node573.htm#Node573"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node556.htm#Node556"> C Bindings</a>
<b>Next: </b><a href="node573.htm#Node573"> Deprecated C Bindings</a>
<b>Previous: </b><a href="node571.htm#Node571"> Tools / Profiling Interface C Bindings</a>
<p>
  <tt> int MPI_T_category_changed(int *update_number) <br></tt>  
  <tt> int MPI_T_category_get_categories(int cat_index, int len, int indices[]) <br></tt>  
  <tt> int MPI_T_category_get_cvars(int cat_index, int len, int indices[]) <br></tt>  
  <tt> int MPI_T_category_get_events(int cat_index, int len, int indices[]) <br></tt>  
  <tt> int MPI_T_category_get_index(const char *name, int *cat_index) <br></tt>  
  <tt> int MPI_T_category_get_info(int cat_index, char *name, int *name_len, char *desc, int *desc_len, int *num_cvars, int *num_pvars, int *num_categories) <br></tt>  
  <tt> int MPI_T_category_get_num_events(int cat_index, int *num_events) <br></tt>  
  <tt> int MPI_T_category_get_num(int *num_cat) <br></tt>  
  <tt> int MPI_T_category_get_pvars(int cat_index, int len, int indices[]) <br></tt>  
  <tt> int MPI_T_cvar_get_index(const char *name, int *cvar_index) <br></tt>  
  <tt> int MPI_T_cvar_get_info(int cvar_index, char *name, int *name_len, int *verbosity, MPI_Datatype *datatype, MPI_T_enum *enumtype, char *desc, int *desc_len, int *bind, int *scope) <br></tt>  
  <tt> int MPI_T_cvar_get_num(int *num_cvar) <br></tt>  
  <tt> int MPI_T_cvar_handle_alloc(int cvar_index, void *obj_handle, MPI_T_cvar_handle *handle, int *count) <br></tt>  
  <tt> int MPI_T_cvar_handle_free(MPI_T_cvar_handle *handle) <br></tt>  
  <tt> int MPI_T_cvar_read(MPI_T_cvar_handle handle, void *buf) <br></tt>  
  <tt> int MPI_T_cvar_write(MPI_T_cvar_handle handle, const void *buf) <br></tt>  
  <tt> int MPI_T_enum_get_info(MPI_T_enum enumtype, int *num, char *name, int *name_len) <br></tt>  
  <tt> int MPI_T_enum_get_item(MPI_T_enum enumtype, int index, int *value, char *name, int *name_len) <br></tt>  
  <tt> int MPI_T_event_callback_get_info(MPI_T_event_registration event_registration, MPI_T_cb_safety cb_safety, MPI_Info *info_used) <br></tt>  
  <tt> int MPI_T_event_callback_set_info(MPI_T_event_registration event_registration, MPI_T_cb_safety cb_safety, MPI_Info info) <br></tt>  
  <tt> int MPI_T_event_copy(MPI_T_event_instance event_instance, void *buffer) <br></tt>  
  <tt> int MPI_T_event_get_index(const char *name, int *event_index) <br></tt>  
  <tt> int MPI_T_event_get_info(int event_index, char *name, int *name_len, int *verbosity, MPI_Datatype array_of_datatypes[], MPI_Aint array_of_displacements[], int *num_elements, MPI_T_enum *enumtype, MPI_Info *info, char *desc, int *desc_len, int *bind) <br></tt>  
  <tt> int MPI_T_event_get_num(int *num_events) <br></tt>  
  <tt> int MPI_T_event_get_source(MPI_T_event_instance event_instance, int *source_index) <br></tt>  
  <tt> int MPI_T_event_get_timestamp(MPI_T_event_instance event_instance, MPI_Count *event_timestamp) <br></tt>  
  <tt> int MPI_T_event_handle_alloc(int event_index, void *obj_handle, MPI_Info info, MPI_T_event_registration *event_registration) <br></tt>  
  <tt> int MPI_T_event_handle_free(MPI_T_event_registration event_registration, void *user_data, MPI_T_event_free_cb_function free_cb_function) <br></tt>  
  <tt> int MPI_T_event_handle_get_info(MPI_T_event_registration event_registration, MPI_Info *info_used) <br></tt>  
  <tt> int MPI_T_event_handle_set_info(MPI_T_event_registration event_registration, MPI_Info info) <br></tt>  
  <tt> int MPI_T_event_read(MPI_T_event_instance event_instance, int element_index, void *buffer) <br></tt>  
  <tt> int MPI_T_event_register_callback(MPI_T_event_registration event_registration, MPI_T_cb_safety cb_safety, MPI_Info info, void *user_data, MPI_T_event_cb_function event_cb_function) <br></tt>  
  <tt> int MPI_T_event_set_dropped_handler(MPI_T_event_registration event_registration, MPI_T_event_dropped_cb_function dropped_cb_function) <br></tt>  
  <tt> int MPI_T_finalize(void) <br></tt>  
  <tt> int MPI_T_init_thread(int required, int *provided) <br></tt>  
  <tt> int MPI_T_pvar_get_index(const char *name, int var_class, int *pvar_index) <br></tt>  
  <tt> int MPI_T_pvar_get_info(int pvar_index, char *name, int *name_len, int *verbosity, int *var_class, MPI_Datatype *datatype, MPI_T_enum *enumtype, char *desc, int *desc_len, int *bind, int *readonly, int *continuous, int *atomic) <br></tt>  
  <tt> int MPI_T_pvar_get_num(int *num_pvar) <br></tt>  
  <tt> int MPI_T_pvar_handle_alloc(MPI_T_pvar_session pe_session, int pvar_index, void *obj_handle, MPI_T_pvar_handle *handle, int *count) <br></tt>  
  <tt> int MPI_T_pvar_handle_free(MPI_T_pvar_session pe_session, MPI_T_pvar_handle *handle) <br></tt>  
  <tt> int MPI_T_pvar_readreset(MPI_T_pvar_session pe_session, MPI_T_pvar_handle handle, void *buf) <br></tt>  
  <tt> int MPI_T_pvar_read(MPI_T_pvar_session pe_session, MPI_T_pvar_handle handle, void *buf) <br></tt>  
  <tt> int MPI_T_pvar_reset(MPI_T_pvar_session pe_session, MPI_T_pvar_handle handle) <br></tt>  
  <tt> int MPI_T_pvar_session_create(MPI_T_pvar_session *pe_session) <br></tt>  
  <tt> int MPI_T_pvar_session_free(MPI_T_pvar_session *pe_session) <br></tt>  
  <tt> int MPI_T_pvar_start(MPI_T_pvar_session pe_session, MPI_T_pvar_handle handle) <br></tt>  
  <tt> int MPI_T_pvar_stop(MPI_T_pvar_session pe_session, MPI_T_pvar_handle handle) <br></tt>  
  <tt> int MPI_T_pvar_write(MPI_T_pvar_session pe_session, MPI_T_pvar_handle handle, const void *buf) <br></tt>  
  <tt> int MPI_T_source_get_info(int source_index, char *name, int *name_len, char *desc, int *desc_len, MPI_T_source_order *ordering, MPI_Count *ticks_per_second, MPI_Count *max_ticks, MPI_Info *info) <br></tt>  
  <tt> int MPI_T_source_get_num(int *num_sources) <br></tt>  
  <tt> int MPI_T_source_get_timestamp(int source_index, MPI_Count *timestamp) <br></tt>  
<P> 

<P>
<hr>
<a href="node571.htm#Node571"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node556.htm#Node556"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node573.htm#Node573"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node556.htm#Node556"> C Bindings</a>
<b>Next: </b><a href="node573.htm#Node573"> Deprecated C Bindings</a>
<b>Previous: </b><a href="node571.htm#Node571"> Tools / Profiling Interface C Bindings</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
