<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-terms/terms-2 -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Procedure Specification</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h1><span id="Node29">3.3. Procedure Specification</span></h1>
<a href="node28.htm#Node28"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node26.htm#Node26"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node30.htm#Node30"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node26.htm#Node26"> <font face="sans-serif"> MPI</font> Terms and Conventions</a>
<b>Next: </b><a href="node30.htm#Node30"> Semantic Terms</a>
<b>Previous: </b><a href="node28.htm#Node28"> Naming Conventions</a>
<p>
  
  
  
<P> 
<font face="sans-serif"> MPI</font> procedures are specified using a language-independent notation.  
The arguments of procedure calls are marked as <span style="font-size:0.900em;"> IN</span>, <span style="font-size:0.900em;"> OUT</span>, or  
<span style="font-size:0.900em;"> INOUT</span>.  The meanings of these are:  
<dl> 
 
<dt> 
<b><span style="font-size:0.900em;"> IN</span>:</b><dd> 
  
  the call may use the input value but does not update the  
  argument from the perspective of the caller at any time during the call's execution,  
 
<dt> 
<b><span style="font-size:0.900em;"> OUT</span>:</b><dd> 
  
  the call may update the argument but does not use its input value,  
 
<dt> 
<b><span style="font-size:0.900em;"> INOUT</span>:</b><dd> 
  
  the call may both use and update the argument.  
</dl> 
<br> 
There is one special case---if an argument is a handle to  
an opaque object (these terms are defined in  
Section <a href="node35.htm#Node35">Opaque Objects</a>), and the  
object is updated by the procedure call, then the argument is marked  
<span style="font-size:0.900em;"> INOUT</span> or  
<span style="font-size:0.900em;"> OUT</span>.  It is marked this way even though the handle itself is not  
modified---we use the  
<span style="font-size:0.900em;"> INOUT</span> or  
<span style="font-size:0.900em;"> OUT</span> attribute to denote that what the  
handle <em> references</em> is updated.  
<P> 
 
<br> 
<em> Rationale.</em>  
<P> 
The definition of <font face="sans-serif"> MPI</font> tries to avoid, to the largest possible extent,  
the use of <span style="font-size:0.900em;"> INOUT</span> arguments, because such use is error-prone,  
especially for scalar arguments.  
 (<em> End of rationale.</em>) <br> 
<font face="sans-serif"> MPI</font>'s use of <span style="font-size:0.900em;"> IN</span>, <span style="font-size:0.900em;"> OUT</span>, and <span style="font-size:0.900em;"> INOUT</span> is intended  
to indicate to the user how an argument is  
to be used, but  
does not provide a rigorous classification that can be translated  
directly into  
all  
language bindings (e.g., <tt>INTENT</tt> in Fortran 90 bindings  
or <tt>const</tt> in C bindings). For instance, the ``constant''  
<font face="sans-serif"> MPI_BOTTOM</font> can usually be passed to <span style="font-size:0.900em;"> OUT</span> buffer  
arguments. Similarly, <font face="sans-serif"> MPI_STATUS_IGNORE</font> can be passed as the  
<span style="font-size:0.900em;"> OUT</span> status argument.  
<P> 
A common occurrence for <font face="sans-serif"> MPI</font> functions is an argument that is used as  
<span style="font-size:0.900em;"> IN</span>  
by some processes and <span style="font-size:0.900em;"> OUT</span> by other processes. Such  
an argument is, syntactically, an <span style="font-size:0.900em;"> INOUT</span> argument and is marked as  
such, although, semantically, it is not used in one call both for  
input and for output on a single process.  
<P> 
Another frequent situation arises when an argument value is needed only by  
a subset of the processes.  When an argument is not significant at a  
process then an arbitrary value can be passed as an argument.  
<P> 
 
<br> 
<em> Advice to users.</em>  
<P> 
Note that the programmer is still responsible for avoiding undefined behavior in the host language by not passing uninitialized values to <font face="sans-serif"> MPI</font> procedure calls.  
 (<em> End of advice to users.</em>) <br> 
Unless specified otherwise, an argument of type <span style="font-size:0.900em;"> OUT</span> or type  
<span style="font-size:0.900em;"> INOUT</span> cannot be aliased with any other argument passed to an  
<font face="sans-serif"> MPI</font> procedure.  An example of argument aliasing in C appears below.  
If we define a C procedure like this,  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>void</b> copyIntBuffer(<b>int</b> *pin, <b>int</b> *pout, <b>int</b> len) 
{   <b>int</b> i; 
    <b>for</b> (i=0; i&lt;len; ++i) *pout++ = *pin++; 
} 
</tt></pre> 
  
then a call to it in the following code fragment has aliased arguments.  
<br> 
<pre style="background-color:#EFEFEF"><tt><b>int</b> a[10]; 
copyIntBuffer(a, a+3, 7); 
</tt></pre> 
  
Although the C language allows this, such usage of <font face="sans-serif"> MPI</font> procedures is  
forbidden unless otherwise specified.  Note that Fortran prohibits  
aliasing of arguments.  
<P> 
All <font face="sans-serif"> MPI</font> functions are first specified in the language-independent  
notation.  Immediately below this, language dependent bindings follow:  
<ul> 
 
<li>The ISO C version(s) of the function.  
 
<li>The Fortran version(s) used with <tt>USE mpi_f08</tt>.  
 
<li>The Fortran version of the same  
      function used with <tt>USE mpi</tt> or (deprecated) <tt>INCLUDE 'mpif.h'</tt>.  
</ul> 
<br> 
Some <font face="sans-serif"> MPI</font> procedures have two interfaces for a given language support;  
see Sections <a href="node40.htm#Node40">Absolute Addresses and Relative Address Displacements</a> and <a href="node42.htm#Node42">Counts</a>.  
<P> 
An exception is Section <a href="node415.htm#Node415">The <font face="sans-serif"> MPI</font> Tool Information Interface</a> ``The <font face="sans-serif"> MPI</font> Tool Information Interface'',  
which only provides ISO C interfaces.  
<P> 
``Fortran'' in this document refers to Fortran 90 or later; see  
Section <a href="node43.htm#Node43">Language Binding</a>.  
<P> 
The words function, routine, procedure, procedure call, and call are often used as synonyms within this standard.  
<P> 

<P>
<hr>
<a href="node28.htm#Node28"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node26.htm#Node26"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node30.htm#Node30"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node26.htm#Node26"> <font face="sans-serif"> MPI</font> Terms and Conventions</a>
<b>Next: </b><a href="node30.htm#Node30"> Semantic Terms</a>
<b>Previous: </b><a href="node28.htm#Node28"> Naming Conventions</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
