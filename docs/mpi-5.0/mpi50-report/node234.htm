<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-topol/topol-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Neighborhood Collective Communication on Virtual Topologies</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h1><span id="Node234">9.6. Neighborhood Collective Communication on Virtual Topologies</span></h1>
<a href="node233.htm#Node233"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node220.htm#Node220"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node235.htm#Node235"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node220.htm#Node220"> Virtual Topologies for <font face="sans-serif"> MPI</font> Processes</a>
<b>Next: </b><a href="node235.htm#Node235"> Neighborhood Gather</a>
<b>Previous: </b><a href="node233.htm#Node233"> Low-Level Topology Functions</a>
<p>
  
  
<P> 
<em> Virtual topologies</em> specify a communication graph, but they  
implement no communication function themselves. Many applications  
require sparse nearest neighbor communications that can be expressed as  
graph topologies. We now describe several collective operations that  
perform communication along the edges of a graph representing a <em> virtual topology</em>. All of these  
functions are collective; i.e., they must be called by all <font face="sans-serif"> MPI</font> processes in  
the specified communicator. See Section <a href="node115.htm#Node115">Collective Communication</a>  
for an overview  
of other dense (global) collective communication operations  
and the semantics of collective operations.  
<P> 
If the graph was created with <font face="sans-serif"> MPI_DIST_GRAPH_CREATE_ADJACENT</font>  
with <font face="sans-serif"> sources</font> and <font face="sans-serif"> destinations</font> containing  
<font face="sans-serif"> 0, <i>...</i>, n-1</font>, where <font face="sans-serif"> n</font> is the number of <font face="sans-serif"> MPI</font> processes in the group  
of <font face="sans-serif"> comm_old</font>  
(i.e., the graph is fully connected and also includes   
an edge from each node to itself),  
then the sparse neighborhood communication routine performs the same data exchange  
as the corresponding dense (fully-connected) collective operation.   
In the case of a Cartesian communicator, only nearest neighbor communication  
is provided, corresponding to <font face="sans-serif"> rank_source</font> and <font face="sans-serif"> rank_dest</font>  
in <font face="sans-serif"> MPI_CART_SHIFT</font> with input <font face="sans-serif"> disp</font><font face="sans-serif">  = 1</font>.  
<P> 
 
<br> 
<em> Rationale.</em>  
<P> 
Neighborhood collective communications enable communication on a <em> virtual topology</em>.  
This high-level specification of data exchange among  
neighboring <font face="sans-serif"> MPI</font> processes enables optimizations in the <font face="sans-serif"> MPI</font> library because  
the communication pattern is known statically (the topology).  
Thus, the implementation can compute optimized message schedules during  
creation of the topology [<a href="node626.htm#-Bib40">40</a>]. This  
functionality can significantly simplify the implementation of neighbor  
exchanges [<a href="node626.htm#-Bib36">36</a>].  
 (<em> End of rationale.</em>) <br> 
For a distributed graph topology, created with  
<font face="sans-serif"> MPI_DIST_GRAPH_CREATE</font>, the sequence of neighbors in the  
send and receive buffers at each <font face="sans-serif"> MPI</font> process is defined as the sequence  
returned by <font face="sans-serif"> MPI_DIST_GRAPH_NEIGHBORS</font> for destinations and  
sources, respectively. For a general graph topology, created with  
<font face="sans-serif"> MPI_GRAPH_CREATE</font>, the use of neighborhood collective  
communication is restricted to adjacency matrices, where the number of  
edges between any two <font face="sans-serif"> MPI</font> processes is defined to be the same for both  
<font face="sans-serif"> MPI</font> processes (i.e., with a symmetric adjacency matrix). In this case,  
the order of neighbors in the send and  
receive buffers is defined as the sequence of neighbors as returned by  
<font face="sans-serif"> MPI_GRAPH_NEIGHBORS</font>. Note that graph topologies  
should generally be replaced by the distributed graph topologies.  
<P> 
For a Cartesian topology, created with <font face="sans-serif"> MPI_CART_CREATE</font>, the  
sequence of neighbors in the send and receive buffers at each <font face="sans-serif"> MPI</font> process is  
defined by the order of the dimensions, first the neighbor in the negative  
direction and then in the positive direction with displacement 1.  The  
numbers of sources and destinations in the communication routines are  
<font face="sans-serif"> 2*ndims</font> with <font face="sans-serif"> ndims</font> defined in  
<font face="sans-serif"> MPI_CART_CREATE</font>. If a neighbor does not exist, i.e., at the  
border of a Cartesian topology in the case of a nonperiodic virtual  
grid dimension (i.e., <font face="sans-serif"> periods[<i>...</i>]=false</font>), then this neighbor is  
defined to be <font face="sans-serif"> MPI_PROC_NULL</font>.  
<P> 
If a neighbor in any of the functions is <font face="sans-serif"> MPI_PROC_NULL</font>, then  
the neighborhood collective communication behaves like a point-to-point  
communication with <font face="sans-serif"> MPI_PROC_NULL</font> in this direction. That is,  
the buffer is still part of the sequence of neighbors but it is neither  
communicated nor updated.    
<P> 
<ul> 
</ul> 

<P>
<hr>
<a href="node233.htm#Node233"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node220.htm#Node220"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node235.htm#Node235"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node220.htm#Node220"> Virtual Topologies for <font face="sans-serif"> MPI</font> Processes</a>
<b>Next: </b><a href="node235.htm#Node235"> Neighborhood Gather</a>
<b>Previous: </b><a href="node233.htm#Node233"> Low-Level Topology Functions</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
