<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-inquiry/inquiry-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi5-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi50-report-html.idx --lstlisting -basedef mpi5defs.txt -o mpi50-report.tex mpi-reporthtml.tex 
-->
<title>Error Codes and Classes</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h1><span id="Node260">10.4. Error Codes and Classes</span></h1>
<a href="node259.htm#Node259"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node244.htm#Node244"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node261.htm#Node261"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node244.htm#Node244"> <font face="sans-serif"> MPI</font> Environmental Management</a>
<b>Next: </b><a href="node261.htm#Node261"> Error Classes, Error Codes, and Error Handlers</a>
<b>Previous: </b><a href="node259.htm#Node259"> Freeing Errorhandlers and Retrieving Error Strings</a>
<p>
  
  
The error codes returned by <font face="sans-serif"> MPI</font> are left entirely to the  
implementation (with the  
exception of <span style="font-size:0.900em;"><font face="sans-serif"> MPI_SUCCESS</span></font>).  This is done to allow an implementation to  
provide as much information as possible in the error code (for use with  
<font face="sans-serif"> MPI_ERROR_STRING</font>).  
<P> 
All <font face="sans-serif"> MPI</font> function calls shall return <span style="font-size:0.900em;"><font face="sans-serif"> MPI_SUCCESS</span></font> if and only if the specification of that  
function has been fulfilled at the point of return.  For multiple completion functions, if the  
function returns <span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_IN_STATUS</span></font>, the error code in each status object shall be set to  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_SUCCESS</span></font> if and only if the specification of the operation represented by the  
corresponding <font face="sans-serif"> MPI_Request</font> has been fulfilled at the point of return.  
<P> 
When an operation raises an error, it may not satisfy its specification (for example,  
a synchronizing operation may not have synchronized) and the content of the output buffers, targeted  
memory, or output parameters is undefined. However, a valid error code shall always be set when an operation  
raises an error, whether in the return value, error field in the status object, or element in an array of  
error codes.  
<P> 
To make it possible for an application to interpret an error code, the routine  
<font face="sans-serif"> MPI_ERROR_CLASS</font>converts any error code into one of a small set of standard error  
codes, called <b> error classes</b>.  
Valid error classes are shown in Table <a href="node260.htm#Table7">7</a>  
and Table <a href="node260.htm#Table8">8</a>.  
<P> 
<br> 
<b>Table 7: </b><span id="Table7">Error classes (Part 1)</span><P> 
  
  
<div style="text-align:center">  
<TABLE><TR><TD ALIGN="LEFT"><span style="font-size:0.900em;"><font face="sans-serif"> MPI_SUCCESS</span></font></TD><TD ALIGN="LEFT"> No error</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_ACCESS</span></font></TD><TD ALIGN="LEFT"> Permission denied</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_AMODE</span></font></TD><TD ALIGN="LEFT"> Error related to the <font face="sans-serif"> amode</font>  
                                        passed to <font face="sans-serif"> MPI_FILE_OPEN</font></TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_ARG</span></font></TD><TD ALIGN="LEFT"> Invalid argument of some other kind</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_ASSERT</span></font></TD><TD ALIGN="LEFT"> Invalid assertion argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_BAD_FILE</span></font></TD><TD ALIGN="LEFT"> Invalid file name  
                                        (e.g., path name too long)</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_BASE</span></font></TD><TD ALIGN="LEFT"> Invalid base passed to  
                                        <font face="sans-serif"> MPI_FREE_MEM</font></TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_BUFFER</span></font></TD><TD ALIGN="LEFT"> Invalid buffer pointer argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_COMM</span></font></TD><TD ALIGN="LEFT"> Invalid communicator argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_CONVERSION</span></font></TD><TD ALIGN="LEFT"> An error occurred in a user supplied  
                                        data conversion function</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_COUNT</span></font></TD><TD ALIGN="LEFT"> Invalid count argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_DIMS</span></font></TD><TD ALIGN="LEFT"> Invalid dimension argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_DISP</span></font></TD><TD ALIGN="LEFT"> Invalid displacement argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_DUP_DATAREP</span></font></TD><TD ALIGN="LEFT"> Conversion functions could not be  
                                        registered because a data  
                                        representation identifier that was  
                                        already defined was passed to  
                                        <font face="sans-serif"> MPI_REGISTER_DATAREP</font></TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_ERRHANDLER</span></font></TD><TD ALIGN="LEFT"> Invalid error handler argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_FILE</span></font></TD><TD ALIGN="LEFT"> Invalid file handle argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_FILE_EXISTS</span></font></TD><TD ALIGN="LEFT"> File exists</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_FILE_IN_USE</span></font></TD><TD ALIGN="LEFT"> File operation could not be completed,  
                                        as the file is currently open by some  
                                        process</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_GROUP</span></font></TD><TD ALIGN="LEFT"> Invalid group argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_INFO</span></font></TD><TD ALIGN="LEFT"> Invalid info argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_INFO_KEY</span></font></TD><TD ALIGN="LEFT"> Key longer than  
                                        <font face="sans-serif"> MPI_MAX_INFO_KEY</font></TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_INFO_NOKEY</span></font></TD><TD ALIGN="LEFT"> Invalid key passed to  
                                        <font face="sans-serif"> MPI_INFO_DELETE</font></TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_INFO_VALUE</span></font></TD><TD ALIGN="LEFT"> Value longer than  
                                        <font face="sans-serif"> MPI_MAX_INFO_VAL</font></TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_IN_STATUS</span></font></TD><TD ALIGN="LEFT"> Error code is in status</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_INTERN</span></font></TD><TD ALIGN="LEFT"> Internal <font face="sans-serif"> MPI</font> (implementation) error</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_IO</span></font></TD><TD ALIGN="LEFT"> Other I/O error</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_KEYVAL</span></font></TD><TD ALIGN="LEFT"> Invalid keyval argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_LOCKTYPE</span></font></TD><TD ALIGN="LEFT"> Invalid locktype argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_NAME</span></font></TD><TD ALIGN="LEFT"> Invalid service name passed to  
                                        <font face="sans-serif"> MPI_LOOKUP_NAME</font></TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_NO_MEM</span></font></TD><TD ALIGN="LEFT"><font face="sans-serif"> MPI_ALLOC_MEM</font>  
                                        failed because memory is exhausted</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_NO_SPACE</span></font></TD><TD ALIGN="LEFT"> Not enough space</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_NO_SUCH_FILE</span></font></TD><TD ALIGN="LEFT"> File does not exist</TD></TR> 
<TR><TD ALIGN="LEFT">  
<P> 
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_NOT_SAME</span></font></TD><TD ALIGN="LEFT"> Collective argument not identical on  
                                        all processes, or collective routines  
                                        called in a different order by  
                                        different processes  
<P> 
</TD></TR></TABLE> 
</div>  
<br> 
<b>Table 8: </b><span id="Table8">Error classes (Part 2)</span><P> 
  
  
<div style="text-align:center">  
<TABLE><TR><TD ALIGN="LEFT"><span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_OP</span></font></TD><TD ALIGN="LEFT"> Invalid operation argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_OTHER</span></font></TD><TD ALIGN="LEFT"> Known error not in this list</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_PENDING</span></font></TD><TD ALIGN="LEFT"> Pending request</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_PORT</span></font></TD><TD ALIGN="LEFT"> Invalid port name passed to  
                                        <font face="sans-serif"> MPI_COMM_CONNECT</font></TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_PROC_ABORTED</span></font></TD><TD ALIGN="LEFT"> Operation failed because a peer  
                                        process has aborted</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_QUOTA</span></font></TD><TD ALIGN="LEFT"> Quota exceeded</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_RANK</span></font></TD><TD ALIGN="LEFT"> Invalid rank argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_READ_ONLY</span></font></TD><TD ALIGN="LEFT"> Read-only file or file system</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_REQUEST</span></font></TD><TD ALIGN="LEFT"> Invalid request argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_RMA_ATTACH</span></font></TD><TD ALIGN="LEFT"> Memory cannot be attached  
                                        (e.g., because of resource exhaustion)</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_RMA_CONFLICT</span></font></TD><TD ALIGN="LEFT"> Conflicting accesses to window</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_RMA_FLAVOR</span></font></TD><TD ALIGN="LEFT"> Passed window has the wrong  
                                        flavor for the called function</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_RMA_RANGE</span></font></TD><TD ALIGN="LEFT"> Target memory is not part of  
                                        the window (in the case of a window  
                                        created with  
                                        <font face="sans-serif"> MPI_WIN_CREATE_DYNAMIC</font>,  
                                        target memory is not attached)</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_RMA_SHARED</span></font></TD><TD ALIGN="LEFT"> Memory cannot be shared  
                                        (e.g., some process in the group of the  
                                        specified communicator cannot expose  
                                        shared memory)</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_RMA_SYNC</span></font></TD><TD ALIGN="LEFT"> Wrong synchronization of <font face="sans-serif"> RMA</font> calls</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_ROOT</span></font></TD><TD ALIGN="LEFT"> Invalid root argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_SERVICE</span></font></TD><TD ALIGN="LEFT"> Invalid service name passed to  
                                        <font face="sans-serif"> MPI_UNPUBLISH_NAME</font></TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_SESSION</span></font></TD><TD ALIGN="LEFT"> Invalid session argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_SIZE</span></font></TD><TD ALIGN="LEFT"> Invalid size argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_SPAWN</span></font></TD><TD ALIGN="LEFT"> Error in spawning processes</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_TAG</span></font></TD><TD ALIGN="LEFT"> Invalid tag argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_TOPOLOGY</span></font></TD><TD ALIGN="LEFT"> Invalid topology argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_TRUNCATE</span></font></TD><TD ALIGN="LEFT"> Message truncated on receive</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_TYPE</span></font></TD><TD ALIGN="LEFT"> Invalid datatype argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_UNKNOWN</span></font></TD><TD ALIGN="LEFT"> Unknown error</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_UNSUPPORTED_DATAREP</span></font>  
</TD><TD ALIGN="LEFT"> Unsupported <font face="sans-serif"> datarep</font> passed to  
                                        <font face="sans-serif"> MPI_FILE_SET_VIEW</font></TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_UNSUPPORTED_OPERATION</span></font>  
</TD><TD ALIGN="LEFT"> Unsupported operation, such as  
                                        seeking on a file that supports  
                                        sequential access only</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_VALUE_TOO_LARGE</span></font></TD><TD ALIGN="LEFT"> Value is too large to store</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_WIN</span></font></TD><TD ALIGN="LEFT"> Invalid window argument</TD></TR> 
<TR><TD ALIGN="LEFT">  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_LASTCODE</span></font></TD><TD ALIGN="LEFT"> Last error code</TD></TR> 
<TR><TD></TD><TD></TD></TR></TABLE> 
</div>  
The error classes are a subset of the error codes: an <font face="sans-serif"> MPI</font> function  
may return an error class number; and the function  
<font face="sans-serif"> MPI_ERROR_STRING</font> can be used to compute the error string  
associated with an error class.  
The values  
defined for <font face="sans-serif"> MPI</font> error classes are valid <font face="sans-serif"> MPI</font> error codes.  
<P> 
The error codes satisfy,  
<p><i>0 = <span style="font-size:0.900em;"><span style="font-family:sans-serif;"> MPI_SUCCESS</span></span> &lt; <span style="font-size:0.900em;"><span style="font-family:sans-serif;"> MPI_ERR_...</span></span> &le; <span style="font-size:0.900em;"><span style="font-family:sans-serif;"> MPI_ERR_LASTCODE</span></span>. 
</i><p><P> 
 
<br> 
<em> Rationale.</em>  
<P> 
The difference between <span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_UNKNOWN</span></font> and <span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_OTHER</span></font> is  
that <font face="sans-serif"> MPI_ERROR_STRING</font>  
can return useful information about  
<span style="font-size:0.900em;"><font face="sans-serif"> MPI_ERR_OTHER</span></font>.  
<P> 
Note that <span style="font-size:0.900em;"><font face="sans-serif"> MPI_SUCCESS</span></font> <i>= 0</i> is necessary to be  
consistent with C practice; the separation of error classes and error codes  
allows us to define the error classes this way.  Having a known  
<font face="sans-serif"> LASTCODE</font> is often a nice sanity check as well.  
 (<em> End of rationale.</em>) <br> 
 
<br> 
<em> Advice  
        to implementors.</em>  
<P> 
Note that all <font face="sans-serif"> <span style="font-size:0.900em;"> MPI_T_</span></font> return codes, which must have the prefix <font face="sans-serif"> <span style="font-size:0.900em;"> MPI_T_ERR_</span></font>, are also required to satisfy  
<p><i>0 = <span style="font-family:sans-serif;"> MPI_SUCCESS</span> &lt; <span style="font-family:sans-serif;"> <span style="font-size:0.900em;"> MPI_T_ERR_ XXX</span></span> &le; <span style="font-family:sans-serif;"> MPI_ERR_LASTCODE</span>. 
</i><p><P> 
as described in Section <a href="node443.htm#Node443">Return Codes for the <font face="sans-serif"> MPI</font> Tool Information Interface</a>.  
 (<em> End of advice to implementors.</em>) <br> 
<TABLE><TR><TD COLSPAN=2>MPI_ERROR_CLASS(<span style="white-space:nowrap">errorcode</span>, <span style="white-space:nowrap">errorclass</span>)</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> IN</span> errorcode</TD><TD>Error code returned by an <font face="sans-serif"> MPI</font> routine</TD></TR>  
<TR><TD><span style="font-size:0.900em;"> OUT</span> errorclass</TD><TD>Error class associated with <font face="sans-serif"> errorcode</font></TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Error_class(int errorcode, int *errorclass) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Error_class(errorcode, errorclass, ierror) <br> INTEGER, INTENT(IN) :: <span style="white-space:nowrap">errorcode</span><br>INTEGER, INTENT(OUT) :: <span style="white-space:nowrap">errorclass</span><br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_ERROR_CLASS(ERRORCODE, ERRORCLASS, IERROR) <br> <br>INTEGER <span style="white-space:nowrap">ERRORCODE</span>, <span style="white-space:nowrap">ERRORCLASS</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
The function <font face="sans-serif"> MPI_ERROR_CLASS</font> maps each standard error code (error  
class) onto itself.  
<P> 
This function must always be thread-safe, as defined in  
Section <a href="node283.htm#Node283"><font face="sans-serif"> MPI</font> and Threads</a>.  
It is one of the few routines that may be called before  
<font face="sans-serif"> MPI</font> is initialized or after <font face="sans-serif"> MPI</font> is finalized.  
<P> 

<P>
<hr>
<a href="node259.htm#Node259"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node244.htm#Node244"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node261.htm#Node261"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node244.htm#Node244"> <font face="sans-serif"> MPI</font> Environmental Management</a>
<b>Next: </b><a href="node261.htm#Node261"> Error Classes, Error Codes, and Error Handlers</a>
<b>Previous: </b><a href="node259.htm#Node259"> Freeing Errorhandlers and Retrieving Error Strings</a>
<p>
<HR>
Return to <A HREF="node627.htm">MPI-5.0 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-5.0 of June 9, 2025<BR>
HTML Generated on March 2, 2025
</FONT>
</body>
</html>
